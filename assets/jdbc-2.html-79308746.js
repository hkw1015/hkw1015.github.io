import{_ as e,E as t,Z as p,$ as o,a0 as n,a1 as s,a3 as c,a5 as i}from"./framework-1fb77053.js";const l={},u=n("h2",{id:"_0-准备工作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-准备工作","aria-hidden":"true"},"#"),s(" 0. 准备工作")],-1),r=n("p",null,"由于这里使用的是 MySQL 8，所以以 MySQL 8 做示例",-1),d={href:"https://dev.mysql.com/downloads/connector/j/",target:"_blank",rel:"noopener noreferrer"},k=i(`<figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914152740939.png" alt="image-20210914152740939" tabindex="0" loading="lazy"><figcaption>image-20210914152740939</figcaption></figure><h2 id="_1-要素一-driver-接口实现类" tabindex="-1"><a class="header-anchor" href="#_1-要素一-driver-接口实现类" aria-hidden="true">#</a> 1. 要素一：Driver 接口实现类</h2><p>Driver 接口介绍</p><p>（1）java.sql.Driver 接口是所有 JDBC 驱动程序要实现的接口，这个接口是提供给数据库厂商使用的，不同的数据库厂商提供不同的实现。</p><p>（2）在程序中不需要直接去访问实现了 Driver 接口的类，而是由驱动程序管理器类（java.sql.DriverManager）去调用这些 Driver 实现。</p><p>（3）Oracle 的驱动：oracle.jdbc.driver.OracleDriver</p><p><strong>MySQL 的驱动：com.mysql.jdbc.Driver（mysql 8 之前）和 com.mysql.cj.jdbc.Driver（mysql 8 之后）</strong></p><h2 id="_2-要素二-url" tabindex="-1"><a class="header-anchor" href="#_2-要素二-url" aria-hidden="true">#</a> 2. 要素二：URL</h2><p>（1）JDBC URL 用于标识一个被注册的驱动程序，驱动程序管理器通过这个 URL 选择正确的驱动程序，从而建立到数据库的连接。</p><p>（2）JDBC URL 的标准由三部分组成，各部分间用冒号分隔。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jdbc:子协议:子名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>协议</strong>：JDBC URL中的协议总是 jdbc</li><li><strong>子协议</strong>：子协议用于标识一个数据库驱动程序</li><li><strong>子名称</strong>：一种标识数据库的方法，子名称可以依不同的子协议而变化，用子名称的目的是为了定位数据库提供足够的信息，包含主机名（对应服务端的 ip 地址），端口号，数据库名。</li></ul><p>（3）举例</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914153505421.png" alt="image-20210914153505421" tabindex="0" loading="lazy"><figcaption>image-20210914153505421</figcaption></figure><p>（4）MySQL 的连接 URL 编写方式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>jdbc:mysql://主机名称:mysql服务端口号/数据库名称?参数=值&amp;参数=值
比如：
jdbc:mysql://localhost:3306/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-要素三-用户名和密码" tabindex="-1"><a class="header-anchor" href="#_3-要素三-用户名和密码" aria-hidden="true">#</a> 3. 要素三：用户名和密码</h2><p>举例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>username: root
password: 123456
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-数据库连接方式举例" tabindex="-1"><a class="header-anchor" href="#_4-数据库连接方式举例" aria-hidden="true">#</a> 4. 数据库连接方式举例</h2><p><strong>准备工作</strong></p><p>第一步，Eclipse 中新建一个 java 工程</p><p>第二步，右键工程，New &gt; Folder，取名 lib</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914153923956.png" alt="image-20210914153923956" tabindex="0" loading="lazy"><figcaption>image-20210914153923956</figcaption></figure><p>第三步，将下载的 MySQL 8 的数据库驱动压缩包解压后，将其中的驱动 jar 包复制到 lib 目录下</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914153957312.png" alt="image-20210914153957312" tabindex="0" loading="lazy"><figcaption>image-20210914153957312</figcaption></figure><p>第四步，右键 lib 下的 mysql-connector-java-8.0.21.jar 包，选择 Build Path &gt; Add to Build Path</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914154051898.png" alt="image-20210914154051898" tabindex="0" loading="lazy"><figcaption>image-20210914154051898</figcaption></figure><p>可以看到添加成功后的效果</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210914154111776.png" alt="image-20210914154111776" tabindex="0" loading="lazy"><figcaption>image-20210914154111776</figcaption></figure><h3 id="_4-1-连接方式一" tabindex="-1"><a class="header-anchor" href="#_4-1-连接方式一" aria-hidden="true">#</a> 4.1 连接方式一</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取数据库的方式一</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token comment">// 获取 Driver 实现类对象</span>
	<span class="token comment">// MySQL 8 以上，driver 需要换成 com.mysql.cj.jdbc.Driver</span>
	<span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>cj<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// MySQL8以上，url里后缀需要追加上?serverTimezone=GMT%2B8</span>
	<span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/students?serverTimezone=GMT%2B8&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 将用户名和密码封装在 Properties 中</span>
	<span class="token class-name">Properties</span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">Connection</span> conn <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>	

	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-连接方式二" tabindex="-1"><a class="header-anchor" href="#_4-2-连接方式二" aria-hidden="true">#</a> 4.2 连接方式二</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取数据库的方式二</span>
<span class="token comment">// 对方式一的迭代，不出现第三方的 API，使得程序具有更好的可移植性</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1.获取 Driver 实现类对象，使用反射来实现</span>
	<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 2.提供要连接的数据库的 url</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/students?serverTimezone=GMT%2B8&quot;</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 3.提供需要的用户名和密码</span>
    <span class="token class-name">Properties</span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    info<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-连接方式三" tabindex="-1"><a class="header-anchor" href="#_4-3-连接方式三" aria-hidden="true">#</a> 4.3 连接方式三</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取数据库的方式三</span>
<span class="token comment">// 使用 DriverManager</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1.获取 Driver 实现类对象，使用反射来实现</span>
	<span class="token class-name">Class</span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Driver</span> driver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Driver</span><span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 2.提供另外三个连接的基本信息</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/students?serverTimezone=GMT%2B8&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 3.注册驱动</span>
    <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">deregisterDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-连接方式四" tabindex="-1"><a class="header-anchor" href="#_4-4-连接方式四" aria-hidden="true">#</a> 4.4 连接方式四</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取数据库的方式四</span>
<span class="token comment">// 可以只是加载驱动，不用显示地注册驱动了</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1.提供另外三个连接的基本信息</span>
	<span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/students?serverTimezone=GMT%2B8&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
		
    <span class="token comment">// 2.加载Driver</span>
    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 虽说省了还是支持 MySQL,但是最好别省</span>
    <span class="token comment">// 相较于方式三，可以省略如下的操作：</span>
    <span class="token comment">// Driver driver = (Driver) clazz.newInstance();</span>
    <span class="token comment">// 注册驱动</span>
    <span class="token comment">// DriverManager.deregisterDriver(driver);</span>
    <span class="token comment">// 为什么?因为在 mysql 的实现类中，静态代码块中声明了 DriverManager.deregisterDriver(new Driver()); 的操作</span>
    
    <span class="token comment">// 4.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-连接方式五-最终版" tabindex="-1"><a class="header-anchor" href="#_4-5-连接方式五-最终版" aria-hidden="true">#</a> 4.5 连接方式五（最终版）</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 获取数据库的方式五(final版)</span>
<span class="token comment">// 将数据库连接需要的 4 个基本信息声明在配置文件中，通过读取配置文件的方式，获取连接</span>
<span class="token doc-comment comment">/**
 * 此方法的好处?
 * 1.实现了数据和代码的分离，实现了解耦
 * 2.如果需要修改配置文件信息，可以避免程序重新打包
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testConnection5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 1.读取配置文件中的 4 个基本信息</span>
    <span class="token class-name">InputStream</span> is <span class="token operator">=</span> <span class="token class-name">ConnectionTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Properties</span> pro <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pro<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">String</span> user <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> password <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> driverClass <span class="token operator">=</span> pro<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;driverClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 2.加载驱动</span>
    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// 3.获取连接</span>
    <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function m(v,b){const a=t("ExternalLinkIcon");return p(),o("div",null,[u,r,n("p",null,[s("MySQL8 数据库驱动下载地址："),n("a",d,[s("https://dev.mysql.com/downloads/connector/j/"),c(a)])]),k])}const h=e(l,[["render",m],["__file","jdbc-2.html.vue"]]);export{h as default};
