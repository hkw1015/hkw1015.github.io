import{_ as n,Z as s,$ as a,a5 as t}from"./framework-1fb77053.js";const p={},c=t(`<p><strong>（1）考虑事务以后的数据库操作</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1、获取数据库的连接</span>
<span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 方式1：手动获取连接 方式2：数据库连接池</span>
conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 体现事务</span>

<span class="token comment">// 2、如下的多个 DML 操作，作为一个事务出现</span>
操作<span class="token number">1</span>：需要使用通用的增删改查操作 <span class="token comment">// 通用的增删改查操作如何实现？</span>
操作<span class="token number">2</span>：需要使用通用的增删改查操作 <span class="token comment">// 方式1：手动使用 PreparedStatement 实现</span>
操作<span class="token number">3</span>：需要使用通用的增删改查操作 <span class="token comment">// 方式2：使用 dbUtils.jar 中的 QueryRunner 方法</span>
conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3、如果出现异常，则</span>
conn<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 4、关闭资源</span>
<span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">closeResource</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 方式1：手动关闭资源 方式2：使用 DbUtils 类的关闭方法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）使用数据库连接池的好处</strong></p><ul><li>提高程序的响应速度（减少了创建连接响应的时间）</li><li>降低资源的消耗（可以重复使用已经提供好的连接）</li><li>便于连接的管理</li></ul>`,4),e=[c];function o(l,i){return s(),a("div",null,e)}const k=n(p,[["render",o],["__file","jdbc-9.html.vue"]]);export{k as default};
