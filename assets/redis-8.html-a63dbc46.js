const n=JSON.parse('{"key":"v-a500c27c","path":"/database/redis/redis-8.html","title":"Jedis 实例","lang":"zh-CN","frontmatter":{"title":"Jedis 实例","date":"2021-12-11T00:00:00.000Z","category":"Redis","tag":["Redis"],"description":"完成一个手机验证码功能： /** * 发送验证码要求： * 1、输入手机号，点击发送后随机生成 6 位数字码，2 分钟有效 * 2、输入验证码，点击验证，返回成功或者失败 * 3、每个手机号每天只能输入 3 次（即发送三次验证码） */ public class VerifyCodeUtil { /** * jedis 实例 */ private static final Jedis jedis = new Jedis(\\"ip地址\\", 6379); /** * 验证码相关 key 前缀 */ private static final String VERIFY_CODE_PREFIX = \\"verifycode:\\"; /** * 发送验证码 * * @param telephone 手机号 */ public static String sendVerifyCode(String telephone) { jedis.auth(\\"*****\\"); // 获取当天手机验证码的发送次数 String count = jedis.get(VERIFY_CODE_PREFIX + telephone + \\":count\\"); if (Objects.isNull(count)) { // 首次发送验证码 // 设置过期时间为 当前时间 到 第二天 的 00:00:00 时刻 Duration duration = Duration.between(LocalDateTime.now(), LocalDate.now().plusDays(1).atTime(0, 0, 0)); int expireTime = Long.valueOf(60 * duration.toMinutes()).intValue(); jedis.setex(VERIFY_CODE_PREFIX + telephone + \\":count\\", expireTime, \\"1\\"); } else if (Integer.parseInt(count) &gt;= 3) { // 当前手机号验证码发送次数超过 3 次 return \\"同一天内验证码发送次数不得超过 3 次！\\"; } // 生成随机 6 位验证码，设置过期时间 2 分钟 String verifyCode = genRandomNumStr(6); jedis.setex(VERIFY_CODE_PREFIX + telephone + \\":code\\", 2 * 60, verifyCode); // 发送验证码次数 + 1 if (Objects.nonNull(count)) { jedis.incrBy(VERIFY_CODE_PREFIX + telephone + \\":count\\", 1L); } jedis.close(); return \\"您的验证码为：\\" + verifyCode + \\"，有效期：2 分钟！\\"; } /** * 验证手机号和验证码 * * @param telephone 手机号 * @param verifyCode 验证码 * @return */ public static String checkVerifyCode(String telephone, String verifyCode) { jedis.auth(\\"*****\\"); String resultMsg; String code = jedis.get(VERIFY_CODE_PREFIX + telephone + \\":code\\"); if (Objects.equals(code, verifyCode)) { resultMsg = \\"成功！\\"; } else { resultMsg = \\"失败！\\"; } return resultMsg; } /** * 生成一个定长的随机数字组成的字符 * * @param length 字符的长度 * @return 定长的随机数字组成的字符 */ private static String genRandomNumStr(int length) { StringBuilder str = new StringBuilder(); Random random = new Random(); for (int i = 0; i &lt; length; i++) { str.append(random.nextInt(10)); } return str.toString(); } }","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/database/redis/redis-8.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"Jedis 实例"}],["meta",{"property":"og:description","content":"完成一个手机验证码功能： /** * 发送验证码要求： * 1、输入手机号，点击发送后随机生成 6 位数字码，2 分钟有效 * 2、输入验证码，点击验证，返回成功或者失败 * 3、每个手机号每天只能输入 3 次（即发送三次验证码） */ public class VerifyCodeUtil { /** * jedis 实例 */ private static final Jedis jedis = new Jedis(\\"ip地址\\", 6379); /** * 验证码相关 key 前缀 */ private static final String VERIFY_CODE_PREFIX = \\"verifycode:\\"; /** * 发送验证码 * * @param telephone 手机号 */ public static String sendVerifyCode(String telephone) { jedis.auth(\\"*****\\"); // 获取当天手机验证码的发送次数 String count = jedis.get(VERIFY_CODE_PREFIX + telephone + \\":count\\"); if (Objects.isNull(count)) { // 首次发送验证码 // 设置过期时间为 当前时间 到 第二天 的 00:00:00 时刻 Duration duration = Duration.between(LocalDateTime.now(), LocalDate.now().plusDays(1).atTime(0, 0, 0)); int expireTime = Long.valueOf(60 * duration.toMinutes()).intValue(); jedis.setex(VERIFY_CODE_PREFIX + telephone + \\":count\\", expireTime, \\"1\\"); } else if (Integer.parseInt(count) &gt;= 3) { // 当前手机号验证码发送次数超过 3 次 return \\"同一天内验证码发送次数不得超过 3 次！\\"; } // 生成随机 6 位验证码，设置过期时间 2 分钟 String verifyCode = genRandomNumStr(6); jedis.setex(VERIFY_CODE_PREFIX + telephone + \\":code\\", 2 * 60, verifyCode); // 发送验证码次数 + 1 if (Objects.nonNull(count)) { jedis.incrBy(VERIFY_CODE_PREFIX + telephone + \\":count\\", 1L); } jedis.close(); return \\"您的验证码为：\\" + verifyCode + \\"，有效期：2 分钟！\\"; } /** * 验证手机号和验证码 * * @param telephone 手机号 * @param verifyCode 验证码 * @return */ public static String checkVerifyCode(String telephone, String verifyCode) { jedis.auth(\\"*****\\"); String resultMsg; String code = jedis.get(VERIFY_CODE_PREFIX + telephone + \\":code\\"); if (Objects.equals(code, verifyCode)) { resultMsg = \\"成功！\\"; } else { resultMsg = \\"失败！\\"; } return resultMsg; } /** * 生成一个定长的随机数字组成的字符 * * @param length 字符的长度 * @return 定长的随机数字组成的字符 */ private static String genRandomNumStr(int length) { StringBuilder str = new StringBuilder(); Random random = new Random(); for (int i = 0; i &lt; length; i++) { str.append(random.nextInt(10)); } return str.toString(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2021-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Jedis 实例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":1.68,"words":504},"filePathRelative":"database/redis/redis-8.md","localizedDate":"2021年12月11日","excerpt":"<p><strong>完成一个手机验证码功能</strong>：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token doc-comment comment\\">/**\\n * 发送验证码要求：\\n * 1、输入手机号，点击发送后随机生成 6 位数字码，2 分钟有效\\n * 2、输入验证码，点击验证，返回成功或者失败\\n * 3、每个手机号每天只能输入 3 次（即发送三次验证码）\\n */</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">VerifyCodeUtil</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * jedis 实例\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">Jedis</span> jedis <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Jedis</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ip地址\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6379</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 验证码相关 key 前缀\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token class-name\\">String</span> <span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"verifycode:\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 发送验证码\\n     *\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">telephone</span> 手机号\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">sendVerifyCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> telephone<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">auth</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"*****\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 获取当天手机验证码的发送次数</span>\\n        <span class=\\"token class-name\\">String</span> count <span class=\\"token operator\\">=</span> jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">+</span> telephone <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":count\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Objects</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNull</span><span class=\\"token punctuation\\">(</span>count<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// 首次发送验证码</span>\\n            <span class=\\"token comment\\">// 设置过期时间为 当前时间 到 第二天 的 00:00:00 时刻</span>\\n            <span class=\\"token class-name\\">Duration</span> duration <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Duration</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">between</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">LocalDateTime</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">LocalDate</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">plusDays</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">atTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">int</span> expireTime <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Long</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">valueOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">60</span> <span class=\\"token operator\\">*</span> duration<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toMinutes</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">intValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setex</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">+</span> telephone <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":count\\"</span><span class=\\"token punctuation\\">,</span> expireTime<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Integer</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseInt</span><span class=\\"token punctuation\\">(</span>count<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token comment\\">// 当前手机号验证码发送次数超过 3 次</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"同一天内验证码发送次数不得超过 3 次！\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n\\n        <span class=\\"token comment\\">// 生成随机 6 位验证码，设置过期时间 2 分钟</span>\\n        <span class=\\"token class-name\\">String</span> verifyCode <span class=\\"token operator\\">=</span> <span class=\\"token function\\">genRandomNumStr</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setex</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">+</span> telephone <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":code\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">,</span> verifyCode<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 发送验证码次数 + 1</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Objects</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nonNull</span><span class=\\"token punctuation\\">(</span>count<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">incrBy</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">+</span> telephone <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":count\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1L</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"您的验证码为：\\"</span> <span class=\\"token operator\\">+</span> verifyCode <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"，有效期：2 分钟！\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 验证手机号和验证码\\n     *\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">telephone</span>  手机号\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">verifyCode</span> 验证码\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">checkVerifyCode</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> telephone<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> verifyCode<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">auth</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"*****\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token class-name\\">String</span> resultMsg<span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">String</span> code <span class=\\"token operator\\">=</span> jedis<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token constant\\">VERIFY_CODE_PREFIX</span> <span class=\\"token operator\\">+</span> telephone <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\":code\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Objects</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>code<span class=\\"token punctuation\\">,</span> verifyCode<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            resultMsg <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"成功！\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            resultMsg <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"失败！\\"</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> resultMsg<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 生成一个定长的随机数字组成的字符\\n     *\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">length</span> 字符的长度\\n     * <span class=\\"token keyword\\">@return</span> 定长的随机数字组成的字符\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">genRandomNumStr</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">StringBuilder</span> str <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">StringBuilder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Random</span> random <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Random</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">append</span><span class=\\"token punctuation\\">(</span>random<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">nextInt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">return</span> str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
