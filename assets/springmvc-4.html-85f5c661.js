const e=JSON.parse('{"key":"v-698bf70c","path":"/java/framework/springmvc/springmvc-4.html","title":"扩展功能","lang":"zh-CN","frontmatter":{"title":"扩展功能","date":"2021-09-08T00:00:00.000Z","category":"常用框架","tag":["SpringMVC"],"description":"1. HttpMessageConverter HttpMessageConverter，报文信息转换器，将请求报文转换为 Java 对象，或将 Java 对象转换为响应报文 HttpMessageConverter提供了两个注解和两个类型：@RequestBody，@ResponseBody，RequestEntity， ResponseEntity 1.1 @RequestBody @RequestBody 可以获取请求体，需要在控制器方法设置一个形参，使用 @RequestBody 进行标识，当前请求的请求体就会为当前注解所标识的形参赋值","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/springmvc/springmvc-4.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"扩展功能"}],["meta",{"property":"og:description","content":"1. HttpMessageConverter HttpMessageConverter，报文信息转换器，将请求报文转换为 Java 对象，或将 Java 对象转换为响应报文 HttpMessageConverter提供了两个注解和两个类型：@RequestBody，@ResponseBody，RequestEntity， ResponseEntity 1.1 @RequestBody @RequestBody 可以获取请求体，需要在控制器方法设置一个形参，使用 @RequestBody 进行标识，当前请求的请求体就会为当前注解所标识的形参赋值"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:published_time","content":"2021-09-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"扩展功能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. HttpMessageConverter","slug":"_1-httpmessageconverter","link":"#_1-httpmessageconverter","children":[{"level":3,"title":"1.1 @RequestBody","slug":"_1-1-requestbody","link":"#_1-1-requestbody","children":[]},{"level":3,"title":"1.2 RequestEntity","slug":"_1-2-requestentity","link":"#_1-2-requestentity","children":[]},{"level":3,"title":"1.3 @ResponseBody","slug":"_1-3-responsebody","link":"#_1-3-responsebody","children":[]},{"level":3,"title":"1.4 SpringMVC 处理 json","slug":"_1-4-springmvc-处理-json","link":"#_1-4-springmvc-处理-json","children":[]},{"level":3,"title":"1.5 SpringMVC 处理 ajax","slug":"_1-5-springmvc-处理-ajax","link":"#_1-5-springmvc-处理-ajax","children":[]},{"level":3,"title":"1.6 @RestController 注解","slug":"_1-6-restcontroller-注解","link":"#_1-6-restcontroller-注解","children":[]},{"level":3,"title":"1.7 ResponseEntity","slug":"_1-7-responseentity","link":"#_1-7-responseentity","children":[]}]},{"level":2,"title":"2. 文件上传和下载","slug":"_2-文件上传和下载","link":"#_2-文件上传和下载","children":[{"level":3,"title":"2.1 文件下载","slug":"_2-1-文件下载","link":"#_2-1-文件下载","children":[]},{"level":3,"title":"2.2 文件上传","slug":"_2-2-文件上传","link":"#_2-2-文件上传","children":[]}]},{"level":2,"title":"3. 拦截器","slug":"_3-拦截器","link":"#_3-拦截器","children":[{"level":3,"title":"3.1 拦截器的配置","slug":"_3-1-拦截器的配置","link":"#_3-1-拦截器的配置","children":[]},{"level":3,"title":"3.2 拦截器的三个抽象方法","slug":"_3-2-拦截器的三个抽象方法","link":"#_3-2-拦截器的三个抽象方法","children":[]},{"level":3,"title":"3、多个拦截器的执行顺序","slug":"_3、多个拦截器的执行顺序","link":"#_3、多个拦截器的执行顺序","children":[]}]},{"level":2,"title":"4. 异常处理器","slug":"_4-异常处理器","link":"#_4-异常处理器","children":[{"level":3,"title":"4.1 基于配置的异常处理","slug":"_4-1-基于配置的异常处理","link":"#_4-1-基于配置的异常处理","children":[]},{"level":3,"title":"4.2 基于注解的异常处理","slug":"_4-2-基于注解的异常处理","link":"#_4-2-基于注解的异常处理","children":[]}]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":6.16,"words":1848},"filePathRelative":"java/framework/springmvc/springmvc-4.md","localizedDate":"2021年9月8日","excerpt":"<h2> 1. HttpMessageConverter</h2>\\n<p>HttpMessageConverter，报文信息转换器，将请求报文转换为 Java 对象，或将 Java 对象转换为响应报文</p>\\n<p>HttpMessageConverter提供了两个注解和两个类型：@RequestBody，@ResponseBody，RequestEntity，</p>\\n<p>ResponseEntity</p>\\n<h3> 1.1 @RequestBody</h3>\\n<p>@RequestBody 可以获取请求体，需要在控制器方法设置一个形参，使用 @RequestBody 进行标识，当前请求的请求体就会为当前注解所标识的形参赋值</p>","autoDesc":true}');export{e as data};
