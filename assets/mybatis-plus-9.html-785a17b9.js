const t=JSON.parse('{"key":"v-4b1144fa","path":"/java/framework/mybatis-plus/mybatis-plus-9.html","title":"公共字段自动填充","lang":"zh-CN","frontmatter":{"title":"公共字段自动填充","date":"2021-11-03T00:00:00.000Z","category":"常用框架","tag":["MyBatis-Plus"],"description":"1. 元数据处理器接口 ①所在包：com.baomidou.mybatisplus.MetaObjectHandler ②insertFill(MetaObject metaObject) / updateFill(MetaObject metaObject) ③metaObject：元对象，是 MyBatis 提供的一个用于更加方便，更加优雅地访问对象的属性，给对象的属性设置值的一个对象，还会用于包装对象，支持对 Object、Map、Collection 等对象进行包装 ④本质上 metaObject 获取对象的属性值或者是给对象的属性设置值，最终是要通过 Reflector 获取到属性的对应方法的 Invoker，最终 invoke","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/mybatis-plus/mybatis-plus-9.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"公共字段自动填充"}],["meta",{"property":"og:description","content":"1. 元数据处理器接口 ①所在包：com.baomidou.mybatisplus.MetaObjectHandler ②insertFill(MetaObject metaObject) / updateFill(MetaObject metaObject) ③metaObject：元对象，是 MyBatis 提供的一个用于更加方便，更加优雅地访问对象的属性，给对象的属性设置值的一个对象，还会用于包装对象，支持对 Object、Map、Collection 等对象进行包装 ④本质上 metaObject 获取对象的属性值或者是给对象的属性设置值，最终是要通过 Reflector 获取到属性的对应方法的 Invoker，最终 invoke"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"MyBatis-Plus"}],["meta",{"property":"article:published_time","content":"2021-11-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"公共字段自动填充\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 元数据处理器接口","slug":"_1-元数据处理器接口","link":"#_1-元数据处理器接口","children":[]},{"level":2,"title":"2. 开发步骤","slug":"_2-开发步骤","link":"#_2-开发步骤","children":[]},{"level":2,"title":"3. 实操演示","slug":"_3-实操演示","link":"#_3-实操演示","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":1.65,"words":495},"filePathRelative":"java/framework/mybatis-plus/mybatis-plus-9.md","localizedDate":"2021年11月3日","excerpt":"<h2> 1. 元数据处理器接口</h2>\\n<blockquote>\\n<p>①所在包：com.baomidou.mybatisplus.MetaObjectHandler</p>\\n<p>②insertFill(MetaObject metaObject) / updateFill(MetaObject metaObject)</p>\\n<p>③metaObject：元对象，是 MyBatis 提供的一个用于更加方便，更加优雅地访问对象的属性，给对象的属性设置值的一个对象，还会用于包装对象，支持对 Object、Map、Collection 等对象进行包装</p>\\n<p>④本质上 metaObject 获取对象的属性值或者是给对象的属性设置值，最终是要通过 Reflector 获取到属性的对应方法的 Invoker，最终 invoke</p>\\n</blockquote>","autoDesc":true}');export{t as data};
