const n=JSON.parse('{"key":"v-532671a0","path":"/java/basic/network.html","title":"网络编程","lang":"zh-CN","frontmatter":{"title":"网络编程","category":"Java","tag":["Java 基础"],"description":"1. InetAddress 类的使用 实现网络通信需要解决的两个问题 （1）如何准确地定位互联网上的一台或多台主机； （2）如何实现可靠而高效的数据传输。 网络通信（就对应着上面的两个问题） 要素一：使用 IP 地址，定位网络中的主机； 要素二：遵循相关的网络通信协议。 针对要素一 （1）IP：一个 IP 地址，对应着网络中的一台主机。如“192.168.10.16”、“127.0.0.1” --- 本地回路地址。 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用 InetAddress 类来代表 IP，一个 InetAdress 类的对象，就代表着一个具体的 IP 地址。 （2）如何实现 InetAdress 类 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;①getByName(String hostName) ②getLocalHost()； （3）两个方法的使用 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getHostName() / getHostAddress() （4）域名：www.baidu.com ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域名解析：域名容易记忆，当在连接网络时，输入一个主机的域名之后，域名服务器（DNS）负责将域名转化为 IP 地址，这样才能和主机建立连接）。 端口号的使用 端口号标识正在计算机中运行的进程（程序） 注意：不同的进程对应不同的端口号 常见的端口号：http:80 tomcat:8080 mysql:3306 oracle:1521 等。 针对要素二 使用网络通信协议 network-protocol TCP 与 UDP 协议的区别 TCP 协议： （1）使用 TCP 协议前，须先建立 TCP 连接，形成传输数据通道； （2）传输前，采用“三次握手”的方式，是可靠的； （3）TCP 协议进行通信的两个应用进程：客户端、服务端； （4）在连接中可进行大数据量的传输； （5）传输完毕，需释放已建立的连接，效率低。 UDP 协议： （1）将数据、源、目的封装成数据包，不需要建立连接； （2）每个数据报的大小限制在 64k 内； （3）因无需连接，故是不可靠的； （4）发送数据结束时无需释放资源，速度快。","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/basic/network.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"网络编程"}],["meta",{"property":"og:description","content":"1. InetAddress 类的使用 实现网络通信需要解决的两个问题 （1）如何准确地定位互联网上的一台或多台主机； （2）如何实现可靠而高效的数据传输。 网络通信（就对应着上面的两个问题） 要素一：使用 IP 地址，定位网络中的主机； 要素二：遵循相关的网络通信协议。 针对要素一 （1）IP：一个 IP 地址，对应着网络中的一台主机。如“192.168.10.16”、“127.0.0.1” --- 本地回路地址。 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用 InetAddress 类来代表 IP，一个 InetAdress 类的对象，就代表着一个具体的 IP 地址。 （2）如何实现 InetAdress 类 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;①getByName(String hostName) ②getLocalHost()； （3）两个方法的使用 ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getHostName() / getHostAddress() （4）域名：www.baidu.com ​ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域名解析：域名容易记忆，当在连接网络时，输入一个主机的域名之后，域名服务器（DNS）负责将域名转化为 IP 地址，这样才能和主机建立连接）。 端口号的使用 端口号标识正在计算机中运行的进程（程序） 注意：不同的进程对应不同的端口号 常见的端口号：http:80 tomcat:8080 mysql:3306 oracle:1521 等。 针对要素二 使用网络通信协议 network-protocol TCP 与 UDP 协议的区别 TCP 协议： （1）使用 TCP 协议前，须先建立 TCP 连接，形成传输数据通道； （2）传输前，采用“三次握手”的方式，是可靠的； （3）TCP 协议进行通信的两个应用进程：客户端、服务端； （4）在连接中可进行大数据量的传输； （5）传输完毕，需释放已建立的连接，效率低。 UDP 协议： （1）将数据、源、目的封装成数据包，不需要建立连接； （2）每个数据报的大小限制在 64k 内； （3）因无需连接，故是不可靠的； （4）发送数据结束时无需释放资源，速度快。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Java 基础"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络编程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. InetAddress 类的使用","slug":"_1-inetaddress-类的使用","link":"#_1-inetaddress-类的使用","children":[]},{"level":2,"title":"2. TCP 网络编程","slug":"_2-tcp-网络编程","link":"#_2-tcp-网络编程","children":[]},{"level":2,"title":"3. UDP 网络编程","slug":"_3-udp-网络编程","link":"#_3-udp-网络编程","children":[]},{"level":2,"title":"4. URL 网络编程","slug":"_4-url-网络编程","link":"#_4-url-网络编程","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":4.71,"words":1414},"filePathRelative":"java/basic/network.md","localizedDate":"2023年5月17日","excerpt":"<h2> 1. InetAddress 类的使用</h2>\\n<ul>\\n<li>\\n<p><strong>实现网络通信需要解决的两个问题</strong></p>\\n<p>（1）如何准确地定位互联网上的一台或多台主机；</p>\\n<p>（2）如何实现可靠而高效的数据传输。</p>\\n</li>\\n<li>\\n<p><strong>网络通信（就对应着上面的两个问题）</strong></p>\\n<p>要素一：使用 IP 地址，定位网络中的主机；</p>\\n<p>要素二：遵循相关的网络通信协议。</p>\\n</li>\\n<li>\\n<p><strong>针对要素一</strong></p>\\n<p>（1）IP：一个 IP 地址，对应着网络中的一台主机。如“192.168.10.16”、“127.0.0.1” --- 本地回路地址。</p>\\n<p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用 InetAddress 类来代表 IP，一个 InetAdress 类的对象，就代表着一个具体的 IP 地址。</p>\\n<p>（2）如何实现 InetAdress 类</p>\\n<p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;①getByName(String hostName) ②getLocalHost()；</p>\\n<p>（3）两个方法的使用</p>\\n<p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getHostName() / getHostAddress()</p>\\n<p>（4）域名：<a href=\\"http://www.baidu.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">www.baidu.com</a></p>\\n<p>​    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域名解析：域名容易记忆，当在连接网络时，输入一个主机的域名之后，域名服务器（DNS）负责将域名转化为 IP 地址，这样才能和主机建立连接）。</p>\\n</li>\\n<li>\\n<p><strong>端口号的使用</strong></p>\\n<p>端口号标识正在计算机中运行的进程（程序）</p>\\n<p>注意：不同的进程对应不同的端口号</p>\\n<p>常见的端口号：http:80  tomcat:8080  mysql:3306  oracle:1521 等。</p>\\n</li>\\n<li>\\n<p><strong>针对要素二</strong></p>\\n<p>使用网络通信协议</p>\\n<figure><img src=\\"https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/blog/article/computer_network/img202103092243.png\\" alt=\\"network-protocol\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>network-protocol</figcaption></figure>\\n</li>\\n<li>\\n<p><strong>TCP 与 UDP 协议的区别</strong></p>\\n<p>TCP 协议：</p>\\n<p>（1）使用 TCP 协议前，须先建立 TCP 连接，形成传输数据通道；</p>\\n<p>（2）传输前，采用“三次握手”的方式，是可靠的；</p>\\n<p>（3）TCP 协议进行通信的两个应用进程：客户端、服务端；</p>\\n<p>（4）在连接中可进行大数据量的传输；</p>\\n<p>（5）传输完毕，需释放已建立的连接，效率低。</p>\\n<p>UDP 协议：</p>\\n<p>（1）将数据、源、目的封装成数据包，不需要建立连接；</p>\\n<p>（2）每个数据报的大小限制在 64k 内；</p>\\n<p>（3）因无需连接，故是不可靠的；</p>\\n<p>（4）发送数据结束时无需释放资源，速度快。</p>\\n</li>\\n</ul>","autoDesc":true}');export{n as data};
