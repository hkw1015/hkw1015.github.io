const e=JSON.parse('{"key":"v-932d9bf0","path":"/java/framework/spring/annotation/spring-annotation-2.html","title":"生命周期","lang":"zh-CN","frontmatter":{"title":"生命周期","date":"2021-12-11T00:00:00.000Z","category":"常用框架","tag":["Spring 注解"],"description":"1. 使用 @Bean 指定初始化和销毁方法 Bean 的生命周期：Bean 创建 ---》 初始化 ---》 销毁 的过程 【对象创建时，如果是单实例，在容器启动时创建对象；如果是多实例，在每次获取时创建对象】 容器管理 Bean 的生命周期，我们可以自定义初始化和销毁方法，容器在 Bean 进行到当前生命周期的时候来调用我们自定义的初始化和销毁方法 指定初始化和销毁方法 xml 方式：通过 init-method 和 destroy-method 指定 @Bean 注解方式：通过 initMethod 和 destroy-method 初始化时机 对象创建完成，并赋值好，调用初始化方法 销毁时机 单实例：容器关闭的时候，调用销毁方法 多实例：容器不会管理这个 Bean，所以容器不会调用销毁方法","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/spring/annotation/spring-annotation-2.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"生命周期"}],["meta",{"property":"og:description","content":"1. 使用 @Bean 指定初始化和销毁方法 Bean 的生命周期：Bean 创建 ---》 初始化 ---》 销毁 的过程 【对象创建时，如果是单实例，在容器启动时创建对象；如果是多实例，在每次获取时创建对象】 容器管理 Bean 的生命周期，我们可以自定义初始化和销毁方法，容器在 Bean 进行到当前生命周期的时候来调用我们自定义的初始化和销毁方法 指定初始化和销毁方法 xml 方式：通过 init-method 和 destroy-method 指定 @Bean 注解方式：通过 initMethod 和 destroy-method 初始化时机 对象创建完成，并赋值好，调用初始化方法 销毁时机 单实例：容器关闭的时候，调用销毁方法 多实例：容器不会管理这个 Bean，所以容器不会调用销毁方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Spring 注解"}],["meta",{"property":"article:published_time","content":"2021-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生命周期\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 使用 @Bean 指定初始化和销毁方法","slug":"_1-使用-bean-指定初始化和销毁方法","link":"#_1-使用-bean-指定初始化和销毁方法","children":[]},{"level":2,"title":"2. 使用 InitializingBean 和 DisposableBean 接口","slug":"_2-使用-initializingbean-和-disposablebean-接口","link":"#_2-使用-initializingbean-和-disposablebean-接口","children":[]},{"level":2,"title":"3. 使用 JSR250 的 @PostConstruct 和 @PreDestroy 注解","slug":"_3-使用-jsr250-的-postconstruct-和-predestroy-注解","link":"#_3-使用-jsr250-的-postconstruct-和-predestroy-注解","children":[]},{"level":2,"title":"4. 使用 BeanPostProcessor 接口【Bean 的后置处理器】","slug":"_4-使用-beanpostprocessor-接口【bean-的后置处理器】","link":"#_4-使用-beanpostprocessor-接口【bean-的后置处理器】","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":3.39,"words":1018},"filePathRelative":"java/framework/spring/annotation/spring-annotation-2.md","localizedDate":"2021年12月11日","excerpt":"<h2> 1. 使用 @Bean 指定初始化和销毁方法</h2>\\n<blockquote>\\n<p>Bean 的生命周期：Bean 创建 ---》 初始化 ---》 销毁 的过程</p>\\n<p>【对象创建时，如果是单实例，在容器启动时创建对象；如果是多实例，在每次获取时创建对象】</p>\\n</blockquote>\\n<p>容器管理 Bean 的生命周期，我们可以自定义初始化和销毁方法，容器在 Bean 进行到当前生命周期的时候来调用我们自定义的初始化和销毁方法</p>\\n<ul>\\n<li>指定初始化和销毁方法\\n<ul>\\n<li>xml 方式：通过 init-method 和 destroy-method 指定</li>\\n<li>@Bean 注解方式：通过 initMethod 和 destroy-method</li>\\n</ul>\\n</li>\\n<li>初始化时机\\n<ul>\\n<li>对象创建完成，并赋值好，调用初始化方法</li>\\n</ul>\\n</li>\\n<li>销毁时机\\n<ul>\\n<li>单实例：容器关闭的时候，调用销毁方法</li>\\n<li>多实例：容器不会管理这个 Bean，所以容器不会调用销毁方法</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
