const n=JSON.parse('{"key":"v-63fec628","path":"/java/framework/spring/core/spring-tx.html","title":"事务管理","lang":"zh-CN","frontmatter":{"title":"事务管理","date":"2021-08-23T00:00:00.000Z","category":"常用框架","tag":["Spring"],"description":"1. 事务实现的分类 声明式事务 指的是通过注解的方式对事务的各种特性进行控制和管理 编程式事务 指的是通过编码的方式实现事务的声明 Connection conn = JdbcUtils.getConnection(); try { conn.setAutoCommit(false); // 必须自己 commit() // 一系列业务相关的 jdbc 操作 conn.commit(); // 提交事务 } catch(Exception e) { conn.rollback(); } finally { JdbcUtils.close(conn); // 释放连接 }","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/spring/core/spring-tx.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"事务管理"}],["meta",{"property":"og:description","content":"1. 事务实现的分类 声明式事务 指的是通过注解的方式对事务的各种特性进行控制和管理 编程式事务 指的是通过编码的方式实现事务的声明 Connection conn = JdbcUtils.getConnection(); try { conn.setAutoCommit(false); // 必须自己 commit() // 一系列业务相关的 jdbc 操作 conn.commit(); // 提交事务 } catch(Exception e) { conn.rollback(); } finally { JdbcUtils.close(conn); // 释放连接 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2021-08-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 事务实现的分类","slug":"_1-事务实现的分类","link":"#_1-事务实现的分类","children":[]},{"level":2,"title":"2. Spring 声明式事务的介绍","slug":"_2-spring-声明式事务的介绍","link":"#_2-spring-声明式事务的介绍","children":[]},{"level":2,"title":"3. 声明式事务管理（注解 @Transactional）的使用","slug":"_3-声明式事务管理-注解-transactional-的使用","link":"#_3-声明式事务管理-注解-transactional-的使用","children":[]},{"level":2,"title":"4. xml 配置式事务声明","slug":"_4-xml-配置式事务声明","link":"#_4-xml-配置式事务声明","children":[]},{"level":2,"title":"5. 完全注解声明式事务","slug":"_5-完全注解声明式事务","link":"#_5-完全注解声明式事务","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":5.07,"words":1521},"filePathRelative":"java/framework/spring/core/spring-tx.md","localizedDate":"2021年8月23日","excerpt":"<h2> 1. 事务实现的分类</h2>\\n<ul>\\n<li>\\n<p><strong>声明式事务</strong></p>\\n<p>指的是通过注解的方式对事务的各种特性进行控制和管理</p>\\n</li>\\n<li>\\n<p><strong>编程式事务</strong></p>\\n<p>指的是通过编码的方式实现事务的声明</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">Connection</span> conn <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">JdbcUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getConnection</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n    conn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setAutoCommit</span><span class=\\"token punctuation\\">(</span><span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 必须自己 commit()</span>\\n    <span class=\\"token comment\\">// 一系列业务相关的 jdbc 操作</span>\\n    conn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">commit</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 提交事务</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    conn<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">rollback</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">finally</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">JdbcUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span>conn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 释放连接</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{n as data};
