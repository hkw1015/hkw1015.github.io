const n=JSON.parse('{"key":"v-6a5269fc","path":"/java/framework/mybatis/mybatis-2.html","title":"基本用法","lang":"zh-CN","frontmatter":{"title":"基本用法","date":"2021-11-03T00:00:00.000Z","category":"常用框架","tag":["MyBatis"],"description":"1. Hello World 1.1 物理建模 在本地新建一个数据库，新建一张表 t_emp 并往表中插入几条数据 CREATE DATABASE `mybatis-example`; USE `mybatis-example`; CREATE TABLE `t_emp`( emp_id INT AUTO_INCREMENT, emp_name CHAR(100), emp_salary DOUBLE(10,5), PRIMARY KEY(emp_id) ); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"zhagnsan\\",500); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"lisi\\",600); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"wangwu\\",700);","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/mybatis/mybatis-2.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"基本用法"}],["meta",{"property":"og:description","content":"1. Hello World 1.1 物理建模 在本地新建一个数据库，新建一张表 t_emp 并往表中插入几条数据 CREATE DATABASE `mybatis-example`; USE `mybatis-example`; CREATE TABLE `t_emp`( emp_id INT AUTO_INCREMENT, emp_name CHAR(100), emp_salary DOUBLE(10,5), PRIMARY KEY(emp_id) ); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"zhagnsan\\",500); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"lisi\\",600); INSERT INTO `t_emp`(emp_name,emp_salary) VALUES(\\"wangwu\\",700);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"MyBatis"}],["meta",{"property":"article:published_time","content":"2021-11-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本用法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. Hello World","slug":"_1-hello-world","link":"#_1-hello-world","children":[{"level":3,"title":"1.1 物理建模","slug":"_1-1-物理建模","link":"#_1-1-物理建模","children":[]},{"level":3,"title":"1.2 逻辑建模","slug":"_1-2-逻辑建模","link":"#_1-2-逻辑建模","children":[]},{"level":3,"title":"1.3 搭建框架开发环境","slug":"_1-3-搭建框架开发环境","link":"#_1-3-搭建框架开发环境","children":[]},{"level":3,"title":"1.4 junit 测试","slug":"_1-4-junit-测试","link":"#_1-4-junit-测试","children":[]}]},{"level":2,"title":"2. HelloWorld 加强版","slug":"_2-helloworld-加强版","link":"#_2-helloworld-加强版","children":[{"level":3,"title":"2.1 加入日志","slug":"_2-1-加入日志","link":"#_2-1-加入日志","children":[]},{"level":3,"title":"2.2 关联外部属性文件","slug":"_2-2-关联外部属性文件","link":"#_2-2-关联外部属性文件","children":[]},{"level":3,"title":"2.3 用上 Mapper 接口","slug":"_2-3-用上-mapper-接口","link":"#_2-3-用上-mapper-接口","children":[]},{"level":3,"title":"2.4 增删改操作","slug":"_2-4-增删改操作","link":"#_2-4-增删改操作","children":[]}]},{"level":2,"title":"3. 给 SQL 语句传参","slug":"_3-给-sql-语句传参","link":"#_3-给-sql-语句传参","children":[{"level":3,"title":"3.1 #{} 方式","slug":"_3-1-方式","link":"#_3-1-方式","children":[]},{"level":3,"title":"3.2 ${} 方式","slug":"_3-2-方式","link":"#_3-2-方式","children":[]}]},{"level":2,"title":"4. 数据输入","slug":"_4-数据输入","link":"#_4-数据输入","children":[{"level":3,"title":"4.1 MyBatis 总体机制概括","slug":"_4-1-mybatis-总体机制概括","link":"#_4-1-mybatis-总体机制概括","children":[]},{"level":3,"title":"4.2 概念说明","slug":"_4-2-概念说明","link":"#_4-2-概念说明","children":[]},{"level":3,"title":"4.3 单个简单类型参数","slug":"_4-3-单个简单类型参数","link":"#_4-3-单个简单类型参数","children":[]},{"level":3,"title":"4.4 实体类类型参数","slug":"_4-4-实体类类型参数","link":"#_4-4-实体类类型参数","children":[]},{"level":3,"title":"4.5 零散的简单类型数据","slug":"_4-5-零散的简单类型数据","link":"#_4-5-零散的简单类型数据","children":[]},{"level":3,"title":"4.6 Map 类型参数","slug":"_4-6-map-类型参数","link":"#_4-6-map-类型参数","children":[]}]},{"level":2,"title":"5. 数据输出","slug":"_5-数据输出","link":"#_5-数据输出","children":[{"level":3,"title":"5.1 返回单个简单类型数据","slug":"_5-1-返回单个简单类型数据","link":"#_5-1-返回单个简单类型数据","children":[]},{"level":3,"title":"5.2 返回实体类对象","slug":"_5-2-返回实体类对象","link":"#_5-2-返回实体类对象","children":[]},{"level":3,"title":"5.3 返回 Map 类型","slug":"_5-3-返回-map-类型","link":"#_5-3-返回-map-类型","children":[]},{"level":3,"title":"5.4 返回 List 类型","slug":"_5-4-返回-list-类型","link":"#_5-4-返回-list-类型","children":[]},{"level":3,"title":"5.5 返回自增主键","slug":"_5-5-返回自增主键","link":"#_5-5-返回自增主键","children":[]},{"level":3,"title":"5.6 数据库表字段和实体类属性对应关系","slug":"_5-6-数据库表字段和实体类属性对应关系","link":"#_5-6-数据库表字段和实体类属性对应关系","children":[]}]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":16.92,"words":5077},"filePathRelative":"java/framework/mybatis/mybatis-2.md","localizedDate":"2021年11月3日","excerpt":"<h2> 1. Hello World</h2>\\n<h3> 1.1 物理建模</h3>\\n<p>在本地新建一个数据库，新建一张表 t_emp 并往表中插入几条数据</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-ext=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">DATABASE</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>mybatis-example<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">USE</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>mybatis-example<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">CREATE</span> <span class=\\"token keyword\\">TABLE</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>t_emp<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">(</span>\\nemp_id <span class=\\"token keyword\\">INT</span> <span class=\\"token keyword\\">AUTO_INCREMENT</span><span class=\\"token punctuation\\">,</span>\\nemp_name <span class=\\"token keyword\\">CHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\nemp_salary <span class=\\"token keyword\\">DOUBLE</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">10</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token keyword\\">PRIMARY</span> <span class=\\"token keyword\\">KEY</span><span class=\\"token punctuation\\">(</span>emp_id<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>t_emp<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">(</span>emp_name<span class=\\"token punctuation\\">,</span>emp_salary<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"zhagnsan\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">500</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>t_emp<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">(</span>emp_name<span class=\\"token punctuation\\">,</span>emp_salary<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"lisi\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">600</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">INSERT</span> <span class=\\"token keyword\\">INTO</span> <span class=\\"token identifier\\"><span class=\\"token punctuation\\">`</span>t_emp<span class=\\"token punctuation\\">`</span></span><span class=\\"token punctuation\\">(</span>emp_name<span class=\\"token punctuation\\">,</span>emp_salary<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">VALUES</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"wangwu\\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">700</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
