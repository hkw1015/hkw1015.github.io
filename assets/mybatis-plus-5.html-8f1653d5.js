const a=JSON.parse('{"key":"v-58b809f2","path":"/java/framework/mybatis-plus/mybatis-plus-5.html","title":"ActiveRecord（活动记录）","lang":"zh-CN","frontmatter":{"title":"ActiveRecord（活动记录）","date":"2021-11-03T00:00:00.000Z","category":"常用框架","tag":["MyBatis-Plus"],"description":"ActiveRecord（活动记录），是一种领域模型模式，特点是一个模型类对应关系型数据库中的一个表，而模型类的一个实例对应表中的一行记录。 ActiveRecord 一直广受动态语言（PHP、Ruby 等）的喜爱，而 Java 作为准静态语言，对于 ActiveRecord 往往只能感叹其优雅，所以 MP 也在 AR 道路上进行了一定的探索。 1. 如何使用 AR 模式 仅仅需要让实体类继承 Model 类且实现主键指定方法，即可开发 AR 之旅 @TableName(\\"tbl_employee\\") @Data public class Employee extends Model&lt;Employee&gt; { @TableId(value = \\"id\\", type = IdType.AUTO) private Integer id; \\t...... @Override protected Serializable pkVal() { return this.id; } }","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/mybatis-plus/mybatis-plus-5.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"ActiveRecord（活动记录）"}],["meta",{"property":"og:description","content":"ActiveRecord（活动记录），是一种领域模型模式，特点是一个模型类对应关系型数据库中的一个表，而模型类的一个实例对应表中的一行记录。 ActiveRecord 一直广受动态语言（PHP、Ruby 等）的喜爱，而 Java 作为准静态语言，对于 ActiveRecord 往往只能感叹其优雅，所以 MP 也在 AR 道路上进行了一定的探索。 1. 如何使用 AR 模式 仅仅需要让实体类继承 Model 类且实现主键指定方法，即可开发 AR 之旅 @TableName(\\"tbl_employee\\") @Data public class Employee extends Model&lt;Employee&gt; { @TableId(value = \\"id\\", type = IdType.AUTO) private Integer id; \\t...... @Override protected Serializable pkVal() { return this.id; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"MyBatis-Plus"}],["meta",{"property":"article:published_time","content":"2021-11-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ActiveRecord（活动记录）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 如何使用 AR 模式","slug":"_1-如何使用-ar-模式","link":"#_1-如何使用-ar-模式","children":[]},{"level":2,"title":"2. AR 基本 CRUD","slug":"_2-ar-基本-crud","link":"#_2-ar-基本-crud","children":[]},{"level":2,"title":"3. AR 小结","slug":"_3-ar-小结","link":"#_3-ar-小结","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"java/framework/mybatis-plus/mybatis-plus-5.md","localizedDate":"2021年11月3日","excerpt":"<p>ActiveRecord（活动记录），是一种领域模型模式，特点是一个模型类对应关系型数据库中的一个表，而模型类的一个实例对应表中的一行记录。</p>\\n<p>ActiveRecord 一直广受动态语言（PHP、Ruby 等）的喜爱，而 Java 作为准静态语言，对于 ActiveRecord 往往只能感叹其优雅，所以 MP 也在 AR 道路上进行了一定的探索。</p>\\n<h2> 1. 如何使用 AR 模式</h2>\\n<p>仅仅需要让实体类继承 Model 类且实现主键指定方法，即可开发 AR 之旅</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@TableName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"tbl_employee\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Employee</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Model</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Employee</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@TableId</span><span class=\\"token punctuation\\">(</span>value <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"id\\"</span><span class=\\"token punctuation\\">,</span> type <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">IdType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">AUTO</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> id<span class=\\"token punctuation\\">;</span>\\n\\n\\t<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token keyword\\">protected</span> <span class=\\"token class-name\\">Serializable</span> <span class=\\"token function\\">pkVal</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>id<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{a as data};
