const e=JSON.parse('{"key":"v-df48c1ce","path":"/database/redis/redis-10.html","title":"事务之锁机制 & 秒杀","lang":"zh-CN","frontmatter":{"title":"事务之锁机制 & 秒杀","date":"2021-12-11T00:00:00.000Z","category":"Redis","tag":["Redis"],"description":"1. Redis 的事务定义 Redis 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。 Redis 事务的主要作用就是 串联多个命令 防止别的命令插队。 2. Multi、Exec、Discard 从输入 Multi 命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入 Exec 后，Redis 会将之前的命令队列中的命令依次执行。 组队的过程中可以通过 Discard 来放弃组队。","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/database/redis/redis-10.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"事务之锁机制 & 秒杀"}],["meta",{"property":"og:description","content":"1. Redis 的事务定义 Redis 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。 Redis 事务的主要作用就是 串联多个命令 防止别的命令插队。 2. Multi、Exec、Discard 从输入 Multi 命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入 Exec 后，Redis 会将之前的命令队列中的命令依次执行。 组队的过程中可以通过 Discard 来放弃组队。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2021-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务之锁机制 & 秒杀\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. Redis 的事务定义","slug":"_1-redis-的事务定义","link":"#_1-redis-的事务定义","children":[]},{"level":2,"title":"2. Multi、Exec、Discard","slug":"_2-multi、exec、discard","link":"#_2-multi、exec、discard","children":[]},{"level":2,"title":"3. 事务的错误处理","slug":"_3-事务的错误处理","link":"#_3-事务的错误处理","children":[]},{"level":2,"title":"4. 为什么要做成事务","slug":"_4-为什么要做成事务","link":"#_4-为什么要做成事务","children":[]},{"level":2,"title":"5. 事务冲突的问题","slug":"_5-事务冲突的问题","link":"#_5-事务冲突的问题","children":[{"level":3,"title":"5.1 例子","slug":"_5-1-例子","link":"#_5-1-例子","children":[]},{"level":3,"title":"5.2 悲观锁","slug":"_5-2-悲观锁","link":"#_5-2-悲观锁","children":[]},{"level":3,"title":"5.3 乐观锁","slug":"_5-3-乐观锁","link":"#_5-3-乐观锁","children":[]},{"level":3,"title":"5.4 WATCH key [key ...]","slug":"_5-4-watch-key-key","link":"#_5-4-watch-key-key","children":[]},{"level":3,"title":"5.5 unwatch","slug":"_5-5-unwatch","link":"#_5-5-unwatch","children":[]}]},{"level":2,"title":"6. Redis 事务三特性","slug":"_6-redis-事务三特性","link":"#_6-redis-事务三特性","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":3.46,"words":1039},"filePathRelative":"database/redis/redis-10.md","localizedDate":"2021年12月11日","excerpt":"<h2> 1. Redis 的事务定义</h2>\\n<p>Redis 事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。</p>\\n<p>Redis 事务的主要作用就是 <span style=\\"color:red\\">串联多个命令</span> 防止别的命令插队。</p>\\n<h2> 2. Multi、Exec、Discard</h2>\\n<p>从输入 Multi 命令开始，输入的命令都会依次进入命令队列中，但不会执行，直到输入 Exec 后，Redis 会将之前的命令队列中的命令依次执行。</p>\\n<p>组队的过程中可以通过 Discard 来放弃组队。</p>","autoDesc":true}');export{e as data};
