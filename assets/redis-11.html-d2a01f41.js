import{_ as e,E as p,Z as o,$ as i,a0 as n,a1 as s,a3 as c,a5 as a}from"./framework-1fb77053.js";const l={},u=a(`<h2 id="_1-解决计数器和人员记录的事务操作" tabindex="-1"><a class="header-anchor" href="#_1-解决计数器和人员记录的事务操作" aria-hidden="true">#</a> 1. 解决计数器和人员记录的事务操作</h2><figure><img src="http://img.hl1015.top/blog/image-20211119095356656.png" alt="image-20211119095356656" tabindex="0" loading="lazy"><figcaption>image-20211119095356656</figcaption></figure><p><strong>基础实现：</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 模仿秒杀
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImitateSecKillRedisUtil</span> <span class="token punctuation">{</span>

    <span class="token comment">// 秒杀过程</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">doSecKill</span><span class="token punctuation">(</span><span class="token class-name">String</span> uid<span class="token punctuation">,</span> <span class="token class-name">String</span> prodid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 uid 和 prodid 非空判断</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uid <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prodid <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;uid 和 prodid 不能为空！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 2 连接redis</span>
        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">&quot;ip地址&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jedis<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;*****&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3 拼接key</span>
        <span class="token comment">// 3.1 库存key</span>
        <span class="token class-name">String</span> kcKey <span class="token operator">=</span> <span class="token string">&quot;sk:&quot;</span> <span class="token operator">+</span> prodid <span class="token operator">+</span> <span class="token string">&quot;:qt&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.2 秒杀成功用户key</span>
        <span class="token class-name">String</span> userKey <span class="token operator">=</span> <span class="token string">&quot;sk:&quot;</span> <span class="token operator">+</span> prodid <span class="token operator">+</span> <span class="token string">&quot;:user&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 获取库存，如果库存为null，秒杀还没有开始</span>
        <span class="token class-name">String</span> kc <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>kcKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>kc<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀还没有开始，请等待！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;秒杀还没有开始，请等待！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 5 判断用户是否重复秒杀操作</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span>userKey<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;已经秒杀成功了，不能重复秒杀！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;已经秒杀成功了，不能重复秒杀！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 6 判断如果商品库存数量小于1，秒杀结束</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>kc<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀已经结束了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;秒杀已经结束了！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 7 秒杀过程</span>
        <span class="token comment">// 库存-1</span>
        jedis<span class="token punctuation">.</span><span class="token function">decr</span><span class="token punctuation">(</span>kcKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 把秒杀成功用户添加清单里面</span>
        jedis<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span>userKey<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀成功了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;秒杀成功了...&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>controller 层添加一个 映射方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/doSecKill&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doSecKill</span><span class="token punctuation">(</span><span class="token class-name">String</span> uid<span class="token punctuation">,</span> <span class="token class-name">String</span> prodid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">try</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>uid <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			uid <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token class-name">ImitateSecKillRedisUtil</span><span class="token punctuation">.</span><span class="token function">doSecKill</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> prodid<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token string">&quot;秒杀出异常了！&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>事先在 redis 中存入 prodid 为 1001 的 key，value 设为 10：</p><figure><img src="http://img.hl1015.top/blog/image-20211119202639009.png" alt="image-20211119202639009" tabindex="0" loading="lazy"><figcaption>image-20211119202639009</figcaption></figure><p>通过 potman 进行测试：</p><figure><img src="http://img.hl1015.top/blog/seckill_1.gif" alt="seckill_1" tabindex="0" loading="lazy"><figcaption>seckill_1</figcaption></figure><p>然后再看看 redis 中关于 prodid = 1001 的库存：</p><figure><img src="http://img.hl1015.top/blog/image-20211119203851268.png" alt="image-20211119203851268" tabindex="0" loading="lazy"><figcaption>image-20211119203851268</figcaption></figure><p>redis 中关于 prodid = 1001 的秒杀成功的用户 id 清单：</p><img src="http://img.hl1015.top/blog/image-20211119204052699.png" alt="image-20211119204052699" style="zoom:67%;"><h2 id="_2-redis-事务-秒杀并发模拟" tabindex="-1"><a class="header-anchor" href="#_2-redis-事务-秒杀并发模拟" aria-hidden="true">#</a> 2. Redis 事务 --- 秒杀并发模拟</h2><p>使用工具 ab 模拟并发测试【CentOS 6 默认安装、CentOS 7 需要手动安装】</p><h3 id="_2-1-联网" tabindex="-1"><a class="header-anchor" href="#_2-1-联网" aria-hidden="true">#</a> 2.1 联网</h3><p>使用如下命令进行安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> httpd-tools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@centos101 ~<span class="token punctuation">]</span><span class="token comment"># yum install httpd-tools</span>
已加载插件：fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: mirrors.163.com
 * epel: mirrors.bfsu.edu.cn
 * extras: mirrors.163.com
 * updates: mirrors.163.com
正在解决依赖关系
<span class="token punctuation">..</span>.
作为依赖被安装:
  apr.x86_64 <span class="token number">0</span>:1.4.8-7.el7    apr-util.x86_64 <span class="token number">0</span>:1.5.2-6.el7

完毕！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-无网络" tabindex="-1"><a class="header-anchor" href="#_2-2-无网络" aria-hidden="true">#</a> 2.2 无网络</h3><p>（1） 进入目录： cd /run/media/root/CentOS 7 x86_64/Packages（路径跟 centos 6 不同）</p><p>（2） 按顺序安装</p><ul><li>apr-1.4.8-3.el7.x86_64.rpm</li><li>apr-util-1.5.2-6.el7.x86_64.rpm</li><li>httpd-tools-2.4.6-67.el7.centos.x86_64.rpm</li></ul><h3 id="_2-3-测试及结果" tabindex="-1"><a class="header-anchor" href="#_2-3-测试及结果" aria-hidden="true">#</a> 2.3 测试及结果</h3><h4 id="_2-3-0-ab-工具命令说明" tabindex="-1"><a class="header-anchor" href="#_2-3-0-ab-工具命令说明" aria-hidden="true">#</a> 2.3.0 ab 工具命令说明</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@centos101 ~<span class="token punctuation">]</span><span class="token comment"># ab --help</span>
ab: wrong number of arguments
Usage: ab <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>http<span class="token punctuation">[</span>s<span class="token punctuation">]</span>://<span class="token punctuation">]</span>hostname<span class="token punctuation">[</span>:port<span class="token punctuation">]</span>/path
Options are:
    <span class="token parameter variable">-n</span> requests     Number of requests to perform <span class="token comment"># 请求数</span>
    <span class="token parameter variable">-c</span> concurrency  Number of multiple requests to <span class="token function">make</span> at a <span class="token function">time</span> <span class="token comment"># 并发数</span>
    <span class="token parameter variable">-t</span> timelimit    Seconds to max. to spend on benchmarking
                    This implies <span class="token parameter variable">-n</span> <span class="token number">50000</span>
    <span class="token parameter variable">-s</span> <span class="token function">timeout</span>      Seconds to max. <span class="token function">wait</span> <span class="token keyword">for</span> each response
                    Default is <span class="token number">30</span> seconds
    <span class="token parameter variable">-b</span> windowsize   Size of TCP send/receive buffer, <span class="token keyword">in</span> bytes
    <span class="token parameter variable">-B</span> address      Address to <span class="token builtin class-name">bind</span> to when making outgoing connections
    <span class="token parameter variable">-p</span> postfile     File containing data to POST. Remember also to <span class="token builtin class-name">set</span> <span class="token parameter variable">-T</span>
    <span class="token parameter variable">-u</span> putfile      File containing data to PUT. Remember also to <span class="token builtin class-name">set</span> <span class="token parameter variable">-T</span>
    <span class="token parameter variable">-T</span> content-type Content-type header to use <span class="token keyword">for</span> POST/PUT data, eg.
                    <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
    <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-1-通过-ab-测试" tabindex="-1"><a class="header-anchor" href="#_2-3-1-通过-ab-测试" aria-hidden="true">#</a> 2.3.1 通过 ab 测试</h4><p>首先将 redis 中关于 prodid = 1001 的库存设为 10，并且把用户 id 清单清空</p><p>然后通过如下命令对 本地的秒杀接口进行并发测试：（192.168.81.1 替换为你们的本机 ip）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ab <span class="token parameter variable">-n</span> <span class="token number">1000</span> <span class="token parameter variable">-c</span> <span class="token number">100</span> http://192.168.81.1:6666/doSecKill?prodid<span class="token operator">=</span><span class="token number">1001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@centos101 ~<span class="token punctuation">]</span><span class="token comment"># ab -n 1000 -c 100 http://192.168.81.1:6666/doSecKill?prodid=1001</span>
This is ApacheBench, Version <span class="token number">2.3</span> <span class="token operator">&lt;</span><span class="token variable">$Revision</span><span class="token builtin class-name">:</span> <span class="token number">1430300</span> $<span class="token operator">&gt;</span>
Copyright <span class="token number">1996</span> Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking <span class="token number">192.168</span>.81.1 <span class="token punctuation">(</span>be patient<span class="token punctuation">)</span>
Completed <span class="token number">100</span> requests
Completed <span class="token number">200</span> requests
Completed <span class="token number">300</span> requests
Completed <span class="token number">400</span> requests
Completed <span class="token number">500</span> requests
Completed <span class="token number">600</span> requests
Completed <span class="token number">700</span> requests
Completed <span class="token number">800</span> requests
Completed <span class="token number">900</span> requests
Completed <span class="token number">1000</span> requests
Finished <span class="token number">1000</span> requests
<span class="token punctuation">..</span>.

Percentage of the requests served within a certain <span class="token function">time</span> <span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
  <span class="token number">50</span>%    <span class="token number">375</span>
  <span class="token number">66</span>%    <span class="token number">387</span>
  <span class="token number">75</span>%    <span class="token number">396</span>
  <span class="token number">80</span>%    <span class="token number">402</span>
  <span class="token number">90</span>%    <span class="token number">425</span>
  <span class="token number">95</span>%    <span class="token number">448</span>
  <span class="token number">98</span>%    <span class="token number">460</span>
  <span class="token number">99</span>%    <span class="token number">467</span>
 <span class="token number">100</span>%    <span class="token number">480</span> <span class="token punctuation">(</span>longest request<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-超卖" tabindex="-1"><a class="header-anchor" href="#_2-3-3-超卖" aria-hidden="true">#</a> 2.3.3 超卖</h4><p>查看控制台打印结果：</p><figure><img src="http://img.hl1015.top/blog/image-20211119211743010.png" alt="image-20211119211743010" tabindex="0" loading="lazy"><figcaption>image-20211119211743010</figcaption></figure><p>查看 redis 中关于 prodid = 1001 的库存：</p><figure><img src="http://img.hl1015.top/blog/image-20211119211850611.png" alt="image-20211119211850611" tabindex="0" loading="lazy"><figcaption>image-20211119211850611</figcaption></figure><p>由此可以发现，上面的秒杀程序，在高并发请求下，引发了<strong>超卖</strong>现象</p><h2 id="_3-超卖问题" tabindex="-1"><a class="header-anchor" href="#_3-超卖问题" aria-hidden="true">#</a> 3. 超卖问题</h2><figure><img src="http://img.hl1015.top/blog/image-20211119212013463.png" alt="image-20211119212013463" tabindex="0" loading="lazy"><figcaption>image-20211119212013463</figcaption></figure><h2 id="_4-利用乐观锁淘汰用户-解决超卖问题" tabindex="-1"><a class="header-anchor" href="#_4-利用乐观锁淘汰用户-解决超卖问题" aria-hidden="true">#</a> 4. 利用乐观锁淘汰用户，解决超卖问题</h2><p>添加了 <strong>乐观锁</strong> 之后的代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 模仿秒杀
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImitateSecKillRedisUtil</span> <span class="token punctuation">{</span>

    <span class="token comment">// 秒杀过程</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">doSecKill</span><span class="token punctuation">(</span><span class="token class-name">String</span> uid<span class="token punctuation">,</span> <span class="token class-name">String</span> prodid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1 uid 和 prodid 非空判断</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uid <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prodid <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;uid 和 prodid 不能为空！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 2 连接redis</span>
        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">&quot;ip地址&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jedis<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">&quot;*****&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3 拼接key</span>
        <span class="token comment">// 3.1 库存key</span>
        <span class="token class-name">String</span> kcKey <span class="token operator">=</span> <span class="token string">&quot;sk:&quot;</span> <span class="token operator">+</span> prodid <span class="token operator">+</span> <span class="token string">&quot;:qt&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 3.2 秒杀成功用户key</span>
        <span class="token class-name">String</span> userKey <span class="token operator">=</span> <span class="token string">&quot;sk:&quot;</span> <span class="token operator">+</span> prodid <span class="token operator">+</span> <span class="token string">&quot;:user&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 增加乐观锁 ***【乐观锁change1】***</span>
        jedis<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>kcKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 4 获取库存，如果库存为null，秒杀还没有开始</span>
        <span class="token class-name">String</span> kc <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>kcKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>kc<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀还没有开始，请等待！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;秒杀还没有开始，请等待！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 5 判断用户是否重复秒杀操作</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span>userKey<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;已经秒杀成功了，不能重复秒杀！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;已经秒杀成功了，不能重复秒杀！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 6 判断如果商品库存数量小于1，秒杀结束</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>kc<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀已经结束了！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;秒杀已经结束了！&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 7 秒杀过程</span>
        <span class="token comment">// 使用事务 ***【乐观锁change2】***</span>
        <span class="token class-name">Transaction</span> multi <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 组队操作 ***【乐观锁change3】***</span>
        <span class="token comment">// 库存-1</span>
        multi<span class="token punctuation">.</span><span class="token function">decr</span><span class="token punctuation">(</span>kcKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 把秒杀成功用户添加清单里面</span>
        multi<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span>userKey<span class="token punctuation">,</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 执行事务 ***【乐观锁change4】***</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> multi<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 判断提交事务是否失败</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>results <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> results<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀失败了....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">&quot;秒杀失败了....&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀成功了...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;秒杀成功了...&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-继续增加并发测试" tabindex="-1"><a class="header-anchor" href="#_5-继续增加并发测试" aria-hidden="true">#</a> 5. 继续增加并发测试</h2><h3 id="_5-1-连接有限制" tabindex="-1"><a class="header-anchor" href="#_5-1-连接有限制" aria-hidden="true">#</a> 5.1 连接有限制</h3><p>如果测试过程中出现 <code>apr_socket_recv: Connection refused (111)</code> 的提示</p><p>解决方案：增加 -r 参数【-r，Don&#39;t exit on socket receive errors】</p><h3 id="_5-2-连接超时-通过连接池解决" tabindex="-1"><a class="header-anchor" href="#_5-2-连接超时-通过连接池解决" aria-hidden="true">#</a> 5.2 连接超时，通过连接池解决</h3><figure><img src="http://img.hl1015.top/blog/image-20211119214528176.png" alt="image-20211119214528176" tabindex="0" loading="lazy"><figcaption>image-20211119214528176</figcaption></figure><p>为了节省每次连接 redis 服务带来的消耗，把连接好的实例反复利用，通过参数管理连接的行为。</p><p>（1）依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- jedis --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）连接池工具类</p><ul><li><p>连接池参数</p><ul><li><strong>maxTotal</strong>：控制一个 pool 可分配多少个 jedis 实例，通过pool.getResource() 来获取；如果赋值为 -1，则表示不限制；如果 pool 已经分配了 maxTotal 个 jedis 实例，则此时 pool 的状态为 exhausted</li><li><strong>maxIdle</strong>：控制一个 pool 最多有多少个状态为 idle（空闲）的 jedis 实例</li><li><strong>maxWaitMills</strong>：表示当 borrow 一个 jedis 实例时，最大的等待毫秒数，如果超过等待时间，则直接抛 JedisConnectionException</li><li><strong>testOnBorrow</strong>：获得一个 jedis 实例的时候是否检查连接可用性（ping()），如果为 true，则得到的 jedis 实例均是可用的</li></ul></li><li><p>工具类代码</p><ul><li><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JedisPoolUtil</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> <span class="token class-name">JedisPool</span> jedisPool <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">JedisPoolUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">JedisPool</span> <span class="token function">getJedisPoolInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> jedisPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">JedisPoolUtil</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> jedisPool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">JedisPoolConfig</span> poolConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPoolConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    poolConfig<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    poolConfig<span class="token punctuation">.</span><span class="token function">setMaxIdle</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    poolConfig<span class="token punctuation">.</span><span class="token function">setMaxWaitMillis</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    poolConfig<span class="token punctuation">.</span><span class="token function">setBlockWhenExhausted</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    poolConfig<span class="token punctuation">.</span><span class="token function">setTestOnBorrow</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ping PONG</span>

                    jedisPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JedisPool</span><span class="token punctuation">(</span>poolConfig<span class="token punctuation">,</span> <span class="token string">&quot;ip地址&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">,</span> <span class="token string">&quot;*****&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> jedisPool<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">JedisPool</span> jedisPool<span class="token punctuation">,</span> <span class="token class-name">Jedis</span> jedis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> jedis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            jedisPool<span class="token punctuation">.</span><span class="token function">returnResource</span><span class="token punctuation">(</span>jedis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>模拟秒杀代码 <strong>连接 jedis</strong> 改造</p><ul><li><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 2 连接redis</span>
<span class="token comment">// 通过连接池得到 jedis 对象</span>
<span class="token class-name">JedisPool</span> jedisPoolInstance <span class="token operator">=</span> <span class="token class-name">JedisPoolUtil</span><span class="token punctuation">.</span><span class="token function">getJedisPoolInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> jedisPoolInstance<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h3 id="_5-3-已经秒光-可是还有库存" tabindex="-1"><a class="header-anchor" href="#_5-3-已经秒光-可是还有库存" aria-hidden="true">#</a> 5.3 已经秒光，可是还有库存</h3><p>将 redis 中关于 prodid = 1001 的库存设为 200</p><figure><img src="http://img.hl1015.top/blog/image-20211119222011447.png" alt="image-20211119222011447" tabindex="0" loading="lazy"><figcaption>image-20211119222011447</figcaption></figure><p>然后再次通过 ab 工具进行并发测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ab <span class="token parameter variable">-n</span> <span class="token number">1000</span> <span class="token parameter variable">-c</span> <span class="token number">100</span> http://192.168.81.1:6666/doSecKill?prodid<span class="token operator">=</span><span class="token number">1001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>控制台打印结果：</p><figure><img src="http://img.hl1015.top/blog/image-20211119222351856.png" alt="image-20211119222351856" tabindex="0" loading="lazy"><figcaption>image-20211119222351856</figcaption></figure><p>查看 redis 中关于 prodid = 1001 的库存</p><figure><img src="http://img.hl1015.top/blog/image-20211119222535033.png" alt="image-20211119222535033" tabindex="0" loading="lazy"><figcaption>image-20211119222535033</figcaption></figure><p>可以发现已经秒光了，可是还有库存。</p><p>原因：乐观锁导致很多请求都失败【先点的没秒到，后点的可能秒到了】</p><h2 id="_6-解决库存遗留问题" tabindex="-1"><a class="header-anchor" href="#_6-解决库存遗留问题" aria-hidden="true">#</a> 6. 解决库存遗留问题</h2><h3 id="_6-1-lua-脚本" tabindex="-1"><a class="header-anchor" href="#_6-1-lua-脚本" aria-hidden="true">#</a> 6.1 LUA 脚本</h3><figure><img src="http://img.hl1015.top/blog/image-20211120135431048.png" alt="image-20211120135431048" tabindex="0" loading="lazy"><figcaption>image-20211120135431048</figcaption></figure><p>Lua 是一个小巧的脚本语言，Lua 脚本可以很容易地被 C/C++ 代码调用，也可以反过来调用 C/C++ 的函数，Lua 并没有提供强大的库，一个完整的 Lua 解释器不过 200 k，所以 Lua 不适合作为开发独立应用程序的语言，而是作为<span style="color:red;">嵌入式脚本语言</span>。</p><p>很多应用程序、游戏使用 Lua 作为自己的嵌入式脚本语言，以此来实现可配置性、可扩展性。</p><p>这其中包括魔兽争霸地图、魔兽世界、博德之门、愤怒的小鸟等众多游戏插件或外挂。</p>`,71),r={href:"https://www.w3cschool.cn/lua/",target:"_blank",rel:"noopener noreferrer"},d=a(`<h3 id="_6-2-lua-脚本在-redis-中的优势" tabindex="-1"><a class="header-anchor" href="#_6-2-lua-脚本在-redis-中的优势" aria-hidden="true">#</a> 6.2 LUA 脚本在 Redis 中的优势</h3><p>将复杂的或者多步的 redis 操作，写为一个脚本，一次提交给 redis 执行，减少反复连接 redis 的次数，提升性能。</p><p><span style="color:blue;">Lua 脚本类似 redis 事务，有一定的原子性，不会被其他命令插队，可以完成一些 redis 事务性的操作，但是注意 redis 的 lua 脚本功能，只有在 Redis 2.6 以上的版本才可以使用。--- 可以利用 lua 脚本淘汰用户，解决超卖问题</span></p><p>redis 2.6 版本以后，通过 lua 脚本解决<span style="color:red;"><strong>争抢问题</strong></span>，实际上是 <span style="color:red;"><strong>redis 利用其单线程的特性，用任务队列的方式解决多任务并发的问题</strong></span>。</p><figure><img src="http://img.hl1015.top/blog/image-20211120151039256.png" alt="image-20211120151039256" tabindex="0" loading="lazy"><figcaption>image-20211120151039256</figcaption></figure><h2 id="_7-秒杀案例代码" tabindex="-1"><a class="header-anchor" href="#_7-秒杀案例代码" aria-hidden="true">#</a> 7. 秒杀案例代码</h2><p>回顾上面的秒杀代码：</p><ul><li>第一版：简单版（使用 ab 工具模拟并发测试时，出现了超卖现象，库存出现复数）</li><li>第二版：连接池解决超时问题</li><li>第三版：加事务-乐观锁（解决超卖），但出现遗留库存</li><li>第四版：使用 Lua 脚本解决库存遗留问题（看下面实现）</li></ul><h3 id="解决库存遗留问题-lua-脚本" tabindex="-1"><a class="header-anchor" href="#解决库存遗留问题-lua-脚本" aria-hidden="true">#</a> 解决库存遗留问题 --- LUA 脚本</h3><p>lua 脚本：</p><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> userid<span class="token operator">=</span>KEYS<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token keyword">local</span> prodid<span class="token operator">=</span>KEYS<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">local</span> qtkey<span class="token operator">=</span><span class="token string">&quot;sk:&quot;</span><span class="token operator">..</span>prodid<span class="token operator">..</span><span class="token string">&quot;:qt&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">local</span> usersKey<span class="token operator">=</span><span class="token string">&quot;sk:&quot;</span><span class="token operator">..</span>prodid<span class="token punctuation">.</span>&quot;<span class="token punctuation">:</span>usr&#39;<span class="token punctuation">;</span> 
<span class="token keyword">local</span> userExists<span class="token operator">=</span>redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;sismember&quot;</span><span class="token punctuation">,</span>usersKey<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>userExists<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">1</span> <span class="token keyword">then</span> 
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">local</span> num<span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span> <span class="token punctuation">,</span>qtkey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">0</span> <span class="token keyword">then</span> 
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
<span class="token keyword">else</span> 
  redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;decr&quot;</span><span class="token punctuation">,</span>qtkey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&quot;sadd&quot;</span><span class="token punctuation">,</span>usersKey<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>模拟秒杀过程代码改造：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// lua 脚本</span>
<span class="token keyword">static</span> <span class="token class-name">String</span> secKillScript <span class="token operator">=</span> <span class="token string">&quot;local userid=KEYS[1];\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;local prodid=KEYS[2];\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;local qtkey=&#39;sk:&#39;..prodid..\\&quot;:qt\\&quot;;\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;local usersKey=&#39;sk:&#39;..prodid..\\&quot;:usr\\&quot;;\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;local userExists=redis.call(\\&quot;sismember\\&quot;,usersKey,userid);\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;if tonumber(userExists)==1 then \\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;   return 2;\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;end\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;local num= redis.call(\\&quot;get\\&quot; ,qtkey);\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;if tonumber(num)&lt;=0 then \\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;   return 0;\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;else \\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;   redis.call(\\&quot;decr\\&quot;,qtkey);\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;   redis.call(\\&quot;sadd\\&quot;,usersKey,userid);\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;end\\r\\n&quot;</span> <span class="token operator">+</span>
		<span class="token string">&quot;return 1&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 使用 lua 脚本模拟秒杀过程</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">doSecKillWithLuaScript</span><span class="token punctuation">(</span><span class="token class-name">String</span> uid<span class="token punctuation">,</span> <span class="token class-name">String</span> prodid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

	<span class="token class-name">JedisPool</span> jedispool <span class="token operator">=</span> <span class="token class-name">JedisPoolUtil</span><span class="token punctuation">.</span><span class="token function">getJedisPoolInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> jedispool<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> sha1 <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">scriptLoad</span><span class="token punctuation">(</span>secKillScript<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Object</span> result <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">evalsha</span><span class="token punctuation">(</span>sha1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> uid<span class="token punctuation">,</span> prodid<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">String</span> reString <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">String</span> res<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>reString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;已抢空！！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		res <span class="token operator">=</span> <span class="token string">&quot;已抢空！！&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>reString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;抢购成功！！！！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		res <span class="token operator">=</span> <span class="token string">&quot;抢购成功！！！！&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>reString<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;该用户已抢过！！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		res <span class="token operator">=</span> <span class="token string">&quot;该用户已抢过！！&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;抢购异常！！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		res <span class="token operator">=</span> <span class="token string">&quot;抢购异常！！&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次使用 ab 工具进行并发模拟测试，redis 中关于 prodid = 1001 的库存设置为 500</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ab <span class="token parameter variable">-n</span> <span class="token number">1000</span> <span class="token parameter variable">-c</span> <span class="token number">100</span> http://192.168.81.1:6666/doSecKillWithLuaScript?prodid<span class="token operator">=</span><span class="token number">1001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.hl1015.top/blog/image-20211120155944259.png" alt="image-20211120155944259" tabindex="0" loading="lazy"><figcaption>image-20211120155944259</figcaption></figure><p>控制台打印结果：</p><figure><img src="http://img.hl1015.top/blog/image-20211120172317012.png" alt="image-20211120172317012" tabindex="0" loading="lazy"><figcaption>image-20211120172317012</figcaption></figure><p>查看 redis 中关于 prodid = 1001 的库存：</p><figure><img src="http://img.hl1015.top/blog/image-20211120172406305.png" alt="image-20211120172406305" tabindex="0" loading="lazy"><figcaption>image-20211120172406305</figcaption></figure>`,20);function k(m,v){const t=p("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[s("学习地址："),n("a",r,[s("https://www.w3cschool.cn/lua/"),c(t)])]),d])}const g=e(l,[["render",k],["__file","redis-11.html.vue"]]);export{g as default};
