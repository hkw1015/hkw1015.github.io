import{_ as i,Z as a,$ as e,a5 as t}from"./framework-1fb77053.js";const r={},l=t('<h2 id="模块" tabindex="-1"><a class="header-anchor" href="#模块" aria-hidden="true">#</a> 模块</h2><ul><li>理解：向外提供特定功能的 js 程序，一般就是一个 js 文件</li><li>为什么：js 文件很多很复杂</li><li>作用：复用 js，简化 js 的编写，提高 js 运行效率</li></ul><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><ul><li>理解：实现应用中局部功能代码和资源的集合（html/css/js/image ...）</li><li>为什么：一个界面的功能很复杂</li><li>作用：复用编码，简化项目编码，提高运行效率</li></ul><figure><img src="http://img.hl1015.top/work/image-20221227161844383.png" alt="image-20221227161844383" tabindex="0" loading="lazy"><figcaption>image-20221227161844383</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221227162023163.png" alt="image-20221227162023163" tabindex="0" loading="lazy"><figcaption>image-20221227162023163</figcaption></figure><h2 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化" aria-hidden="true">#</a> 模块化</h2><p>当应用中的 js 都以模块的方式来编写的，那这个应用就是一个模块化的应用</p><h2 id="组件化" tabindex="-1"><a class="header-anchor" href="#组件化" aria-hidden="true">#</a> 组件化</h2><p>当应用中的功能都以多组件的方式来编写的，那这个应用就是一个组件化的应用</p><figure><img src="http://img.hl1015.top/work/image-20221227162324396.png" alt="image-20221227162324396" tabindex="0" loading="lazy"><figcaption>image-20221227162324396</figcaption></figure>',11),n=[l];function h(s,c){return a(),e("div",null,n)}const o=i(r,[["render",h],["__file","01-模块(化)与组件(化).html.vue"]]);export{o as default};
