import{_ as o,E as p,Z as c,$ as i,a0 as n,a1 as s,a3 as e,a5 as a}from"./framework-1fb77053.js";const l={},d=a('<h2 id="_1-springboot-actuator" tabindex="-1"><a class="header-anchor" href="#_1-springboot-actuator" aria-hidden="true">#</a> 1. SpringBoot Actuator</h2><h3 id="_1-1-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-简介" aria-hidden="true">#</a> 1.1 简介</h3><p>未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot 就抽取了 Actuator 场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。</p><h3 id="_1-2-1-x-与-2-x-的不同" tabindex="-1"><a class="header-anchor" href="#_1-2-1-x-与-2-x-的不同" aria-hidden="true">#</a> 1.2 1.x 与 2.x 的不同</h3><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/springboot-image39.png" alt="springboot-image39" tabindex="0" loading="lazy"><figcaption>springboot-image39</figcaption></figure><h3 id="_1-3-如何使用" tabindex="-1"><a class="header-anchor" href="#_1-3-如何使用" aria-hidden="true">#</a> 1.3 如何使用</h3>',6),u=a(`<li><p>引入场景</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/image-20210908110617324.png" alt="image-20210908110617324" tabindex="0" loading="lazy"><figcaption>image-20210908110617324</figcaption></figure></li>`,1),r={href:"http://localhost:8080/actuator/",target:"_blank",rel:"noopener noreferrer"},k=a(`<li><p>暴露所有监控信息为 HTTP</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 暴露所有端点信息</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;*&#39;</span>  <span class="token comment"># 以 web 方式暴露</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>测试</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/actuator/beans</span></span>
<span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/actuator/configprops</span></span>
<span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/actuator/metrics</span></span>
<span class="token header"><span class="token header-name keyword">http</span><span class="token punctuation">:</span><span class="token header-value">//localhost:8080/actuator/metrics/jvm.gc.pause</span></span>
......
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),m=n("h3",{id:"_1-4-可视化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-4-可视化","aria-hidden":"true"},"#"),s(" 1.4 可视化")],-1),v={href:"https://github.com/codecentric/spring-boot-admin",target:"_blank",rel:"noopener noreferrer"},h=a(`<h2 id="_2-actuator-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-actuator-endpoint" aria-hidden="true">#</a> 2. Actuator Endpoint</h2><h3 id="_2-1-最常用的端点" tabindex="-1"><a class="header-anchor" href="#_2-1-最常用的端点" aria-hidden="true">#</a> 2.1 最常用的端点</h3><table><thead><tr><th>ID</th><th>描述</th></tr></thead><tbody><tr><td><code>auditevents</code></td><td>暴露当前应用程序的审核事件信息。需要一个<code>AuditEventRepository组件</code>。</td></tr><tr><td><code>beans</code></td><td>显示应用程序中所有 Spring Bean 的完整列表。</td></tr><tr><td><code>caches</code></td><td>暴露可用的缓存。</td></tr><tr><td><code>conditions</code></td><td>显示自动配置的所有条件信息，包括匹配或不匹配的原因。</td></tr><tr><td><code>configprops</code></td><td>显示所有<code>@ConfigurationProperties</code>。</td></tr><tr><td><code>env</code></td><td>暴露 Spring 的属性<code>ConfigurableEnvironment</code>。</td></tr><tr><td><code>flyway</code></td><td>显示已应用的所有 Flyway 数据库迁移。 需要一个或多个<code>Flyway</code>组件。</td></tr><tr><td><code>health</code></td><td>显示应用程序运行状况信息。</td></tr><tr><td><code>httptrace</code></td><td>显示 HTTP 跟踪信息（默认情况下，最近 100 个 HTTP 请求-响应）。需要一个<code>HttpTraceRepository</code>组件。</td></tr><tr><td><code>info</code></td><td>显示应用程序信息。</td></tr><tr><td><code>integrationgraph</code></td><td>显示 Spring <code>integrationgraph</code> ，需要依赖<code>spring-integration-core</code>。</td></tr><tr><td><code>loggers</code></td><td>显示和修改应用程序中日志的配置。</td></tr><tr><td><code>liquibase</code></td><td>显示已应用的所有 Liquibase 数据库迁移。需要一个或多个<code>Liquibase</code>组件。</td></tr><tr><td><code>metrics</code></td><td>显示当前应用程序的 &quot;指标&quot; 信息。</td></tr><tr><td><code>mappings</code></td><td>显示所有<code>@RequestMapping</code>路径列表。</td></tr><tr><td><code>scheduledtasks</code></td><td>显示应用程序中的计划任务。</td></tr><tr><td><code>sessions</code></td><td>允许从 Spring Session 支持的会话存储中检索和删除用户会话。需要使用 Spring Session 的基于 Servlet 的 Web 应用程序。</td></tr><tr><td><code>shutdown</code></td><td>使应用程序正常关闭，默认禁用。</td></tr><tr><td><code>startup</code></td><td>显示由<code>ApplicationStartup</code>收集的启动步骤数据。需要使用<code>SpringApplication</code>进行配置<code>BufferingApplicationStartup</code>。</td></tr><tr><td><code>threaddump</code></td><td>执行线程转储。</td></tr></tbody></table><p>如果您的应用程序是Web应用程序（Spring MVC，Spring WebFlux 或 Jersey），则可以使用以下附加端点：</p><table><thead><tr><th>ID</th><th>描述</th></tr></thead><tbody><tr><td><code>heapdump</code></td><td>返回<code>hprof</code>堆转储文件。</td></tr><tr><td><code>jolokia</code></td><td>通过 HTTP 暴露 JMX bean（需要引入 Jolokia，不适用于 WebFlux）。需要引入依赖<code>jolokia-core</code>。</td></tr><tr><td><code>logfile</code></td><td>返回日志文件的内容（如果已设置<code>logging.file.name</code>或<code>logging.file.path</code>属性）。支持使用HTTP<code>Range</code>标头来检索部分日志文件的内容。</td></tr><tr><td><code>prometheus</code></td><td>以 Prometheus 服务器可以抓取的格式公开指标。需要依赖<code>micrometer-registry-prometheus</code>。</td></tr></tbody></table><p>最常用的 Endpoint</p><ul><li><p><strong>Health：监控状况</strong></p></li><li><p><strong>Metrics：运行时指标</strong></p></li><li><p><strong>Loggers：日志记录</strong></p></li></ul><h3 id="_2-2-health-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-2-health-endpoint" aria-hidden="true">#</a> 2.2 Health Endpoint</h3><p>健康检查端点，我们一般用于在云平台，平台会定时的检查应用的健康状况，我们就需要 Health Endpoint 可以为平台返回当前应用的<code>一系列组件健康状况的集合</code>。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">health</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">show-details</span><span class="token punctuation">:</span> always <span class="token comment"># 开启 health 的详细显示</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重要的几点：</p><ul><li><p>health endpoint 返回的结果，应该是一系列健康检查后的一个<code>汇总报告</code></p></li><li><p>很多的健康检查默认已经自动配置好了，比如：数据库、redis 等</p></li><li><p>可以很容易的添加自定义的健康检查机制</p></li></ul><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/image-20210908130505114.png" alt="image-20210908130505114" tabindex="0" loading="lazy"><figcaption>image-20210908130505114</figcaption></figure><h3 id="_2-3-metrics-endpoint" tabindex="-1"><a class="header-anchor" href="#_2-3-metrics-endpoint" aria-hidden="true">#</a> 2.3 Metrics Endpoint</h3><p>提供详细的、层级的、空间指标信息，这些信息可以被pull（主动推送）或者push（被动获取）方式得到；</p><ul><li><p>通过 Metrics 对接多种监控系统</p></li><li><p>简化核心 Metrics 开发</p></li><li><p>添加自定义 Metrics 或者扩展已有 Metrics</p></li></ul><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/image-20210908131806832.png" alt="image-20210908131806832" tabindex="0" loading="lazy"><figcaption>image-20210908131806832</figcaption></figure><h3 id="_2-4-管理-endpoints" tabindex="-1"><a class="header-anchor" href="#_2-4-管理-endpoints" aria-hidden="true">#</a> 2.4 管理 Endpoints</h3><h4 id="_2-4-1-开启与禁用-endpoints" tabindex="-1"><a class="header-anchor" href="#_2-4-1-开启与禁用-endpoints" aria-hidden="true">#</a> 2.4.1 开启与禁用 Endpoints</h4><ul><li><p>默认所有的 Endpoint 除了 shutdown 都是开启的。</p></li><li><p>需要开启或者禁用某个 Endpoint。配置模式为 <strong>management.endpoint.《endpointName》.enabled = true</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">beans</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或者禁用所有的 Endpoint 然后手动开启指定的 Endpoint</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">beans</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">health</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-4-2-暴露-endpoints" tabindex="-1"><a class="header-anchor" href="#_2-4-2-暴露-endpoints" aria-hidden="true">#</a> 2.4.2 暴露 Endpoints</h4><p>支持的暴露方式：</p><ul><li>HTTP：默认只暴露 <strong>health</strong> 和 <strong>info</strong> Endpoint</li><li><strong>JMX</strong>：默认暴露所有 Endpoint</li><li>除了 health 和 info，剩下的 Endpoint 都应该进行保护访问。如果引入 SpringSecurity，则会默认配置安全访问规则</li></ul><table><thead><tr><th>ID</th><th>JMX</th><th>Web</th></tr></thead><tbody><tr><td><code>auditevents</code></td><td>Yes</td><td>No</td></tr><tr><td><code>beans</code></td><td>Yes</td><td>No</td></tr><tr><td><code>caches</code></td><td>Yes</td><td>No</td></tr><tr><td><code>conditions</code></td><td>Yes</td><td>No</td></tr><tr><td><code>configprops</code></td><td>Yes</td><td>No</td></tr><tr><td><code>env</code></td><td>Yes</td><td>No</td></tr><tr><td><code>flyway</code></td><td>Yes</td><td>No</td></tr><tr><td><code>health</code></td><td>Yes</td><td>Yes</td></tr><tr><td><code>heapdump</code></td><td>N/A</td><td>No</td></tr><tr><td><code>httptrace</code></td><td>Yes</td><td>No</td></tr><tr><td><code>info</code></td><td>Yes</td><td>Yes</td></tr><tr><td><code>integrationgraph</code></td><td>Yes</td><td>No</td></tr><tr><td><code>jolokia</code></td><td>N/A</td><td>No</td></tr><tr><td><code>logfile</code></td><td>N/A</td><td>No</td></tr><tr><td><code>loggers</code></td><td>Yes</td><td>No</td></tr><tr><td><code>liquibase</code></td><td>Yes</td><td>No</td></tr><tr><td><code>metrics</code></td><td>Yes</td><td>No</td></tr><tr><td><code>mappings</code></td><td>Yes</td><td>No</td></tr><tr><td><code>prometheus</code></td><td>N/A</td><td>No</td></tr><tr><td><code>scheduledtasks</code></td><td>Yes</td><td>No</td></tr><tr><td><code>sessions</code></td><td>Yes</td><td>No</td></tr><tr><td><code>shutdown</code></td><td>Yes</td><td>No</td></tr><tr><td><code>startup</code></td><td>Yes</td><td>No</td></tr><tr><td><code>threaddump</code></td><td>Yes</td><td>No</td></tr></tbody></table><h3 id="_3-定制-endpoint" tabindex="-1"><a class="header-anchor" href="#_3-定制-endpoint" aria-hidden="true">#</a> 3.定制 Endpoint</h3><h4 id="_3-1-定制-health-信息" tabindex="-1"><a class="header-anchor" href="#_3-1-定制-health-信息" aria-hidden="true">#</a> 3.1 定制 Health 信息</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyHealthIndicator</span> <span class="token keyword">implements</span> <span class="token class-name">HealthIndicator</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Health</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> errorCode <span class="token operator">=</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// perform some specific health check</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;Error Code&quot;</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 构建 Health</span>
<span class="token class-name">Health</span> build <span class="token operator">=</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error service&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;500&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withException</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComHealthIndicator</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractHealthIndicator</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 真实的检查方法
     * <span class="token keyword">@param</span> <span class="token parameter">builder</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doHealthCheck</span><span class="token punctuation">(</span><span class="token class-name">Health<span class="token punctuation">.</span>Builder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// mongodb 获取连接进行测试</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 检查完成</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token comment">// builder.up(); // 健康</span>
            builder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// builder.down();</span>
            builder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">OUT_OF_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;连接超时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        builder<span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withDetails</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-定制-info-信息" tabindex="-1"><a class="header-anchor" href="#_3-2-定制-info-信息" aria-hidden="true">#</a> 3.2 定制 info 信息</h3><p>常用两种方式</p><h4 id="_3-2-1-编写配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-1-编写配置文件" aria-hidden="true">#</a> 3.2.1 编写配置文件</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">info</span><span class="token punctuation">:</span>
  <span class="token key atrule">appName</span><span class="token punctuation">:</span> boot<span class="token punctuation">-</span>admin
  <span class="token key atrule">version</span><span class="token punctuation">:</span> 2.0.1
  <span class="token key atrule">mavenProjectName</span><span class="token punctuation">:</span> @project.artifactId@  <span class="token comment"># 使用@@可以获取 maven 的 pom 文件值</span>
  <span class="token key atrule">mavenProjectVersion</span><span class="token punctuation">:</span> @project.version@
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-编写-infocontributor" tabindex="-1"><a class="header-anchor" href="#_3-2-2-编写-infocontributor" aria-hidden="true">#</a> 3.2.2 编写 infoContributor</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleInfoContributor</span> <span class="token keyword">implements</span> <span class="token class-name">InfoContributor</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contribute</span><span class="token punctuation">(</span><span class="token class-name">Info<span class="token punctuation">.</span>Builder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        builder<span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),b={href:"http://localhost:8080/actuator/info",target:"_blank",rel:"noopener noreferrer"},g=a('<figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/image-20210908134349305.png" alt="image-20210908134349305" tabindex="0" loading="lazy"><figcaption>image-20210908134349305</figcaption></figure><h3 id="_3-3-定制-metrics-信息" tabindex="-1"><a class="header-anchor" href="#_3-3-定制-metrics-信息" aria-hidden="true">#</a> 3.3 定制 Metrics 信息</h3><h4 id="_3-3-1-springboot-支持自动适配的-metrics" tabindex="-1"><a class="header-anchor" href="#_3-3-1-springboot-支持自动适配的-metrics" aria-hidden="true">#</a> 3.3.1 SpringBoot 支持自动适配的 Metrics</h4>',3),f=a("<li><p>JVM metrics, report utilization of:</p></li><li><ul><li>Various memory and buffer pools</li><li>Statistics related to garbage collection</li></ul></li><li><ul><li>Threads utilization</li><li>Number of classes loaded/unloaded</li></ul></li><li><p>CPU metrics</p></li><li><p>File descriptor metrics</p></li><li><p>Kafka consumer and producer metrics</p></li><li><p>Log4j2 metrics: record the number of events logged to Log4j2 at each level</p></li><li><p>Logback metrics: record the number of events logged to Logback at each level</p></li><li><p>Uptime metrics: report a gauge for uptime and a fixed gauge representing the application’s absolute start time</p></li><li><p>Tomcat metrics (<code>server.tomcat.mbeanregistry.enabled</code> must be set to <code>true</code> for all Tomcat metrics to be registered)</p></li>",10),y={href:"https://docs.spring.io/spring-integration/docs/5.4.1/reference/html/system-management.html#micrometer-integration",target:"_blank",rel:"noopener noreferrer"},_=a(`<h4 id="_3-3-2-增加定制-metrics" tabindex="-1"><a class="header-anchor" href="#_3-3-2-增加定制-metrics" aria-hidden="true">#</a> 3.3.2 增加定制 Metrics</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">MyService</span><span class="token punctuation">{</span>
    <span class="token class-name">Counter</span> counter<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MyService</span><span class="token punctuation">(</span><span class="token class-name">MeterRegistry</span> meterRegistry<span class="token punctuation">)</span><span class="token punctuation">{</span>
        counter <span class="token operator">=</span> meterRegistry<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token string">&quot;myservice.method.running.counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用下面的方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token class-name">MeterBinder</span> <span class="token function">queueSize</span><span class="token punctuation">(</span><span class="token class-name">Queue</span> queue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>registry<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Gauge</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;queueSize&quot;</span><span class="token punctuation">,</span> queue<span class="token operator">::</span><span class="token function">size</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-定制-endpoint" tabindex="-1"><a class="header-anchor" href="#_3-4-定制-endpoint" aria-hidden="true">#</a> 3.4 定制 Endpoint</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Endpoint</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">&quot;container&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DockerEndpoint</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ReadOperation</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">getDockerInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;docker started...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@WriteOperation</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">restartDocker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;docker restarted....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>场景：开发 <strong>ReadinessEndpoint</strong> 来管理程序是否就绪，或者 <strong>LivenessEndpoint</strong> 来管理程序是否存活；</p>`,7),w={href:"https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-kubernetes-probes",target:"_blank",rel:"noopener noreferrer"};function x(q,E){const t=p("ExternalLinkIcon");return c(),i("div",null,[d,n("ul",null,[u,n("li",null,[n("p",null,[s("访问 "),n("a",r,[s("http://localhost:8080/actuator/"),e(t)]),s("**")])]),k]),m,n("p",null,[n("a",v,[s("https://github.com/codecentric/spring-boot-admin"),e(t)])]),h,n("p",null,[n("a",b,[s("http://localhost:8080/actuator/info"),e(t)]),s(" 会输出以上方式返回的所有info信息")]),g,n("ul",null,[f,n("li",null,[n("p",null,[n("a",y,[s("Spring Integration"),e(t)]),s(" metrics")])])]),_,n("p",null,[s("当然，这个也可以直接使用 "),n("a",w,[s("https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-kubernetes-probes"),e(t)])])])}const j=o(l,[["render",x],["__file","springboot2-core-5.html.vue"]]);export{j as default};
