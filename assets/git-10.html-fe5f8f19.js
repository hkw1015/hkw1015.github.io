import{_ as t,E as l,Z as o,$ as p,a0 as a,a1 as n,a3 as e,a5 as i}from"./framework-1fb77053.js";const c={},r=a("h2",{id:"_1-gitlab-简介",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-gitlab-简介","aria-hidden":"true"},"#"),n(" 1. GitLab 简介")],-1),u=a("p",null,"GitLab 是由 GitLabInc 开发，使用 MIT 许可证的基于网络的 Git 仓库管理工具，且具有 wiki 和 issue 跟踪功能。使用 Git 作为代码管理工具，并在此基础上搭建起来的 web 服务。",-1),g=a("p",null,"GitLab 由乌克兰程序员 DmitriyZaporozhets 和 ValerySizov 开发，它使用 Ruby 语言写成。后来，一些部分用 Go 语言进行重写。截止 2018 年 5 月，该公司约有 290 名团队成员，以及 2000 多名开源贡献者。GitLab 被 IBM，Sony，JulichResearchCenter，NASA，Alibaba，Invincea，O’ReillyMedia，Leibniz-Rechenzentrum(LRZ)，CERN，SpaceX 等组织使用。",-1),d=a("h2",{id:"_2-gitlab-官网地址",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-gitlab-官网地址","aria-hidden":"true"},"#"),n(" 2. GitLab 官网地址")],-1),m={href:"https://about.gitlab.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://about.gitlab.com/installation/",target:"_blank",rel:"noopener noreferrer"},h=i('<h2 id="_3-gitlab-安装" tabindex="-1"><a class="header-anchor" href="#_3-gitlab-安装" aria-hidden="true">#</a> 3. GitLab 安装</h2><h3 id="_3-1-服务器准备" tabindex="-1"><a class="header-anchor" href="#_3-1-服务器准备" aria-hidden="true">#</a> 3.1 服务器准备</h3><ul><li>准备一个系统为 CentOS7 以上版本的服务器，要求内存 4 G，磁盘 50 G</li><li>关闭防火墙，并且配置好主机名和 IP，保证服务器可以上网</li></ul><h3 id="_3-2-安装包准备" tabindex="-1"><a class="header-anchor" href="#_3-2-安装包准备" aria-hidden="true">#</a> 3.2 安装包准备</h3><p>Yum 在线安装 gitlab-cc 时，需要下载几百 M 的安装文件，非常耗时，所以最好提前把所需 RPM 包下载到本地，然后使用离线 rpm 的方式安装</p>',5),v={href:"https://packages.gitlab.com/gitlab/gitlab-ce",target:"_blank",rel:"noopener noreferrer"},k=a("span",{style:{color:"red"}},"推荐，下载速度快",-1),f=a("li",null,[a("img",{src:"http://img.hl1015.top/blog/image-20211115163448292.png",alt:"image-20211115163448292",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20211115163448292")],-1),_={href:"https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el8/",target:"_blank",rel:"noopener noreferrer"},x=i(`<p>拿到 rpm 包后，上传到服务器的 /opt/module 目录</p><h3 id="_3-3-编写安装脚本" tabindex="-1"><a class="header-anchor" href="#_3-3-编写安装脚本" aria-hidden="true">#</a> 3.3 编写安装脚本</h3><p>安装 gitlab 步骤比较繁琐，因此我们可以参考官网编写 gitlab 的安装脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># vim gitlab-install.sh</span>
<span class="token function">sudo</span> <span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> /opt/module/gitlab-ce-14.4.2-ce.0.el8.x86_64.rpm
<span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">curl</span> policycoreutils-python openssh-server cronie
<span class="token function">sudo</span> lokkit <span class="token parameter variable">-s</span> http <span class="token parameter variable">-s</span> <span class="token function">ssh</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> postfix
<span class="token function">sudo</span> <span class="token function">service</span> postfix start
<span class="token function">sudo</span> <span class="token function">chkconfig</span> postfix on
<span class="token function">curl</span> https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
<span class="token function">sudo</span> <span class="token assign-left variable">EXTERNAL_URL</span><span class="token operator">=</span><span class="token string">&quot;http://116.62.232.164:9091&quot;</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> gitlab-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给脚本增加执行权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># chmod +x gitlab-install.sh </span>
<span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">869296</span>
drwxr-xr-x <span class="token number">6</span> root root       <span class="token number">134</span> Sep <span class="token number">27</span> <span class="token number">13</span>:08 apache-zookeeper-3.5.7-bin
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">890154811</span> Nov <span class="token number">15</span> <span class="token number">10</span>:03 gitlab-ce-13.10.2-ce.0.el7.x86_64.rpm
-rwxr-xr-x <span class="token number">1</span> root root       <span class="token number">417</span> Nov <span class="token number">15</span> <span class="token number">10</span>:13 gitlab-install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后执行该脚本，开始安装 gitlab-ce，注意一定要保证服务器可以上网。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># ./gitlab-install.sh </span>
warning: /opt/module/gitlab-ce-14.4.2-ce.0.el8.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID f27eab47: NOKEY
Verifying<span class="token punctuation">..</span>.                          <span class="token comment">################################# [100%]</span>
Preparing<span class="token punctuation">..</span>.                          <span class="token comment">################################# [100%]</span>
Updating / installing<span class="token punctuation">..</span>.
   <span class="token number">1</span>:gitlab-ce-14.4.2-ce.0.el8        <span class="token comment">################################# [100%]</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
Dependencies resolved.
Nothing to do.
Complete<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-修改-gitlab-默认端口号" tabindex="-1"><a class="header-anchor" href="#_3-4-修改-gitlab-默认端口号" aria-hidden="true">#</a> 3.4 修改 GitLab 默认端口号</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/gitlab/gitlab.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.hl1015.top/blog/image-20211115135450029.png" alt="image-20211115135450029" tabindex="0" loading="lazy"><figcaption>image-20211115135450029</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211115135725074.png" alt="image-20211115135725074" tabindex="0" loading="lazy"><figcaption>image-20211115135725074</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="http://img.hl1015.top/blog/image-20211115154019561.png" alt="image-20211115154019561" tabindex="0" loading="lazy"><figcaption>image-20211115154019561</figcaption></figure><h3 id="_3-5-初始化-gitlab-服务" tabindex="-1"><a class="header-anchor" href="#_3-5-初始化-gitlab-服务" aria-hidden="true">#</a> 3.5 初始化 GitLab 服务</h3><p>执行以下命令初始化 GitLab 服务，过程大概需要几分钟，耐心等待...</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># gitlab-ctl reconfigure</span>
Starting Chef Infra Client, version <span class="token number">15.17</span>.4
resolving cookbooks <span class="token keyword">for</span> run list: <span class="token punctuation">[</span><span class="token string">&quot;gitlab&quot;</span><span class="token punctuation">]</span>
Synchronizing Cookbooks:
  - gitlab <span class="token punctuation">(</span><span class="token number">0.0</span>.1<span class="token punctuation">)</span>
  <span class="token punctuation">..</span>.
gitlab Reconfigured<span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-启动-gitlab-服务" tabindex="-1"><a class="header-anchor" href="#_3-6-启动-gitlab-服务" aria-hidden="true">#</a> 3.6 启动 GitLab 服务</h3><p>执行以下命令启动 GitLab 服务，如需停止，执行 gitlab-ctl stop</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># gitlab-ctl start</span>
ok: run: alertmanager: <span class="token punctuation">(</span>pid <span class="token number">626212</span><span class="token punctuation">)</span> 578s
ok: run: gitaly: <span class="token punctuation">(</span>pid <span class="token number">626254</span><span class="token punctuation">)</span> 577s
ok: run: gitlab-exporter: <span class="token punctuation">(</span>pid <span class="token number">626183</span><span class="token punctuation">)</span> 581s
ok: run: gitlab-workhorse: <span class="token punctuation">(</span>pid <span class="token number">626156</span><span class="token punctuation">)</span> 582s
ok: run: grafana: <span class="token punctuation">(</span>pid <span class="token number">626235</span><span class="token punctuation">)</span> 578s
ok: run: logrotate: <span class="token punctuation">(</span>pid <span class="token number">625082</span><span class="token punctuation">)</span> 785s
ok: run: nginx: <span class="token punctuation">(</span>pid <span class="token number">627585</span><span class="token punctuation">)</span> 2s
ok: run: node-exporter: <span class="token punctuation">(</span>pid <span class="token number">626171</span><span class="token punctuation">)</span> 582s
ok: run: postgres-exporter: <span class="token punctuation">(</span>pid <span class="token number">626228</span><span class="token punctuation">)</span> 578s
ok: run: postgresql: <span class="token punctuation">(</span>pid <span class="token number">625304</span><span class="token punctuation">)</span> 762s
ok: run: prometheus: <span class="token punctuation">(</span>pid <span class="token number">626193</span><span class="token punctuation">)</span> 580s
ok: run: puma: <span class="token punctuation">(</span>pid <span class="token number">625483</span><span class="token punctuation">)</span> 701s
ok: run: redis: <span class="token punctuation">(</span>pid <span class="token number">625119</span><span class="token punctuation">)</span> 779s
ok: run: redis-exporter: <span class="token punctuation">(</span>pid <span class="token number">626186</span><span class="token punctuation">)</span> 580s
ok: run: sidekiq: <span class="token punctuation">(</span>pid <span class="token number">625501</span><span class="token punctuation">)</span> 695s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7-使用浏览器访问-gitlab" tabindex="-1"><a class="header-anchor" href="#_3-7-使用浏览器访问-gitlab" aria-hidden="true">#</a> 3.7 使用浏览器访问 GitLab</h3><figure><img src="http://img.hl1015.top/blog/image-20211115141629061.png" alt="image-20211115141629061" tabindex="0" loading="lazy"><figcaption>image-20211115141629061</figcaption></figure><p>gitlab-ce-14 初装以后，把密码放在了一个临时文件中【/etc/gitlab/initial_root_password】</p><p>这个文件将在首次执行 reconfigure 后 24 小时自动删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZbp1he64xoa8bsarsqawsZ module<span class="token punctuation">]</span><span class="token comment"># cat /etc/gitlab/initial_root_password </span>
<span class="token comment"># WARNING: This value is valid only in the following conditions</span>
<span class="token comment">#          1. If provided manually (either via \`GITLAB_ROOT_PASSWORD\` environment variable or via \`gitlab_rails[&#39;initial_root_password&#39;]\` setting in \`gitlab.rb\`, it was provided before database was seeded for the first time (usually, the first reconfigure run).</span>
<span class="token comment">#          2. Password hasn&#39;t been changed manually, either via UI or via command line.</span>
<span class="token comment">#</span>
<span class="token comment">#          If the password shown here doesn&#39;t work, you must reset the admin password following https://docs.gitlab.com/ee/security/reset_user_password.html#reset-your-root-password.</span>

Password: jQLmbSDQ6VX18UKJnw/2C2Cg8UlapN30vxDPFpPtheA<span class="token operator">=</span>

<span class="token comment"># NOTE: This file will be automatically deleted in the first reconfigure run after 24 hours.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 root 账号和上面的密码进行登录，登录成功界面如下图所示：</p><figure><img src="http://img.hl1015.top/blog/image-20211115143548086.png" alt="image-20211115143548086" tabindex="0" loading="lazy"><figcaption>image-20211115143548086</figcaption></figure><p>记得修改初始密码</p><img src="http://img.hl1015.top/blog/image-20211115144127944.png" alt="image-20211115144127944" style="zoom:67%;"><figure><img src="http://img.hl1015.top/blog/image-20211115144236425.png" alt="image-20211115144236425" tabindex="0" loading="lazy"><figcaption>image-20211115144236425</figcaption></figure><p>修改好之后，需要重新登录</p><figure><img src="http://img.hl1015.top/blog/image-20211115144415729.png" alt="image-20211115144415729" tabindex="0" loading="lazy"><figcaption>image-20211115144415729</figcaption></figure><h2 id="_4-gitlab-创建远程库" tabindex="-1"><a class="header-anchor" href="#_4-gitlab-创建远程库" aria-hidden="true">#</a> 4. GitLab 创建远程库</h2><figure><img src="http://img.hl1015.top/blog/image-20211115151632871.png" alt="image-20211115151632871" tabindex="0" loading="lazy"><figcaption>image-20211115151632871</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211115151710470.png" alt="image-20211115151710470" tabindex="0" loading="lazy"><figcaption>image-20211115151710470</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211115151906915.png" alt="image-20211115151906915" tabindex="0" loading="lazy"><figcaption>image-20211115151906915</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211115152056659.png" alt="image-20211115152056659" tabindex="0" loading="lazy"><figcaption>image-20211115152056659</figcaption></figure><h2 id="_5-idea-集成-gitlab" tabindex="-1"><a class="header-anchor" href="#_5-idea-集成-gitlab" aria-hidden="true">#</a> 5. IDEA 集成 GitLab</h2><p><strong>（1）安装 GitLab 插件</strong></p><figure><img src="http://img.hl1015.top/blog/image-20211115145103094.png" alt="image-20211115145103094" tabindex="0" loading="lazy"><figcaption>image-20211115145103094</figcaption></figure><p><strong>（2）设置 GitLab 插件</strong></p><img src="http://img.hl1015.top/blog/image-20211115150052818.png" alt="image-20211115150052818" style="zoom:50%;"><img src="http://img.hl1015.top/blog/image-20211115151112203.png" alt="image-20211115151112203" style="zoom:67%;"><img src="http://img.hl1015.top/blog/image-20211115151141058.png" alt="image-20211115151141058" style="zoom:50%;"><p><strong>（3）push 本地代码到 GitLab 远程库</strong></p><figure><img src="http://img.hl1015.top/blog/image-20211115151331696.png" alt="image-20211115151331696" tabindex="0" loading="lazy"><figcaption>image-20211115151331696</figcaption></figure><p>自定义远程库链接</p><img src="http://img.hl1015.top/blog/image-20211115151429753.png" alt="image-20211115151429753" style="zoom:67%;"><figure><img src="http://img.hl1015.top/blog/image-20211115160137841.png" alt="image-20211115160137841" tabindex="0" loading="lazy"><figcaption>image-20211115160137841</figcaption></figure><p>选择 gitlab 远程链接，进行 push</p><img src="http://img.hl1015.top/blog/image-20211115160347067.png" alt="image-20211115160347067" style="zoom:67%;"><p>首次连接 gitlab，需要登录账号和密码，用 root 账号和修改的密码登录即可</p><figure><img src="http://img.hl1015.top/blog/image-20211115160552728.png" alt="image-20211115160552728" tabindex="0" loading="lazy"><figcaption>image-20211115160552728</figcaption></figure><p>代码 push 成功</p><figure><img src="http://img.hl1015.top/blog/image-20211115160619267.png" alt="image-20211115160619267" tabindex="0" loading="lazy"><figcaption>image-20211115160619267</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211115160746964.png" alt="image-20211115160746964" tabindex="0" loading="lazy"><figcaption>image-20211115160746964</figcaption></figure><p>只要 GitLab 的远程库连接定义好以后，对 GitLab 远程库进行 pull 和 clone 的操作和 GitHub 、码云一致，此处不再赘述</p>`,57);function y(w,z){const s=l("ExternalLinkIcon");return o(),p("div",null,[r,u,g,d,a("ul",null,[a("li",null,[n("官网地址："),a("a",m,[n("https://about.gitlab.com/"),e(s)])]),a("li",null,[n("安装说明："),a("a",b,[n("https://about.gitlab.com/installation/"),e(s)])])]),h,a("ul",null,[a("li",null,[n("GitLab 官网下载地址："),a("a",v,[n("https://packages.gitlab.com/gitlab/gitlab-ce"),e(s)])]),a("li",null,[n("清华大学开源软件镜像站（"),k,n("） "),a("ul",null,[f,a("li",null,[n("下载地址："),a("a",_,[n("https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el8/"),e(s)])])])])]),x])}const L=t(c,[["render",y],["__file","git-10.html.vue"]]);export{L as default};
