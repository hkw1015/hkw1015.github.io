const t=JSON.parse('{"key":"v-7c1a6ef8","path":"/java/basic/object-oriented-1.html","title":"面向对象(上)","lang":"zh-CN","frontmatter":{"title":"面向对象(上)","category":"Java","tag":["Java 基础"],"description":"1. 类与对象 面向对象学习的三条主线 （1）类与类的成员：属性、方法、构造器、代码块、内部类 （2）面向对象的三大特征：封装性、继承性、多态性、（抽象性） （3）关键字：this、package、import、super、final、abstract、interface等 面向对象与面向过程（理解） 面向过程：强调的是功能行为。 面向对象：将功能封装进对象，强调了具备功能的对象。 完成一个项目（或功能）的思路 （1）是否已经存在具有相关功能结构的对象，如果存在，直接调用； （2）如果此对象不存在，则需要自己创建一个对象； （3）如果发现创建此对象的类不存在，则需要创建一个具备相关功能的类。 面向对象中两个重要的概念 类（class）：对一类事物的描述，抽象的，概念的。 对象（object、instance）：实实在在存在的一个个体，是具体的，形象的。 二者的关系：对象，是由类派生的，创建的。 面向对象思想落地实现的规则 （1）创建一个类，并设计类的内部结构：属性、方法、构造器、代码块、内部类； （2）创建类的对象（最主要的方法：new()）； （3）通过“对象.方法”或“对象.属性”的方式，实现相关的功能的调用。","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/basic/object-oriented-1.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"面向对象(上)"}],["meta",{"property":"og:description","content":"1. 类与对象 面向对象学习的三条主线 （1）类与类的成员：属性、方法、构造器、代码块、内部类 （2）面向对象的三大特征：封装性、继承性、多态性、（抽象性） （3）关键字：this、package、import、super、final、abstract、interface等 面向对象与面向过程（理解） 面向过程：强调的是功能行为。 面向对象：将功能封装进对象，强调了具备功能的对象。 完成一个项目（或功能）的思路 （1）是否已经存在具有相关功能结构的对象，如果存在，直接调用； （2）如果此对象不存在，则需要自己创建一个对象； （3）如果发现创建此对象的类不存在，则需要创建一个具备相关功能的类。 面向对象中两个重要的概念 类（class）：对一类事物的描述，抽象的，概念的。 对象（object、instance）：实实在在存在的一个个体，是具体的，形象的。 二者的关系：对象，是由类派生的，创建的。 面向对象思想落地实现的规则 （1）创建一个类，并设计类的内部结构：属性、方法、构造器、代码块、内部类； （2）创建类的对象（最主要的方法：new()）； （3）通过“对象.方法”或“对象.属性”的方式，实现相关的功能的调用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Java 基础"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象(上)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 类与对象","slug":"_1-类与对象","link":"#_1-类与对象","children":[]},{"level":2,"title":"2. 类的结构之一：属性","slug":"_2-类的结构之一-属性","link":"#_2-类的结构之一-属性","children":[]},{"level":2,"title":"3. 类的结构之二：方法","slug":"_3-类的结构之二-方法","link":"#_3-类的结构之二-方法","children":[]},{"level":2,"title":"4. 面向对象的特征一：封装性","slug":"_4-面向对象的特征一-封装性","link":"#_4-面向对象的特征一-封装性","children":[]},{"level":2,"title":"5. 类的结构之三：构造器","slug":"_5-类的结构之三-构造器","link":"#_5-类的结构之三-构造器","children":[]},{"level":2,"title":"6. 关键字：this","slug":"_6-关键字-this","link":"#_6-关键字-this","children":[]},{"level":2,"title":"7. 关键字：package/import","slug":"_7-关键字-package-import","link":"#_7-关键字-package-import","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":9.5,"words":2849},"filePathRelative":"java/basic/object-oriented-1.md","localizedDate":"2023年5月17日","excerpt":"<h2> 1. 类与对象</h2>\\n<ul>\\n<li>\\n<p><strong>面向对象学习的三条主线</strong></p>\\n<p>（1）类与类的成员：属性、方法、构造器、代码块、内部类</p>\\n<p>（2）面向对象的三大特征：封装性、继承性、多态性、（抽象性）</p>\\n<p>（3）关键字：this、package、import、super、final、abstract、interface等</p>\\n</li>\\n<li>\\n<p><strong>面向对象与面向过程（理解）</strong></p>\\n<p>面向过程：强调的是功能行为。</p>\\n<p>面向对象：将功能封装进对象，强调了具备功能的对象。</p>\\n</li>\\n<li>\\n<p><strong>完成一个项目（或功能）的思路</strong></p>\\n<p>（1）是否已经存在具有相关功能结构的对象，如果存在，直接调用；</p>\\n<p>（2）如果此对象不存在，则需要自己创建一个对象；</p>\\n<p>（3）如果发现创建此对象的类不存在，则需要创建一个具备相关功能的类。</p>\\n</li>\\n<li>\\n<p><strong>面向对象中两个重要的概念</strong></p>\\n<p>类（class）：对一类事物的描述，抽象的，概念的。</p>\\n<p>对象（object、instance）：实实在在存在的一个个体，是具体的，形象的。</p>\\n<p>二者的关系：对象，是由类派生的，创建的。</p>\\n</li>\\n<li>\\n<p><strong>面向对象思想落地实现的规则</strong></p>\\n<p>（1）创建一个类，并设计类的内部结构：属性、方法、构造器、代码块、内部类；</p>\\n<p>（2）创建类的对象（最主要的方法：new()）；</p>\\n<p>（3）通过“对象.方法”或“对象.属性”的方式，实现相关的功能的调用。</p>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
