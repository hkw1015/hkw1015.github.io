import{_ as t,Z as p,$ as e,a0 as n,a6 as o,a5 as a}from"./framework-1fb77053.js";const i={},l=a(`<h2 id="直接用-script-引入-vuejs" tabindex="-1"><a class="header-anchor" href="#直接用-script-引入-vuejs" aria-hidden="true">#</a> 直接用 &lt;script&gt; 引入 vuejs</h2><blockquote><p>这里以 Vue 2 官方教程为例</p><p>这里建议在 VS Code 中预先安装 <code>Live Server</code> 插件用于内置服务器进行本地代码运行</p><img src="http://img.hl1015.top/work/image-20221117142922663.png" alt="image-20221117142922663" style="zoom:50%;"></blockquote><ul><li>新建一个工程目录，使用 VS Code 打开</li><li>在工程下创建两个目录，一个目录存放 html，一个目录存放 js（从官方地址下载）</li></ul><figure><img src="http://img.hl1015.top/work/image-20221114131937987.png" alt="image-20221114131937987" tabindex="0" loading="lazy"><figcaption>image-20221114131937987</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114131731342.png" alt="image-20221114131731342" tabindex="0" loading="lazy"><figcaption>image-20221114131731342</figcaption></figure><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>初始Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 引入Vue --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>此时右键 <code>Open with Live Server</code>，运行到 Google 浏览器上打开控制台能看到报如下两个提示信息</li></ul><figure><img src="http://img.hl1015.top/work/image-20221118091632604.png" alt="image-20221118091632604" tabindex="0" loading="lazy"><figcaption>image-20221118091632604</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114132800264.png" alt="image-20221114132800264" tabindex="0" loading="lazy"><figcaption>image-20221114132800264</figcaption></figure><p><strong>为了解决提示问题，第一步，我们前往官网下载开发者工具</strong></p><figure><img src="http://img.hl1015.top/work/image-20221114133317730.png" alt="image-20221114133317730" tabindex="0" loading="lazy"><figcaption>image-20221114133317730</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114133432176.png" alt="image-20221114133432176" tabindex="0" loading="lazy"><figcaption>image-20221114133432176</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114133459521.png" alt="image-20221114133459521" tabindex="0" loading="lazy"><figcaption>image-20221114133459521</figcaption></figure><blockquote><p>以安装在 Google 浏览器上为例</p></blockquote><figure><img src="http://img.hl1015.top/work/image-20221114133621169.png" alt="image-20221114133621169" tabindex="0" loading="lazy"><figcaption>image-20221114133621169</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114134606471.png" alt="image-20221114134606471" tabindex="0" loading="lazy"><figcaption>image-20221114134606471</figcaption></figure><figure><img src="http://img.hl1015.top/work/image-20221114135130681.png" alt="image-20221114135130681" tabindex="0" loading="lazy"><figcaption>image-20221114135130681</figcaption></figure><p>至此，我们已经在我们的浏览器上安装好了 Vue 开发者工具</p><p><strong>第二步，关闭生产环境提示信息</strong></p><p>这里需要先了解一下 <code>Vue.config</code> 这个概念</p><figure><img src="http://img.hl1015.top/work/image-20221114135553424.png" alt="image-20221114135553424" tabindex="0" loading="lazy"><figcaption>image-20221114135553424</figcaption></figure><p>然后我们关注 <code>productionTip</code> 这个属性</p><figure><img src="http://img.hl1015.top/work/image-20221114135645379.png" alt="image-20221114135645379" tabindex="0" loading="lazy"><figcaption>image-20221114135645379</figcaption></figure><p>我们在浏览器控制台输入 <code>Vue.config</code> 查看全局配置，可以看到 <code>productionTip = true</code> 开启了生产提示</p><figure><img src="http://img.hl1015.top/work/image-20221114135805141.png" alt="image-20221114135805141" tabindex="0" loading="lazy"><figcaption>image-20221114135805141</figcaption></figure><p>我们可以将这个生产提示进行关闭，打开 <code>vue.js</code> 文件，搜索 <code>productionTip</code>，将值改为 false</p><figure><img src="http://img.hl1015.top/work/image-20221114141104013.png" alt="image-20221114141104013" tabindex="0" loading="lazy"><figcaption>image-20221114141104013</figcaption></figure><p>这时再刷新页面，控制台就没有多余的提示信息了</p><blockquote><p><strong>favicon.ico 找不到问题解决</strong></p><figure><img src="http://img.hl1015.top/work/image-20221117143054985.png" alt="image-20221117143054985" tabindex="0" loading="lazy"><figcaption>image-20221117143054985</figcaption></figure><p>原因：我们在使用 <code>Live Server</code> 内置服务器运行代码时，默认启动了 5500 端口，项目根目录的所有文件都可以通过 <code>http://ip:5500/文件名</code> 来进行访问，于是浏览器查找网页图标通过 <code>http://127.0.0.1:5500/favicon.ico</code> 路径进行查找，由于项目中不存在，所以报了 404</p><p>解决：找一个 <code>favicon.ico</code> 文件放到项目根目录下即可</p><figure><img src="http://img.hl1015.top/work/image-20221117144621642.png" alt="image-20221117144621642" tabindex="0" loading="lazy"><figcaption>image-20221117144621642</figcaption></figure><p>然后浏览器通过 shift + f5 刷新即可看到图标了</p><figure><img src="http://img.hl1015.top/work/image-20221117144723936.png" alt="image-20221117144723936" tabindex="0" loading="lazy"><figcaption>image-20221117144723936</figcaption></figure></blockquote><h2 id="hello-小案例" tabindex="-1"><a class="header-anchor" href="#hello-小案例" aria-hidden="true">#</a> Hello 小案例</h2><p><strong>demo 代码：</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>初始Vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 引入Vue --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 准备好一个容器 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- {{}} 为插值表达式 --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello,{{name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 创建 Vue 实例</span>
        <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span> <span class="token comment">// el 用于指定当前 Vue 实例为哪个容器服务，值通常为css选择器字符串【不常用但支持的写法：el: document.getElementById(&#39;root&#39;)】</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// data 中用于存储数据，数据供 el 所指定的容器去使用，值我们暂时先写成一个对象</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hkw&#39;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>运行效果：</strong></p><figure><img src="http://img.hl1015.top/work/image-20221117155411150.png" alt="image-20221117155411150" tabindex="0" loading="lazy"><figcaption>image-20221117155411150</figcaption></figure><p>使用 Vue 的开发者工具对 Vue 实例的 data 属性值进行修改，可以发现页面上的数据也会随之修改</p><figure><img src="http://img.hl1015.top/work/image-20221117162743561.png" alt="image-20221117162743561" tabindex="0" loading="lazy"><figcaption>image-20221117162743561</figcaption></figure><p><strong>总结：</strong></p>`,37),c=n("li",null,[n("p",null,"想让 Vue 工作，就必须创建一个 Vue 实例，且要传入一个配置对象")],-1),u=n("li",null,[n("p",null,"root 容器里的代码依然符合 html 规范，只不过混入了一些特殊的 Vue 语法（比如：插值表达式）")],-1),r=n("li",null,[n("p",null,"root 容器里的代码被称为【Vue 模板】")],-1),g=n("li",null,[n("p",null,"Vue 实例和容器都是一一对应的")],-1),d=n("li",null,[n("p",null,"真实开发中只有一个 Vue 实例，并且会配合着组件一起使用")],-1),k=n("blockquote",null,[n("p",null,"js 表达式：一个表达式能产生一个值，可以放在任何一个需要值的地方"),n("ul",null,[n("li",null,"a"),n("li",null,"a + b"),n("li",null,"function1()"),n("li",null,"x === y ? 'a' : 'b'")])],-1),m=n("li",null,[n("p",null,"一旦 data 中的数据发生改变，那么页面中用到该数据的地方也会自动更新")],-1),v=a(`<h2 id="el-和-data-的两种写法" tabindex="-1"><a class="header-anchor" href="#el-和-data-的两种写法" aria-hidden="true">#</a> el 和 data 的两种写法</h2><p><strong>el 的两种写法</strong></p><ul><li>（1）<code>new Vue</code> 时配置 el 属性</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>（2）先创建 Vue 实例【假设起名变量为 vm】，随后再通过 <code>vm.$mount(&#39;#容器id&#39;)</code> 指定 el 的值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
vm<span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">&#39;#root&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>data 的两种写法</strong></p><blockquote><p>如何选择：目前哪种写法都可以，但后面学习到组件时，data 必须使用函数式，否则会报错</p></blockquote><ul><li>（1）对象式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hkw&#39;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>（2）函数式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span>
	<span class="token function-variable function">data</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hkw&#39;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

或者简写为如下格式

<span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#root&#39;</span><span class="token punctuation">,</span>
	<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hkw&#39;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>一个重要的原则</strong>：由 Vue 管理的函数，一定不要写箭头函数，一旦写了箭头函数，this 就不再是 Vue 实例了</p>`,13);function b(s,h){return p(),e("div",null,[l,n("ol",null,[c,u,r,g,d,n("li",null,[n("p",null,o(s.xxx)+" 中的 xxx 要写 js 表达式，且 xxx 可以自动读取到 data 中的所有属性",1),k]),m]),v])}const y=t(i,[["render",b],["__file","02-搭建Vue开发环境.html.vue"]]);export{y as default};
