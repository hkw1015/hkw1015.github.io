import{_ as e,E as t,Z as p,$ as o,a0 as s,a1 as n,a3 as l,a5 as i}from"./framework-1fb77053.js";const r={},c={href:"http://www.redis.cn/commands.html",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="_1-redis-键-key" tabindex="-1"><a class="header-anchor" href="#_1-redis-键-key" aria-hidden="true">#</a> 1. Redis 键（key）</h2><ul><li><p>查看当前库所有 key（匹配：keys *1）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> aaa AAA
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> keys *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;aaa&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>判断某个 key 是否存在</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> exists aaa
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看 key 是什么类型</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">type</span> aaa
string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除指定的 key</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> del aaa
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><span style="color:red;">非阻塞删除</span></p><p>仅将 keys 从 keyspace 元数据中删除，真正的删除会在后续异步操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> bbb BBB
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> unlink bbb
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>为给定的 key 设置过期时间 &amp; 查看 key 还有多少秒过期 -1 表示永不过期，-2 表示已过期</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> ccc CCC
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> expire ccc <span class="token number">10</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl ccc
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl ccc
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl ccc
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查看当前数据库的 key 的数量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> keys *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;ddd&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> dbsize
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>切换数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token keyword">select</span> <span class="token number">5</span>
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>清空当前库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> dbsize
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> flushdb
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> dbsize
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>通杀全部库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> flushall
OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_2-redis-字符串-string" tabindex="-1"><a class="header-anchor" href="#_2-redis-字符串-string" aria-hidden="true">#</a> 2. Redis 字符串（String）</h2><h3 id="_2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-简介" aria-hidden="true">#</a> 2.1 简介</h3><ul><li>String 是 Redis 最基本的类型，你可以理解为与 Memcached 一模一样的类型，一个 key 对应一个 value。</li><li>String 类型是<span style="color:red;">二进制安全的</span>，意味着 Redis 的 String 可以包含任何数据，比如 jpg 图片或者序列化的对象。</li><li>String 类型是 Redis 最基本的数据类型，一个 Redis 中字符串 value 最多可以是 <span style="color:red;">512 M</span>。</li></ul><h3 id="_2-2-常用命令" tabindex="-1"><a class="header-anchor" href="#_2-2-常用命令" aria-hidden="true">#</a> 2.2 常用命令</h3><p><strong>（1）添加键值对</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k1 v100
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k2 v200
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> keys *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;k2&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;k1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k2 v2200 <span class="token comment"># 再次设置，会覆盖上一次的值</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k2
<span class="token string">&quot;v2200&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）查询对应键值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>get <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k2
<span class="token string">&quot;v2200&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）将给定的 value 追加到原值的末尾</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>append <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> append k1 abc
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）获得值的长度</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>strlen <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> strlen k1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（5）只有在 key 不存在时，才设置 key 的值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>setnx <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> setnx k1 v1100
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）将 key 中储存的数字值增 1</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>incr <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incr k1
<span class="token punctuation">(</span>error<span class="token punctuation">)</span> ERR value is not an integer or out of range
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k3 <span class="token number">100</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incr k3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">101</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incr k3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">102</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（7）将 key 中储存的数字值减 1</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>decr <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decr k3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">101</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decr k3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（8）将 key 中储存的数字值增减【自定义步长】</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>incrby / decrby <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>步长<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incrby k3 <span class="token number">5</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">105</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incrby k3 <span class="token number">5</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">110</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> incrby k3 <span class="token number">5</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">115</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decrby k3 <span class="token number">2</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">113</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decrby k3 <span class="token number">2</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">111</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> decrby k3 <span class="token number">2</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">109</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><figure><img src="http://img.hl1015.top/blog/image-20211117095653866.png" alt="image-20211117095653866" tabindex="0" loading="lazy"><figcaption>image-20211117095653866</figcaption></figure><p>所谓<strong>原子操作</strong>是指不会被线程调度机制打断的操作。</p><p>这种操作一旦开始，就一直运行到结束，中间不会有任何 context switch（切换到另一个线程）。</p><p>[1]在单线程中，能够在单条指令中完成的操作都可以认为是 &quot;原子操作&quot;，因为中断只能发生于指令之间。</p><p>[2]在多线程中，不能被其他进程（线程）打断的操作就叫原子操作。</p><p>Redis 单命令的原子性主要得益于 Redis 的单线程。</p></blockquote><p><strong>（9）同时设置一个或多个 key-value 对</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mset <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> mset k4 v400 k5 v500 k6 v600
OK
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（10）同时获取一个或多个 value</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mget <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> mget k4 k5 k6
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v400&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v500&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v600&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（11）同时设置一个或多个 key-value 对，当且仅当所有给定 key 都不存在</strong></p><blockquote><p><span style="color:red;"><strong>原子性，有一个失败则都失败</strong></span></p></blockquote><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>msetnx <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> msetnx k4 v4400 k5 v5500 k6 v6600
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> msetnx k7 v700 k8 v800 k9 v900
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> mget k7 k8 k9
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v700&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v800&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v900&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（12）获取值的范围，类似 Java 中的 substring【区别：<span style="color:red;">包前 &amp; 包后</span>】</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>getrange <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>起始位置<span class="token operator">&gt;</span><span class="token operator">&lt;</span>结束位置<span class="token operator">&gt;</span> <span class="token comment"># 索引从 0 开始</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> getrange k1 <span class="token number">0</span> <span class="token number">3</span>
<span class="token string">&quot;v100&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（13）用 &lt;value&gt; 覆写 &lt;key&gt; 所储存的字符串值，从 &lt;起始位置&gt; 开始</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>setrange <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>起始位置<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span> <span class="token comment"># 索引从 0 开始</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100abc&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> setrange k1 <span class="token number">4</span> def
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1
<span class="token string">&quot;v100def&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（14）设置键值的同时，设置过期时间，单位：秒</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>setex <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>过期时间<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> setex k10 <span class="token number">10</span> v1000
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl k10
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> ttl k10
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（15）以新换旧，设置新值同时获得旧值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>getset <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k11 v1100
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k11
<span class="token string">&quot;v1100&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> getset k11 v1111
<span class="token string">&quot;v1100&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k11
<span class="token string">&quot;v1111&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-数据结构" tabindex="-1"><a class="header-anchor" href="#_2-3-数据结构" aria-hidden="true">#</a> 2.3 数据结构</h3><p>String 的数据结构为简单动态字符串（Simple Dynamic String，缩写 SDS），是可以修改的字符串，内部结构实现上类似于 Java 的 ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配。</p><figure><img src="http://img.hl1015.top/blog/image-20211117110520766.png" alt="image-20211117110520766" tabindex="0" loading="lazy"><figcaption>image-20211117110520766</figcaption></figure><p>如上图所示，内部为当前字符串实际分配的空间 capacity 一般要高于实际字符串长度 len。当字符串长度小于 1 M 时，扩容都是加倍现有的空间，如果超过 1 M，扩容时一次只会多扩 1 M 的空间，需要注意的是字符串最大长度为 512 M。</p><h2 id="_3-redis-列表-list" tabindex="-1"><a class="header-anchor" href="#_3-redis-列表-list" aria-hidden="true">#</a> 3. Redis 列表（List）</h2><h3 id="_3-1-简介" tabindex="-1"><a class="header-anchor" href="#_3-1-简介" aria-hidden="true">#</a> 3.1 简介</h3><ul><li>单键多值</li><li>Redis 列表是简单的字符串列表，按照插入顺序排序，你可以添加一个元素到列表的头部（左边）或者尾部（右边）</li><li>它的底层实际是个双向链表，对两端的操作性能很高，通过索引下标的操作中间节点性能会较差</li></ul><figure><img src="http://img.hl1015.top/blog/image-20211117111214281.png" alt="image-20211117111214281" tabindex="0" loading="lazy"><figcaption>image-20211117111214281</figcaption></figure><h3 id="_3-2-常用命令" tabindex="-1"><a class="header-anchor" href="#_3-2-常用命令" aria-hidden="true">#</a> 3.2 常用命令</h3><p><strong>（1）从左边/右边插入一个或多个值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lpush / rpush <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lpush k1 v1 v2 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k1 <span class="token number">0</span> <span class="token parameter variable">-1</span> <span class="token comment"># （从左到右）取出 k1 对应列表中的所有值</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpush k2 v1 v2 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>lpush 过程分析：</p><figure><img src="http://img.hl1015.top/blog/image-20211117133109944.png" alt="image-20211117133109944" tabindex="0" loading="lazy"><figcaption>image-20211117133109944</figcaption></figure><p>rpush 过程分析：</p><figure><img src="http://img.hl1015.top/blog/image-20211117133434492.png" alt="image-20211117133434492" tabindex="0" loading="lazy"><figcaption>image-20211117133434492</figcaption></figure><p><strong>（2）从左边/右边吐出一个值【值在键在，值光键亡】</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lpop / rpop <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lpop k1
<span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lpop k1
<span class="token string">&quot;v2&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lpop k1
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> exists k1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpop k2
<span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpop k2
<span class="token string">&quot;v2&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpop k2
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> exists k2
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）从 key1 列表右边吐出一个值，插到 key2 列表左边</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rpoplpush <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lpush k1 v1 v2 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpush k2 v1 v2 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> rpoplpush k1 k2
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>过程分析：</p><figure><img src="http://img.hl1015.top/blog/image-20211117134549665.png" alt="image-20211117134549665" tabindex="0" loading="lazy"><figcaption>image-20211117134549665</figcaption></figure><p><strong>（4）按照索引下标范围获得元素（从左到右）</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lrange <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>start<span class="token operator">&gt;</span><span class="token operator">&lt;</span>stop<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>eg：lrange mylist 0 -1【0 代表左边第一个，-1 代表右边第一个，0 -1 表示获取所有】</p><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（5）按照索引下标获得元素（从左到右）</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lindex <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>index<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lindex k2 <span class="token number">0</span>
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lindex k2 <span class="token number">1</span>
<span class="token string">&quot;v1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lindex k2 <span class="token number">2</span>
<span class="token string">&quot;v2&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lindex k2 <span class="token number">3</span>
<span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）获得列表长度</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>llen <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> llen k2
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（7）在 value 前面/后面 插入 newvalue 新值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>linsert <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> before/after <span class="token operator">&lt;</span>value<span class="token operator">&gt;</span><span class="token operator">&lt;</span>newvalue<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> linsert k2 before v1 newv1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;newv1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> linsert k2 after v2 newv1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;newv1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;newv1&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（8）从左边删除 n 个 value（从左到右）</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lrem <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>n<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;newv1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;newv1&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrem k2 <span class="token number">2</span> newv1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（9）将列表 key 下标为 index 的值替换成 value</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>lset <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>index<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lset k2 <span class="token number">0</span> replacev1
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> lrange k2 <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;replacev1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-数据结构" tabindex="-1"><a class="header-anchor" href="#_3-3-数据结构" aria-hidden="true">#</a> 3.3 数据结构</h3><p>List 的数据结构为 压缩列表 ziplist / 快速链表 quickList。</p><p>首先在列表元素较少的情况下会使用一块连续的内存存储，这个结构是 ziplist，也即是压缩列表。它将所有的元素紧挨着一起存储，分配的是一块连续的内存，当数据量比较多的时候才会改成 quicklist。因为普通的链表需要的附加指针空间太大，会比较浪费空间。比如这个列表里存的只是 int 类型的数据，结构上还需要两个额外的指针 prev 和 next。</p><figure><img src="http://img.hl1015.top/blog/image-20211117140031259.png" alt="image-20211117140031259" tabindex="0" loading="lazy"><figcaption>image-20211117140031259</figcaption></figure><p>Redis 将链表和 ziplist 结合起来组成了 quicklist，也就是将多个 ziplist 使用双向指针串起来使用。这样既满足了快速的插入删除性能，又不会出现太大的空间冗余。</p><h2 id="_4-redis-集合-set" tabindex="-1"><a class="header-anchor" href="#_4-redis-集合-set" aria-hidden="true">#</a> 4. Redis 集合（Set）</h2><h3 id="_4-1-简介" tabindex="-1"><a class="header-anchor" href="#_4-1-简介" aria-hidden="true">#</a> 4.1 简介</h3><p>Redis Set 对外提供的功能与 List 类似是一个列表的功能，特殊之处在于 Set 是可以<span style="color:red;"><strong>自主排重</strong></span>的，当你需要存储一个列表数据，又不希望出现重复数据时，Set 是一个很好的选择，并且 Set 提供了判断某个成员是否在一个 Set 集合内的重要接口，这个也是 List 所不能提供的。</p><p>Redis 的 Set 是 String 类型的<span style="color:red;">无序集合</span>。<span style="color:red;">它底层其实是一个 value 为 null 的 Hash 表</span>，所以添加，删除，查找的<span style="color:red;"><strong>复杂度都是 O(1)</strong></span>。一个算法，随着数据的增加，执行时间的长短，如果是 O(1)，数据增加，查找数据的时间不变。</p><h3 id="_4-2-常用命令" tabindex="-1"><a class="header-anchor" href="#_4-2-常用命令" aria-hidden="true">#</a> 4.2 常用命令</h3><p><strong>（1）将一个或多个 member 元素加入到集合 key 中，已经存在的 member 元素将被忽略</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sadd <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd k1 v1 v1 v2 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）取出集合的所有值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>smembers <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers k1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）判断集合 key 是否含有该 value 值【有 1，没有 0】</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sismember <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sismember k1 v4
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sismember k1 v3
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）返回集合的元素个数</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>scard <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> scard k1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（5）删除集合中的某个元素</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>srem <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> srem k1 v1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers k1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）<span style="color:red;">随机从集合中吐出一个值</span></strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>spop <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd k2 v21 v22 v23 v24 v25
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> spop k2
<span class="token string">&quot;v21&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> spop k2
<span class="token string">&quot;v23&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> spop k2
<span class="token string">&quot;v22&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（7）随机从集合中取出 n 个值，不会从集合中删除</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>srandmember <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>n<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd k3 v31 v32 v33 v34 v35
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> srandmember k3 <span class="token number">3</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v33&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v32&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v34&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> srandmember k3 <span class="token number">3</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v32&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v35&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v34&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（8）把集合中一个值从一个集合移动到另一个集合</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>smove <span class="token operator">&lt;</span>source<span class="token operator">&gt;</span><span class="token operator">&lt;</span>destination<span class="token operator">&gt;</span> value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd k4 v41 v42 v43
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smove k3 k4 v31
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers k4
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v42&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v43&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v41&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v31&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（9）返回两个集合的交集元素</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sinter <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v6&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v8&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sadd key2 v2 v4 v6 v8
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sinter key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（10）返回两个集合的并集元素</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sunion <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v6&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v8&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> sunion key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v8&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;v6&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（11）返回两个集合的差集元素（key1中有，key2中没有的）</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sdiff</span> <span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>key<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> smembers key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v6&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v2&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;v8&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;v4&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token function">sdiff</span> key1 key2
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;v1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;v3&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-数据结构" tabindex="-1"><a class="header-anchor" href="#_4-3-数据结构" aria-hidden="true">#</a> 4.3 数据结构</h3><p>Set 数据结构是 dict 字典，字典是用哈希表实现的。</p><p>Java 中 HashSet 的内部使用的是 HashMap，只不过所有的 value 都指向同一个对象。</p><p>Redis 的 Set 结构也是一样，它的内部也是用 Hash 结构，所有的 value 都指向同一个内部值。</p><h2 id="_5-redis-哈希-hash" tabindex="-1"><a class="header-anchor" href="#_5-redis-哈希-hash" aria-hidden="true">#</a> 5. Redis 哈希（Hash）</h2><h3 id="_5-1-简介" tabindex="-1"><a class="header-anchor" href="#_5-1-简介" aria-hidden="true">#</a> 5.1 简介</h3><p>Redis Hash 是一个键值对集合。</p><p>Redis Hash 是一个 String 类型的 field 和 value 的映射表，Hash 特别适合用于存储对象，类似 Java 里面的 Hash&lt;String, Object&gt;。</p><p>用户 ID 为查找的 key，存储的 value 用户对象包含姓名、年龄、生日等信息，如果用普通的 key/value 结构来存储，主要有以下 2 种存储方式：</p><ul><li>方式一：将用户对象序列化后的二进制数据作为 value 进行存储 <ul><li><img src="http://img.hl1015.top/blog/image-20211117152734429.png" alt="image-20211117152734429" tabindex="0" loading="lazy"><figcaption>image-20211117152734429</figcaption></li><li>缺点：每次修改用户的某个属性，需要先反序列化，改好后在序列化会取，开销较大</li></ul></li><li>方式二：根据不同属性组装多个 key，通过不同的属性标签去存储相应 value 数据 <ul><li><img src="http://img.hl1015.top/blog/image-20211117152751244.png" alt="image-20211117152751244" tabindex="0" loading="lazy"><figcaption>image-20211117152751244</figcaption></li><li>缺点：用户 ID 数据冗余</li></ul></li></ul><p>如果采用 Hash 结构进行存储，通过 <span style="color:red;">key（用户 ID） + field（属性标签）</span>就可以操作对应属性数据了，既不需要重复存储数据，也不会带来序列化和并发修改控制的问题。</p><figure><img src="http://img.hl1015.top/blog/image-20211117153714831.png" alt="image-20211117153714831" tabindex="0" loading="lazy"><figcaption>image-20211117153714831</figcaption></figure><h3 id="_5-2-常用命令" tabindex="-1"><a class="header-anchor" href="#_5-2-常用命令" aria-hidden="true">#</a> 5.2 常用命令</h3><p><strong>（1）给 key 集合中的 field 键赋值 value</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hset <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hset k1 name zhangsan
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）从 key 集合的 field 中取出 value</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hget <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 name
<span class="token string">&quot;zhangsan&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）批量设置 hash 的值</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hmset <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">3</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hmset k1 name zhangsan age <span class="token number">20</span> birthday <span class="token number">2020</span>-10-10
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 name
<span class="token string">&quot;zhangsan&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 age
<span class="token string">&quot;20&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 birthday
<span class="token string">&quot;2020-10-10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）查看哈希表 key 中，给定域 field 是否存在</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hexists <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hexists k1 name
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hexists k1 name1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（5）列出 hash 集合的所有 field</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hkeys <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hkeys k1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;birthday&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）列出 hash 集合的所有 value</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hvals <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hvals k1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;zhangsan&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;20&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;2020-10-10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（7）为哈希表 key 中的域 field 的值加上增量 1 / -1</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hincrby <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span><span class="token operator">&lt;</span>increment<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hincrby k1 age <span class="token number">1</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">21</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hincrby k1 age <span class="token number">1</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">22</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 age
<span class="token string">&quot;22&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hincrby k1 age <span class="token parameter variable">-2</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">20</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k1 age
<span class="token string">&quot;20&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（8）将哈希表 key 中的域 field 的值设置为 value，当且仅当域 field 不存在</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hsetnx <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>field<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hsetnx k1 name lisi
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hsetnx k2 name lisi
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> hget k2 name
<span class="token string">&quot;lisi&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-数据结构" tabindex="-1"><a class="header-anchor" href="#_5-3-数据结构" aria-hidden="true">#</a> 5.3 数据结构</h3><p>Hash 类型对应的数据结构是两种：ziplist（压缩列表），hashtable（哈希表）。当 field-value 长度较短且个数较少时，使用 ziplist，否则使用 hashtable。</p><h2 id="_6-redis-有序集合-zset-sorted-set" tabindex="-1"><a class="header-anchor" href="#_6-redis-有序集合-zset-sorted-set" aria-hidden="true">#</a> 6. Redis 有序集合 Zset（sorted set）</h2><h3 id="_6-1-简介" tabindex="-1"><a class="header-anchor" href="#_6-1-简介" aria-hidden="true">#</a> 6.1 简介</h3><p>Redis 有序集合 zset 与普通集合 set 非常相似，是一个没有重复元素的字符串集合。</p><p>不同之处是有序集合的每个成员都关联了一个<span style="color:red;">评分（score）</span>，这个评分（score）被用来按照从最低分到最高分或从最高分到最低分方式排序集合中的成员。<span style="color:red;">集合的成员是唯一的，但是评分可以是重复的</span>。</p><p>因为元素是有序的，所以你也可以很快地根据评分（score）或者次序（position）来获取一个范围的元素。</p><p>访问有序集合的中间元素也是非常快的，因此你能够使用有序集合作为一个没有重复成员的智能列表。</p><h3 id="_6-2-常用命令" tabindex="-1"><a class="header-anchor" href="#_6-2-常用命令" aria-hidden="true">#</a> 6.2 常用命令</h3><p><strong>（1）将一个或多个 member 元素及其 score 值加入到有序集合 key 当中</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zadd <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>score<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>score<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token operator">&lt;</span>value<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zadd topn <span class="token number">200</span> c++ <span class="token number">300</span> <span class="token function">java</span> <span class="token number">400</span> php <span class="token number">500</span> mysql
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（2）返回有序集合 key 中，下标在 start, stop 之间的元素</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zrange <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>start<span class="token operator">&gt;</span><span class="token operator">&lt;</span>stop<span class="token operator">&gt;</span> <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token comment"># 带 WITHSCORES ，可以让分数一起和值返回到结果集</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange topn <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;c++&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;java&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;php&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;mysql&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange topn <span class="token number">0</span> <span class="token parameter variable">-1</span> WITHSCORES
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;c++&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;200&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;java&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;300&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;php&quot;</span>
<span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">&quot;400&quot;</span>
<span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">&quot;mysql&quot;</span>
<span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">&quot;500&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）返回有序集 key 中，所有 score 值介于 min 和 max 之间（包括等于 min 或 max）的成员。有序集合成员按 score 值递增（从小到大 / 从大到小）次序排列。</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zrangebyscore key min max <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token punctuation">[</span>limit offset count<span class="token punctuation">]</span> <span class="token comment"># 从小到大</span>
zrevrangebyscore key max min <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token punctuation">[</span>limit offset count<span class="token punctuation">]</span> <span class="token comment"># 从大到小</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrangebyscore topn <span class="token number">300</span> <span class="token number">500</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;java&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;php&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;mysql&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrevrangebyscore topn <span class="token number">500</span> <span class="token number">300</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;mysql&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;php&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;java&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（4）为元素的 score 加上增量</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zincrby <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>increment<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zincrby topn <span class="token number">50</span> <span class="token function">java</span>
<span class="token string">&quot;350&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（5）删除该集合下，指定值的元素</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zrem <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrem topn php
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrange topn <span class="token number">0</span> <span class="token parameter variable">-1</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;c++&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;java&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;mysql&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（6）统计该集合，分数区间内的元素个数</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zcount <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>min<span class="token operator">&gt;</span><span class="token operator">&lt;</span>max<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zcount topn <span class="token number">300</span> <span class="token number">500</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（7）返回该值在集合中的排名，从 0 开始</strong></p><p>①格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zrank <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>②案例实操</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> zrank topn <span class="token function">java</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-数据结构" tabindex="-1"><a class="header-anchor" href="#_6-3-数据结构" aria-hidden="true">#</a> 6.3 数据结构</h3><p>SortedSet（zset）是 Redis 提供的一个非常特别的数据结构，一方面它等价于 Java 的数据结构 Map&lt;String, Double&gt;，可以给每一个元素 value 赋予一个权重 score，另一方面它有类似于 TreeSet，内部的元素会按照权重 score 进行排序，可以得到每个元素的名词，还可以通过 score 的范围来获取元素的列表。</p><p>zset 底层使用了两个数据结构：</p><ul><li>hash：hash 的作用就是关联元素 value 和权重 score，保障元素 value 的唯一性，可以通过元素 value 找到相应的 score 值</li><li>跳跃表：跳跃表的目的在于给元素 value 排序，根据 score 的范围获取元素列表</li></ul><blockquote><p>【1】跳跃表简介</p><p>有序集合在生活中比较常见，例如根据成绩对学生排名，根据得分对玩家排名等。对于有序集合的底层实现，可以用数组、平衡树、链表等。数组不便元素的插入、删除；平衡树或红黑树虽然效率高但结构复杂；链表查询需要遍历所有效率低。Redis 采用的是跳跃表，跳跃表效率堪比红黑树，实现远比红黑树简单。</p><p>【2】跳跃表实例</p><p>对比有序链表和跳跃表，从链表中查询出 51</p><p>①有序链表</p><figure><img src="http://img.hl1015.top/blog/image-20211117171021517.png" alt="image-20211117171021517" tabindex="0" loading="lazy"><figcaption>image-20211117171021517</figcaption></figure><p>要查找值为 51 的元素，需要从第一个元素开始依次查找、比较才能找到，一共需要 6 次比较。</p><p>②跳跃表</p><figure><img src="http://img.hl1015.top/blog/image-20211117172629149.png" alt="image-20211117172629149" tabindex="0" loading="lazy"><figcaption>image-20211117172629149</figcaption></figure><p>从第 2 层开始，1 节点比 51 节点小，向后比较。21 节点比 51 节点小，继续向后比较，后面就是 NULL 了，所以从 21 节点向下到第 1 层。在第 1 层，41 节点比 51 节点小，继续向后，61 节点比 51 节点大，所以从 41 向下。在第 0 层，51 节点为要查找的节点，节点被找到，共查找 4 次。</p><p>从此可以看出跳跃表比有序链表效率要高。</p></blockquote>`,311);function d(k,v){const a=t("ExternalLinkIcon");return p(),o("div",null,[s("p",null,[n("Redis 常见数据类型操作命令："),s("a",c,[n("http://www.redis.cn/commands.html"),l(a)])]),u])}const b=e(r,[["render",d],["__file","redis-3.html.vue"]]);export{b as default};
