import{_ as i,E as p,Z as t,$ as o,a0 as n,a1 as s,a3 as l,a5 as a}from"./framework-1fb77053.js";const c={},d=n("h2",{id:"_0-准备工作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-准备工作","aria-hidden":"true"},"#"),s(" 0. 准备工作")],-1),r=n("p",null,"在我们自己电脑的数据库中创建一些数据库表（SQL 执行脚本文件的网盘下载地址如下）",-1),u={href:"https://pan.baidu.com/s/1CwXAMv5YPpT6Sj5Dl7ykxg",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[n("strong",null,"提取码：ghi2")],-1),k=a(`<ul><li>第一步，打开我们的 Navicat Premium <ul><li>右键 已连上的连接，选择 <strong>运行 SQL 文件...</strong><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909111744955.png" alt="image-20210909111744955" tabindex="0" loading="lazy"><figcaption>image-20210909111744955</figcaption></li></ul></li></ul></li><li>第二步，选择好要执行的 sql 文件，点击开始 <ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909111847172.png" alt="image-20210909111847172" tabindex="0" loading="lazy"><figcaption>image-20210909111847172</figcaption></li></ul></li><li>第三步，执行成功，点击关闭 <ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909111928714.png" alt="image-20210909111928714" tabindex="0" loading="lazy"><figcaption>image-20210909111928714</figcaption></li></ul></li><li>第四步，这时候还看不见创建的表，我们需要刷新一下 <ul><li>右键 连接，选择 <strong>刷新</strong><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909125704399.png" alt="image-20210909125704399" tabindex="0" loading="lazy"><figcaption>image-20210909125704399</figcaption></li></ul></li><li>可以看到我们创建的表了 <ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909125728897.png" alt="image-20210909125728897" tabindex="0" loading="lazy"><figcaption>image-20210909125728897</figcaption></li></ul></li></ul></li><li>第五步，双击打开 myemployees 数据库，打开表，可以看到里面有四张表 <ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909125844750.png" alt="image-20210909125844750" tabindex="0" loading="lazy"><figcaption>image-20210909125844750</figcaption></li></ul></li><li>第六步，分别右键这四张表，选择 <strong>设计表</strong><ul><li>为这四张表的各个字段加上注释，方便后面对查询要求的理解 <ul><li><strong>departments表(部门表)</strong><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909130059616.png" alt="image-20210909130059616" tabindex="0" loading="lazy"><figcaption>image-20210909130059616</figcaption></li></ul></li><li><strong>employees(员工表)</strong><ul><li><img src="http://img.hl1015.top/work/image-20230512152053878.png" alt="image-20230512152053878" tabindex="0" loading="lazy"><figcaption>image-20230512152053878</figcaption></li></ul></li><li><strong>jobs(工种表)</strong><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909130129912.png" alt="image-20210909130129912" tabindex="0" loading="lazy"><figcaption>image-20210909130129912</figcaption></li></ul></li><li><strong>locations(位置表)</strong><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909130143888.png" alt="image-20210909130143888" tabindex="0" loading="lazy"><figcaption>image-20210909130143888</figcaption></li></ul></li></ul></li></ul></li></ul><p>好，到此，我们的准备工作就结束了，下面我们正式开始我们的 <strong><code>DQL(Data Query Language)：数据查询语言</code></strong> 的学习!!!</p><h2 id="_1-基本的-select-语句" tabindex="-1"><a class="header-anchor" href="#_1-基本的-select-语句" aria-hidden="true">#</a> 1. 基本的 SELECT 语句</h2><ul><li><p><strong>语法</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 查询列表 <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token comment"># 类似于Java中的：System.out.println(要打印的东西);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>特点</strong></p><ul><li>查询列表可以是：<strong>表中的字段、常量值、表达式、函数</strong></li><li>通过 select 查询到的结果，是一个<strong>虚拟的表格，不是真实存在</strong></li></ul></li><li><p><strong>基础查询</strong></p><ul><li><p><strong>查询表中的单个字段</strong>（last_name)</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909130949353.png" alt="image-20210909130949353" tabindex="0" loading="lazy"><figcaption>image-20210909130949353</figcaption></li></ul></li></ul></li><li><p><strong>查询表中的多个字段</strong>（last_name , salary , email）</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>email <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909131134922.png" alt="image-20210909131134922" tabindex="0" loading="lazy"><figcaption>image-20210909131134922</figcaption></li></ul></li></ul></li><li><p><strong>查询表中的所有字段</strong></p><ul><li><p><strong>方式一：挨个列出表中的所有字段，自己可调整顺序</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	employee_id<span class="token punctuation">,</span>
	first_name<span class="token punctuation">,</span>
	last_name<span class="token punctuation">,</span>
	email<span class="token punctuation">,</span>
	phone_number<span class="token punctuation">,</span>
	job_id<span class="token punctuation">,</span>
	salary<span class="token punctuation">,</span>
	commission_pct<span class="token punctuation">,</span>
	manager_id<span class="token punctuation">,</span>
	department_id<span class="token punctuation">,</span>
	hiredate 
<span class="token keyword">FROM</span>
	employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909131448887.png" alt="image-20210909131448887" tabindex="0" loading="lazy"><figcaption>image-20210909131448887</figcaption></li></ul></li></ul></li><li><p><strong>方式二：使用 * 号，好处是简单，但是调整不了顺序</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909131610348.png" alt="image-20210909131610348" tabindex="0" loading="lazy"><figcaption>image-20210909131610348</figcaption></li></ul></li></ul></li><li><p><strong><span style="color:red;">注</span></strong>：当我们表中的某个字段和某个关键字相同时，为了予以区分，我们可以在查询时为字段加一对着重号\`\`(键盘上位置：在 1 的左边)</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">from</span> 表名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul></li><li><p><strong>查询常量值</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token string">&#39;hkw&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909131929328.png" alt="image-20210909131929328" tabindex="0" loading="lazy"><figcaption>image-20210909131929328</figcaption></li></ul></li><li><p><strong><span style="color:red;">注</span></strong>：<strong>字符型和日期型</strong>的常量值必须用<strong>单引号引起来</strong>，数值型不需要</p></li></ul></li><li><p><strong>查询表达式</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909132103944.png" alt="image-20210909132103944" tabindex="0" loading="lazy"><figcaption>image-20210909132103944</figcaption></li></ul></li></ul></li><li><p><strong>查询函数</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909132212605.png" alt="image-20210909132212605" tabindex="0" loading="lazy"><figcaption>image-20210909132212605</figcaption></li></ul></li></ul></li><li><p><strong>起别名</strong></p><ul><li><p>作用</p><ul><li>便于提高可读性</li><li>如果要查询的字段有重名的情况，使用别名可以区分开来</li></ul></li><li><p><strong>方式一：使用 AS（推荐，提高可读性）</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">100</span> <span class="token keyword">AS</span> 结果<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> last_name <span class="token keyword">AS</span> 姓<span class="token punctuation">,</span>first_name <span class="token keyword">AS</span> 名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909132453941.png" alt="image-20210909132453941" tabindex="0" loading="lazy"><figcaption>image-20210909132453941</figcaption></li></ul></li></ul></li><li><p><strong>方式二：AS 省略，加个空格即可</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> last_name 姓<span class="token punctuation">,</span>first_name 名<span class="token punctuation">,</span>salary 月薪 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909132551477.png" alt="image-20210909132551477" tabindex="0" loading="lazy"><figcaption>image-20210909132551477</figcaption></li></ul></li><li><p>示例：查询 salary，显示结果为 out put</p><ul><li><p><strong><span style="color:red;">注</span></strong>：别名中间有空格的，需要使用 &quot;&quot; 或者 &#39;&#39; 引起来（MySQL 中建议使用 &quot;&quot;）</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> salary <span class="token keyword">AS</span> <span class="token string">&quot;out put&quot;</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909132801369.png" alt="image-20210909132801369" tabindex="0" loading="lazy"><figcaption>image-20210909132801369</figcaption></li></ul></li></ul></li></ul></li></ul></li><li><p><strong>去重</strong></p><ul><li><p>去重关键字：<strong>DISTINCT</strong></p></li><li><p>示例：查询员工表中涉及到的所有的部门编号</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department_id <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909133002382.png" alt="image-20210909133002382" tabindex="0" loading="lazy"><figcaption>image-20210909133002382</figcaption></li></ul></li></ul></li></ul></li><li><p><strong>+ 号的作用</strong></p><ul><li><p>回顾一下 Java 中 + 号的作用</p><ul><li>运算符，两个操作数都为数值型</li><li>连接符，只要有一个操作数为字符型</li></ul></li><li><p>而 MySQL 中的 + 号的作用：仅仅只有一个功能，运算符</p><ul><li><p>select 100+200; 两个操作数都为数值型，则作加法运算</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">100</span><span class="token operator">+</span><span class="token number">200</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909133423749.png" alt="image-20210909133423749" tabindex="0" loading="lazy"><figcaption>image-20210909133423749</figcaption></li></ul></li></ul></li><li><p>select &#39;100&#39;+200; 其中一个为字符串，试图将字符串转换为数值型，如果转换成功，则继续做加法运算</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token string">&#39;100&#39;</span><span class="token operator">+</span><span class="token number">200</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909133704465.png" alt="image-20210909133704465" tabindex="0" loading="lazy"><figcaption>image-20210909133704465</figcaption></li></ul></li></ul></li><li><p>select &#39;john&#39;+100; 如果转换失败，则将字符型数值转换成0</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token string">&#39;john&#39;</span><span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909133959057.png" alt="image-20210909133959057" tabindex="0" loading="lazy"><figcaption>image-20210909133959057</figcaption></li></ul></li></ul></li><li><p>select null+100; 只要其中一方为 null，则结果肯定为 null</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token boolean">null</span><span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909134315963.png" alt="image-20210909134315963" tabindex="0" loading="lazy"><figcaption>image-20210909134315963</figcaption></li></ul></li></ul></li></ul></li><li><p>示例：查询员工名+姓连接成一个字符串，并显示姓名</p><ul><li><p>所以这里用 + 号就实现不了，我们可以使用 <strong>CONCAT</strong> 实现字符串连接</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> <span class="token keyword">AS</span> 姓名 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909134637818.png" alt="image-20210909134637818" tabindex="0" loading="lazy"><figcaption>image-20210909134637818</figcaption></li></ul></li></ul></li></ul></li><li><p><strong>IFNULL(expr1,expr1)</strong></p><ul><li><p>实现判断 expr1 是否为 null 值，并在为 null 时赋上一个默认值 expr2</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>commission_pct <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909134837690.png" alt="image-20210909134837690" tabindex="0" loading="lazy"><figcaption>image-20210909134837690</figcaption></li></ul></li></ul></li><li><p><strong>ISNULL(expr)</strong></p><ul><li><p>判断某个字段是否为 null，如果是，返回 1，如果不是，返回 0</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> ISNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token punctuation">,</span>commission_pct <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909134947651.png" alt="image-20210909134947651" tabindex="0" loading="lazy"><figcaption>image-20210909134947651</figcaption></li></ul></li></ul></li></ul></li></ul><h2 id="_2-过滤和排序" tabindex="-1"><a class="header-anchor" href="#_2-过滤和排序" aria-hidden="true">#</a> 2. 过滤和排序</h2><h3 id="_2-1-过滤查询-又称条件查询" tabindex="-1"><a class="header-anchor" href="#_2-1-过滤查询-又称条件查询" aria-hidden="true">#</a> 2.1 过滤查询，又称条件查询</h3><h4 id="_1、语法" tabindex="-1"><a class="header-anchor" href="#_1、语法" aria-hidden="true">#</a> 1、语法</h4><p>使用 WHERE 子句，将不满足的行过滤掉</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token comment">------------第三步</span>
    查询列表
<span class="token keyword">FROM</span>  <span class="token comment">-------------第一步</span>
    表名
<span class="token keyword">WHERE</span> <span class="token comment">-------------第二步</span>
    	筛选条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、执行顺序" tabindex="-1"><a class="header-anchor" href="#_2、执行顺序" aria-hidden="true">#</a> 2、<span style="color:red;">执行顺序</span></h4><ol><li>FROM 表名（先去看看当前库里边有没有对应的表，有的话就定位到这个表）</li><li>WHERE 筛选条件（去筛选满足条件的行）</li><li>SELECT 查询列表</li></ol><h4 id="_3、分类" tabindex="-1"><a class="header-anchor" href="#_3、分类" aria-hidden="true">#</a> 3、分类</h4><ul><li><p><strong>按条件表达式筛选</strong></p><ul><li><p>简单条件运算符：&gt; &lt; = != &lt;&gt; &gt;= &lt;=</p></li><li><p>示例1：查询工资大于12000的员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	salary <span class="token operator">&gt;</span> <span class="token number">12000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909142703169.png" alt="image-20210909142703169" tabindex="0" loading="lazy"><figcaption>image-20210909142703169</figcaption></li></ul></li></ul></li><li><p>示例2：查询部门编号不等于90号的员工名和部门编号</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	department_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	department_id <span class="token operator">&lt;&gt;</span> <span class="token number">90</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909142838322.png" alt="image-20210909142838322" tabindex="0" loading="lazy"><figcaption>image-20210909142838322</figcaption></li></ul></li></ul></li></ul></li><li><p><strong>按逻辑表达式筛选</strong></p><ul><li><p>逻辑表达式：&amp;&amp; || ! <strong>AND OR NOT(使用 MySQL 推荐的)</strong></p><ul><li>&amp;&amp; 和 AND：两个条件都为 true，结果为 true，反之为 false</li><li>|| 和 OR：只要有一个条件为 true，结果为 true，反之为 false</li><li>! 和 NOT：如果连接的条件本身为 false，结果为 true，反之为 false</li></ul></li><li><p>示例1：查询工资在10000到20000之间的员工名、工资以及奖金率</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	salary<span class="token punctuation">,</span>
	commission_pct 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	salary <span class="token operator">&gt;=</span> <span class="token number">10000</span> 
	<span class="token operator">AND</span> salary <span class="token operator">&lt;=</span> <span class="token number">20000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909143053337.png" alt="image-20210909143053337" tabindex="0" loading="lazy"><figcaption>image-20210909143053337</figcaption></li></ul></li></ul></li><li><p>示例2：查询部门编号不是在90到110之间的，或者工资高于15000的员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	department_id <span class="token operator">&lt;</span> <span class="token number">90</span> <span class="token operator">OR</span> department_id <span class="token operator">&gt;</span> <span class="token number">110</span> 
	<span class="token operator">OR</span> salary <span class="token operator">&gt;</span> <span class="token number">15000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	<span class="token operator">NOT</span> <span class="token punctuation">(</span> department_id <span class="token operator">&gt;=</span> <span class="token number">90</span> <span class="token operator">AND</span> department_id <span class="token operator">&lt;=</span> <span class="token number">110</span> <span class="token punctuation">)</span> 
	<span class="token operator">OR</span> salary <span class="token operator">&gt;</span> <span class="token number">15000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909143212052.png" alt="image-20210909143212052" tabindex="0" loading="lazy"><figcaption>image-20210909143212052</figcaption></li></ul></li></ul></li></ul></li><li><p><strong>模糊查询</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">LIKE</span>
<span class="token operator">BETWEEN</span> <span class="token operator">AND</span>
<span class="token operator">IN</span>
<span class="token operator">IS</span> <span class="token boolean">NULL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>示例1：查询员工名中包含字符a的员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	last_name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909143453688.png" alt="image-20210909143453688" tabindex="0" loading="lazy"><figcaption>image-20210909143453688</figcaption></li></ul></li></ul></li><li><p><strong>LIKE 通常和通配符一起使用，既可用于判断字符型，也可以用于判断数值型</strong></p><ul><li>通配符：①%：任意<strong>多个</strong>字符，包含0个 ②_：任意<strong>单个</strong>字符</li></ul></li><li><p>示例2：查询员工名中第三个字符为n，第五个字符为l的员工名和工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	salary 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	last_name <span class="token operator">LIKE</span> <span class="token string">&#39;__n_l%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909143727734.png" alt="image-20210909143727734" tabindex="0" loading="lazy"><figcaption>image-20210909143727734</figcaption></li></ul></li></ul></li><li><p>示例3：查询员工名中第二个字符为_的员工名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	last_name <span class="token operator">LIKE</span> <span class="token string">&#39;_\\_%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>或</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	last_name <span class="token operator">LIKE</span> <span class="token string">&#39;_$_%&#39;</span> <span class="token keyword">ESCAPE</span> <span class="token string">&#39;$&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转义：可以使用 \\ 进行转义，或者使用 <strong>ESCAPE</strong> 关键字进行转义（推荐）</p></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909143917839.png" alt="image-20210909143917839" tabindex="0" loading="lazy"><figcaption>image-20210909143917839</figcaption></li></ul></li></ul></li><li><p>示例4：查询员工编号在100到120之间的员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	employee_id <span class="token operator">BETWEEN</span> <span class="token number">100</span> 
	<span class="token operator">AND</span> <span class="token number">120</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909144001910.png" alt="image-20210909144001910" tabindex="0" loading="lazy"><figcaption>image-20210909144001910</figcaption></figure><p><strong>BETWEEN AND 可以提高语句的简洁度，包含临界值</strong></p></li></ul></li></ul></li><li><p>示例5：查询员工的工种编号是IT_PROG、FI_MGR、AD_VP中的一个的员工名和工种编号</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	job_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	job_id <span class="token operator">IN</span> <span class="token punctuation">(</span> <span class="token string">&#39;IT_PROG&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FI_MGR&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;AD_VP&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909144109405.png" alt="image-20210909144109405" tabindex="0" loading="lazy"><figcaption>image-20210909144109405</figcaption></figure><p><strong>IN 的含义：判断某字段的值是否属于 IN 列表中的某一项</strong></p><p><strong>使用 IN 可以提高语句简洁度</strong></p><p><strong>IN 列表的值类型必须一致或兼容(&#39;123&#39;，123)</strong></p></li></ul></li></ul></li><li><p>示例6：查询没有奖金的员工名和奖金率</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	commission_pct 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909144217463.png" alt="image-20210909144217463" tabindex="0" loading="lazy"><figcaption>image-20210909144217463</figcaption></li></ul></li><li><p>如果查询有奖金的员工名和奖金率?</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	commission_pct 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>= 或 &lt;&gt; 不能判断 null 值</strong></p><p><strong>IS NULL 或 IS NOT NULL 可以判断 null 值</strong></p><p><strong>IS NULL 和 &lt;=&gt; 的比较：</strong></p><p><strong>①IS NULL：仅仅可以判断 null 值，可读性较高，建议使用</strong></p><p><strong>②&lt;=&gt;(安全等于)：既可以判断 null 值，又可以判断普通的数值，可读性较低</strong></p></li></ul></li><li><p><strong>经典面试题</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>和</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> comission_pct <span class="token operator">LIKE</span> <span class="token string">&#39;%%&#39;</span> <span class="token operator">AND</span> last_name <span class="token operator">LIKE</span> <span class="token string">&#39;%%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果是否一样?并说明原因</p></li><li><p>答案：不一样，因为可能判断的字段会有 null 值。</p></li></ul></li></ul></li></ul><h3 id="_2-2-排序查询" tabindex="-1"><a class="header-anchor" href="#_2-2-排序查询" aria-hidden="true">#</a> 2.2 排序查询</h3><h4 id="_1、语法-1" tabindex="-1"><a class="header-anchor" href="#_1、语法-1" aria-hidden="true">#</a> 1、语法</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
    查询列表
<span class="token keyword">FROM</span>
    表名 
【<span class="token keyword">WHERE</span>
    筛选条件】
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
    排序列表 【<span class="token keyword">ASC</span><span class="token operator">/</span><span class="token keyword">DESC</span>】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、特点" tabindex="-1"><a class="header-anchor" href="#_2、特点" aria-hidden="true">#</a> 2、特点</h4><ul><li>ASC 代表升序，DESC 代表降序</li><li>如果不写，默认是升序</li><li>ORDER BY 子句中可以支持单个字段、多个字段、表达式、函数和别名</li><li>ORDER BY 子句一般是放在查询语句的最后面，limit 子句除外</li></ul><h4 id="_3、执行顺序" tabindex="-1"><a class="header-anchor" href="#_3、执行顺序" aria-hidden="true">#</a> 3、<span style="color:red;">执行顺序</span></h4><ol><li>FROM 表名</li><li>WHERE 筛选条件</li><li>SELECT 查询列表</li><li>ORDER BY 排序列表</li></ol><h4 id="_4、示例" tabindex="-1"><a class="header-anchor" href="#_4、示例" aria-hidden="true">#</a> 4、示例</h4><ul><li><p>示例1：查询员工信息，要求工资从高到低排序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	salary <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909151652494.png" alt="image-20210909151652494" tabindex="0" loading="lazy"><figcaption>image-20210909151652494</figcaption></li></ul></li></ul></li><li><p>示例2：查询员工信息，要求工资从低到高排序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	salary <span class="token keyword">ASC</span><span class="token punctuation">;</span> <span class="token comment">// ASC 可以省略</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909151733953.png" alt="image-20210909151733953" tabindex="0" loading="lazy"><figcaption>image-20210909151733953</figcaption></li></ul></li></ul></li><li><p>示例3：查询部门编号&gt;=90的员工信息，按入职时间的先后顺序排序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	department_id <span class="token operator">&gt;=</span> <span class="token number">90</span> 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	hiredate <span class="token keyword">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909151850636.png" alt="image-20210909151850636" tabindex="0" loading="lazy"><figcaption>image-20210909151850636</figcaption></li></ul></li></ul></li><li><p>示例4：按年薪的高低显示员工的信息和年薪【按表达式排序】</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span><span class="token punctuation">,</span>
	<span class="token number">12</span> <span class="token operator">*</span> salary <span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL <span class="token punctuation">(</span> commission_pct<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	<span class="token number">12</span> <span class="token operator">*</span> salary <span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL <span class="token punctuation">(</span> commission_pct<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909152027166.png" alt="image-20210909152027166" tabindex="0" loading="lazy"><figcaption>image-20210909152027166</figcaption></li></ul></li></ul></li><li><p>示例5：按年薪的高低显示员工的信息和年薪【按别名排序】</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span><span class="token punctuation">,</span>
	<span class="token number">12</span> <span class="token operator">*</span> salary <span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL <span class="token punctuation">(</span> commission_pct<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 年薪 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	年薪 <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909152114994.png" alt="image-20210909152114994" tabindex="0" loading="lazy"><figcaption>image-20210909152114994</figcaption></li></ul></li></ul></li><li><p>示例6：按姓名的长度显示员工的姓名和工资【按函数排序】</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	LENGTH<span class="token punctuation">(</span> last_name <span class="token punctuation">)</span> <span class="token keyword">AS</span> 字节长度<span class="token punctuation">,</span>
	last_name<span class="token punctuation">,</span>
	salary 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	LENGTH<span class="token punctuation">(</span> last_name <span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909152151261.png" alt="image-20210909152151261" tabindex="0" loading="lazy"><figcaption>image-20210909152151261</figcaption></figure><p><strong>LENGTH(str)：用来计算字符串的字节长度</strong></p></li></ul></li></ul></li><li><p>示例7：查询员工信息，要求先按工资升序，再按员工编号降序【按多个字段排序】</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	salary <span class="token keyword">ASC</span><span class="token punctuation">,</span>
	employee_id <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909152244164.png" alt="image-20210909152244164" tabindex="0" loading="lazy"><figcaption>image-20210909152244164</figcaption></li></ul></li></ul></li></ul><h2 id="_3-分组查询" tabindex="-1"><a class="header-anchor" href="#_3-分组查询" aria-hidden="true">#</a> 3. 分组查询</h2><h3 id="_1、语法-2" tabindex="-1"><a class="header-anchor" href="#_1、语法-2" aria-hidden="true">#</a> 1、语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 分组函数<span class="token punctuation">,</span>列 <span class="token punctuation">(</span>要求出现在<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>的后面<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> 表名
【<span class="token keyword">WHERE</span> 筛选条件】
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组的列表
【<span class="token keyword">HAVING</span> 分组后筛选】
【<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序列表】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><span style="color:red;">注意</span>：查询列表必须特殊，要求是分组函数和 GROUP BY 后出现的字段</strong></p><h3 id="_2、执行顺序-1" tabindex="-1"><a class="header-anchor" href="#_2、执行顺序-1" aria-hidden="true">#</a> 2、执行顺序</h3><ol><li>FROM 表名</li><li>【WHERE 筛选条件】</li><li>GROUP BY 分组的列表</li><li>【HAVING 分组后筛选】</li><li>SELECT 分组函数,列 (要求出现在GROUP BY的后面)</li><li>【ORDER BY 排序列表】</li></ol><h3 id="_3、特点" tabindex="-1"><a class="header-anchor" href="#_3、特点" aria-hidden="true">#</a> 3、特点</h3><ul><li><p>分组查询中的筛选条件分为两类</p><ul><li><table><thead><tr><th>时机</th><th>数据源</th><th>位置</th><th>关键字</th></tr></thead><tbody><tr><td>分组前筛选</td><td>原始表</td><td>GROUP BY 子句的前面</td><td>WHERE</td></tr><tr><td>分组后筛选</td><td>分组后的结果集</td><td>GROUP BY 子句的后面</td><td>HAVING</td></tr></tbody></table></li></ul></li><li><p>分组函数做条件肯定是在 HAVING 子句中</p></li><li><p>能用分组前筛选的，就优先考虑使用分组前筛选</p></li><li><p>GROUP BY 子句支持单个字段分组、多个字段分组(多个字段之间用逗号隔开没有顺序要求)、表达式或函数(用的较少)</p></li><li><p>也可以添加排序(排序放在整个分组查询的最后)</p></li></ul><h3 id="_4、示例-1" tabindex="-1"><a class="header-anchor" href="#_4、示例-1" aria-hidden="true">#</a> 4、示例</h3><h4 id="_4-1-简单的分组查询" tabindex="-1"><a class="header-anchor" href="#_4-1-简单的分组查询" aria-hidden="true">#</a> 4.1 简单的分组查询</h4><ul><li><p>示例1：查询每个工种的最高工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	job_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	job_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909153524819.png" alt="image-20210909153524819" tabindex="0" loading="lazy"><figcaption>image-20210909153524819</figcaption></li></ul></li></ul></li><li><p>示例2：查询每个位置上的部门个数</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	location_id 
<span class="token keyword">FROM</span>
	departments 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	location_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909153615356.png" alt="image-20210909153615356" tabindex="0" loading="lazy"><figcaption>image-20210909153615356</figcaption></li></ul></li></ul></li></ul><h4 id="_4-2-添加分组前的筛选条件" tabindex="-1"><a class="header-anchor" href="#_4-2-添加分组前的筛选条件" aria-hidden="true">#</a> 4.2 添加分组前的筛选条件</h4><ul><li><p>示例1：查询邮箱中包含a字符的，每个部门的平均工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">AVG</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	email<span class="token punctuation">,</span>
	department_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	email <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909153750167.png" alt="image-20210909153750167" tabindex="0" loading="lazy"><figcaption>image-20210909153750167</figcaption></li></ul></li></ul></li><li><p>示例2：查询有奖金的每个领导手下员工的最高工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	manager_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	manager_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909153837603.png" alt="image-20210909153837603" tabindex="0" loading="lazy"><figcaption>image-20210909153837603</figcaption></li></ul></li></ul></li></ul><h4 id="_4-3-添加分组后的筛选条件" tabindex="-1"><a class="header-anchor" href="#_4-3-添加分组后的筛选条件" aria-hidden="true">#</a> 4.3 添加分组后的筛选条件</h4><p>这里需要使用后对分组结果筛选的关键字 <strong>HAVING</strong></p><ul><li><p>示例1：查询哪些部门的员工个数 &gt; 2?</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	department_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	department_id 
<span class="token keyword">HAVING</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154025802.png" alt="image-20210909154025802" tabindex="0" loading="lazy"><figcaption>image-20210909154025802</figcaption></li></ul></li></ul></li><li><p>示例2：查询每个工种有奖金的员工的最高工资&gt;12000的工种编号和最高工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span> <span class="token keyword">AS</span> 最高工资<span class="token punctuation">,</span>
	job_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	job_id 
<span class="token keyword">HAVING</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">12000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154138185.png" alt="image-20210909154138185" tabindex="0" loading="lazy"><figcaption>image-20210909154138185</figcaption></li></ul></li></ul></li><li><p>示例3：查询领导编号&gt;102的每个领导手下的最低工资&gt;5000的领导编号有哪些，以及其最低工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">MIN</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	manager_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">WHERE</span>
	manager_id <span class="token operator">&gt;</span> <span class="token number">102</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	manager_id 
<span class="token keyword">HAVING</span>
	<span class="token function">MIN</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">5000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154520632.png" alt="image-20210909154520632" tabindex="0" loading="lazy"><figcaption>image-20210909154520632</figcaption></li></ul></li></ul></li></ul><h4 id="_4-4-按多个字段分组" tabindex="-1"><a class="header-anchor" href="#_4-4-按多个字段分组" aria-hidden="true">#</a> 4.4 按多个字段分组</h4><ul><li><p>示例1：查询每个部门每个工种的员工的平均工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">AVG</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	department_id<span class="token punctuation">,</span>
	job_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	department_id<span class="token punctuation">,</span>
	job_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154700193.png" alt="image-20210909154700193" tabindex="0" loading="lazy"><figcaption>image-20210909154700193</figcaption></li></ul></li></ul></li></ul><h4 id="_4-5-按表达式或函数分组" tabindex="-1"><a class="header-anchor" href="#_4-5-按表达式或函数分组" aria-hidden="true">#</a> 4.5 按表达式或函数分组</h4><ul><li><p>示例1：按员工的姓名长度分组，查询每一组的员工个数，筛选员工个数&gt;5的有哪些</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 员工人数<span class="token punctuation">,</span>
	LENGTH<span class="token punctuation">(</span> last_name <span class="token punctuation">)</span> <span class="token keyword">AS</span> 姓名长度 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	LENGTH<span class="token punctuation">(</span> last_name <span class="token punctuation">)</span>
<span class="token keyword">HAVING</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154833689.png" alt="image-20210909154833689" tabindex="0" loading="lazy"><figcaption>image-20210909154833689</figcaption></li></ul></li></ul></li></ul><h4 id="_4-6-添加排序" tabindex="-1"><a class="header-anchor" href="#_4-6-添加排序" aria-hidden="true">#</a> 4.6 添加排序</h4><ul><li><p>示例1：查询每个部门每个工种的员工的平均工资，并按平均工资的高低显示</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">AVG</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span><span class="token punctuation">,</span>
	department_id<span class="token punctuation">,</span>
	job_id 
<span class="token keyword">FROM</span>
	employees 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	department_id<span class="token punctuation">,</span>
	job_id 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	<span class="token function">AVG</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909154957689.png" alt="image-20210909154957689" tabindex="0" loading="lazy"><figcaption>image-20210909154957689</figcaption></li></ul></li></ul></li></ul><h2 id="_4-连接查询" tabindex="-1"><a class="header-anchor" href="#_4-连接查询" aria-hidden="true">#</a> 4. 连接查询</h2><h3 id="_1、含义" tabindex="-1"><a class="header-anchor" href="#_1、含义" aria-hidden="true">#</a> 1、含义</h3><p>又称多表查询，当查询的字段来自多个表时，就会用到连接查询</p><h3 id="_2、笛卡尔乘积现象" tabindex="-1"><a class="header-anchor" href="#_2、笛卡尔乘积现象" aria-hidden="true">#</a> 2、笛卡尔乘积现象</h3><ul><li><p>表 1 有 m 行，表 2 有 n 行，结果有 m*n 行</p></li><li><p>发生原因</p><ul><li><strong>没有有效的<span style="color:red;">连接条件</span></strong>，导致多个表所有行实现完全连接</li></ul></li><li><p>如何避免</p><ul><li><strong>添加有效的<span style="color:red;">连接条件</span></strong></li></ul></li></ul><h3 id="_3、分类-1" tabindex="-1"><a class="header-anchor" href="#_3、分类-1" aria-hidden="true">#</a> 3、分类</h3><ul><li><p><strong>按年代分类</strong></p><ul><li>sql92 标准：MySQL 中仅仅支持内连接(Oracle、sqlserver 中支持一部分外连接，不好用，不稳定)</li><li><strong>sql99 标准【推荐】</strong>：MySQL 中支持内连接+外连接(左外+右外)+交叉连接</li></ul></li><li><p><strong>按功能分类</strong></p><ul><li>内连接：等值连接、非等值连接、自连接</li><li>外连接：左外连接、右外连接、全外连接(MySQL 不支持)</li><li>交叉连接</li></ul></li></ul><h3 id="_4、sql92-标准" tabindex="-1"><a class="header-anchor" href="#_4、sql92-标准" aria-hidden="true">#</a> 4、sql92 标准</h3><h4 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接" aria-hidden="true">#</a> 内连接</h4>`,53),v=n("p",null,[n("strong",null,"等值连接")],-1),g=n("li",null,[n("p",null,"特点"),n("ul",null,[n("li",null,"多表等值连接的结果为多表的交集部分"),n("li",null,"n 表连接，至少需要 n-1 个连接条件"),n("li",null,"多表的顺序没有要求"),n("li",null,"一般需要为表起别名"),n("li",null,"可以搭配前面学习的所有子句使用：排序、分组、筛选...")])],-1),b=n("p",null,"准备工作：创建练习用的数据库和表(girls.sql)",-1),y={href:"https://pan.baidu.com/s/1Q30C-lSAhFXp9WOCtJHesA",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"提取码：pvvg",-1),w=a(`<li><p>示例1：查询女神名对应的男神名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
	boyName 
<span class="token keyword">FROM</span>
	beauty<span class="token punctuation">,</span>
	boys 
<span class="token keyword">WHERE</span>
	beauty<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> boys<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909160217914.png" alt="image-20210909160217914" tabindex="0" loading="lazy"><figcaption>image-20210909160217914</figcaption></li></ul></li></ul></li><li><p>示例2：查询员工名对应的部门名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	department_name 
<span class="token keyword">FROM</span>
	employees<span class="token punctuation">,</span>
	departments 
<span class="token keyword">WHERE</span>
	employees<span class="token punctuation">.</span>department_id <span class="token operator">=</span> departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909160254258.png" alt="image-20210909160254258" tabindex="0" loading="lazy"><figcaption>image-20210909160254258</figcaption></li></ul></li></ul></li><li><p>示例3：查询员工名，工种号，工种名</p><ul><li><p>可以考虑为表 <strong>起别名，好处：①提高语句的简洁度 ②区分多个重名的字段</strong></p><ul><li><strong><span style="color:red;">注意</span>：如果为表起了别名，则查询的字段就不能使用原来的表名去限定了</strong></li></ul></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>
	job_title 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	jobs <span class="token keyword">AS</span> j 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>job_id <span class="token operator">=</span> j<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909160642031.png" alt="image-20210909160642031" tabindex="0" loading="lazy"><figcaption>image-20210909160642031</figcaption></li></ul></li><li><p><strong>两个表的顺序可以换吗?---可以</strong></p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>
	job_title 
<span class="token keyword">FROM</span>
	jobs <span class="token keyword">AS</span> j<span class="token punctuation">,</span>
	employees <span class="token keyword">AS</span> e 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>job_id <span class="token operator">=</span> j<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：（结果和示例3还是一样的）</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909160816043.png" alt="image-20210909160816043" tabindex="0" loading="lazy"><figcaption>image-20210909160816043</figcaption></li></ul></li></ul></li></ul></li><li><p>示例4：查询有奖金的员工名，部门名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	department_name<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>commission_pct 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	departments <span class="token keyword">AS</span> d 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id 
	<span class="token operator">AND</span> e<span class="token punctuation">.</span>commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909160925819.png" alt="image-20210909160925819" tabindex="0" loading="lazy"><figcaption>image-20210909160925819</figcaption></li></ul></li></ul></li><li><p>示例5：查询城市名中第二个字符为o的部门名和城市名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	department_name<span class="token punctuation">,</span>
	city 
<span class="token keyword">FROM</span>
	departments <span class="token keyword">AS</span> d<span class="token punctuation">,</span>
	locations <span class="token keyword">AS</span> l 
<span class="token keyword">WHERE</span>
	d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id 
	<span class="token operator">AND</span> l<span class="token punctuation">.</span>city <span class="token operator">LIKE</span> <span class="token string">&#39;_o%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909161654557.png" alt="image-20210909161654557" tabindex="0" loading="lazy"><figcaption>image-20210909161654557</figcaption></li></ul></li></ul></li><li><p>示例6：查询每个城市的部门个数</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 部门个数<span class="token punctuation">,</span>
	department_id<span class="token punctuation">,</span>
	city 
<span class="token keyword">FROM</span>
	departments <span class="token keyword">AS</span> d<span class="token punctuation">,</span>
	locations <span class="token keyword">AS</span> l 
<span class="token keyword">WHERE</span>
	d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	l<span class="token punctuation">.</span>city<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909161805562.png" alt="image-20210909161805562" tabindex="0" loading="lazy"><figcaption>image-20210909161805562</figcaption></li></ul></li></ul></li><li><p>示例7：查询有奖金的每个部门的部门名，部门领导的编号以及该部门的最低工资</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>
	d<span class="token punctuation">.</span>manager_id<span class="token punctuation">,</span>
	<span class="token function">MIN</span><span class="token punctuation">(</span> salary <span class="token punctuation">)</span> <span class="token keyword">AS</span> 最低工资 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	departments <span class="token keyword">AS</span> d 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id 
	<span class="token operator">AND</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>d<span class="token punctuation">.</span>manager_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909161840775.png" alt="image-20210909161840775" tabindex="0" loading="lazy"><figcaption>image-20210909161840775</figcaption></li></ul></li></ul></li><li><p>示例8：查询每个工种的工种名和员工的个数，并且按员工个数降序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	job_title<span class="token punctuation">,</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	jobs <span class="token keyword">AS</span> j 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>job_id <span class="token operator">=</span> j<span class="token punctuation">.</span>job_id 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	j<span class="token punctuation">.</span>job_title
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909161913433.png" alt="image-20210909161913433" tabindex="0" loading="lazy"><figcaption>image-20210909161913433</figcaption></li></ul></li></ul></li><li><p>示例9：查询员工名，部门名和所在的城市名（<strong>三表连接</strong>）</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	last_name<span class="token punctuation">,</span>
	department_name<span class="token punctuation">,</span>
	city 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	departments <span class="token keyword">AS</span> d<span class="token punctuation">,</span>
	locations <span class="token keyword">AS</span> l 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id 
	<span class="token operator">AND</span> d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909162220166.png" alt="image-20210909162220166" tabindex="0" loading="lazy"><figcaption>image-20210909162220166</figcaption></li></ul></li></ul></li>`,9),_=a(`<li><p><strong>非等值连接</strong></p><ul><li><p>准备工作：选中 myemployees 数据库，运行下面的 sql 语句，创建工资等级表 job_grades</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> job_grades
<span class="token punctuation">(</span>grade_level <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 lowest_sal  <span class="token keyword">int</span><span class="token punctuation">,</span>
 highest_sal <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">5999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">14999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;E&#39;</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">,</span> <span class="token number">24999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> job_grades
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token number">25000</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行成功后可以得到如下表：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909162543217.png" alt="image-20210909162543217" tabindex="0" loading="lazy"><figcaption>image-20210909162543217</figcaption></li></ul></li></ul></li><li><p>示例：查询员工的工资和工资等级</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	salary<span class="token punctuation">,</span>
	grade_level 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	job_grades <span class="token keyword">AS</span> g 
<span class="token keyword">WHERE</span>
	salary <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span>lowest_sal 
	<span class="token operator">AND</span> g<span class="token punctuation">.</span>highest_sal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909162647961.png" alt="image-20210909162647961" tabindex="0" loading="lazy"><figcaption>image-20210909162647961</figcaption></li></ul></li></ul></li></ul></li><li><p><strong>自连接</strong></p><ul><li><p>示例1：查询员工名和上级领导的名称</p><ul><li><p>自连接的应用场景：针对一些特殊含义的表，就比如我们的 employees 表，里边的员工 id 可以理解为普通员工的 id 和领导员工 id 的总和，所以在做上面这道例题的时候，我们需要用到两次 employees 表：一张表看作普通员工的表，一张表看作领导表，连接条件是普通员工的 manager_id = 领导员工的 employee_id</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>employee_id <span class="token keyword">AS</span> 员工 id<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>last_name <span class="token keyword">AS</span> 员工名<span class="token punctuation">,</span>
	m<span class="token punctuation">.</span>employee_id <span class="token keyword">AS</span> 领导 id<span class="token punctuation">,</span>
	m<span class="token punctuation">.</span>last_name <span class="token keyword">AS</span> 领导名称 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e<span class="token punctuation">,</span>
	employees <span class="token keyword">AS</span> m 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> m<span class="token punctuation">.</span>employee_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909162840507.png" alt="image-20210909162840507" tabindex="0" loading="lazy"><figcaption>image-20210909162840507</figcaption></li></ul></li></ul></li></ul></li>`,2),E=a(`<h3 id="_5、sql99-标准-★★★" tabindex="-1"><a class="header-anchor" href="#_5、sql99-标准-★★★" aria-hidden="true">#</a> 5、sql99 标准（★★★）</h3><h4 id="_5-1-语法" tabindex="-1"><a class="header-anchor" href="#_5-1-语法" aria-hidden="true">#</a> 5.1 语法</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 查询列表
<span class="token keyword">FROM</span> 表<span class="token number">1</span> 别名 【连接类型】
<span class="token keyword">JOIN</span> 表<span class="token number">2</span> 别名
<span class="token keyword">ON</span> 连接条件
【<span class="token keyword">WHERE</span> 筛选条件】
【<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组】
【<span class="token keyword">HAVING</span> 分组后筛选条件】
【<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序列表】<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-2-分类" tabindex="-1"><a class="header-anchor" href="#_5-2-分类" aria-hidden="true">#</a> 5.2 分类</h4><ul><li>内连接(★)：连接类型为 INNER</li><li>外连接(★) <ul><li>左外(★)：连接类型为LEFT【OUTER】</li><li>右外(★)：连接类型为RIGHT【OUTER】</li><li>全外：连接类型为FULL 【OUTER】</li></ul></li><li>交叉连接：连接类型为 CROSS</li></ul><h4 id="_5-3-特点" tabindex="-1"><a class="header-anchor" href="#_5-3-特点" aria-hidden="true">#</a> 5.3 特点</h4><ul><li>可以添加排序、分组、筛选等</li><li>INNER 可以省略</li><li>筛选条件放在 WHERE 后面，连接条件放在 ON 后面，提高分离性，便于阅读</li><li>INNER JOIN 连接和 sql92 语法中的等值连接效果是一样的，都是查询多表的交集</li></ul><h4 id="_5-4-内连接" tabindex="-1"><a class="header-anchor" href="#_5-4-内连接" aria-hidden="true">#</a> 5.4 内连接</h4><h5 id="_5-4-1-语法" tabindex="-1"><a class="header-anchor" href="#_5-4-1-语法" aria-hidden="true">#</a> 5.4.1 语法</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 查询列表
<span class="token keyword">FROM</span> 表<span class="token number">1</span> 别名
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> 别名
<span class="token keyword">ON</span> 连接条件<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-4-2-分类" tabindex="-1"><a class="header-anchor" href="#_5-4-2-分类" aria-hidden="true">#</a> 5.4.2 分类</h5><ul><li>等值连接</li><li>非等值连接</li><li>自连接</li></ul><h5 id="_5-4-3-示例" tabindex="-1"><a class="header-anchor" href="#_5-4-3-示例" aria-hidden="true">#</a> 5.4.3 示例</h5><p><strong>（1）等值连接</strong></p><ul><li><p>示例1：查询员工名、部门名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
	d<span class="token punctuation">.</span>department_name 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> departments <span class="token keyword">AS</span> d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909163619176.png" alt="image-20210909163619176" tabindex="0" loading="lazy"><figcaption>image-20210909163619176</figcaption></li></ul></li></ul></li><li><p>示例2：查询名字中包含a的员工名和工种名</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
	j<span class="token punctuation">.</span>job_title 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> jobs <span class="token keyword">AS</span> j <span class="token keyword">ON</span> e<span class="token punctuation">.</span>job_id <span class="token operator">=</span> j<span class="token punctuation">.</span>job_id 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>last_name <span class="token operator">LIKE</span> <span class="token string">&#39;%a%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909163711492.png" alt="image-20210909163711492" tabindex="0" loading="lazy"><figcaption>image-20210909163711492</figcaption></li></ul></li></ul></li><li><p>示例3：查询部门个数&gt;3的城市名和部门个数</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	l<span class="token punctuation">.</span>city 
<span class="token keyword">FROM</span>
	departments <span class="token keyword">AS</span> d
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> locations <span class="token keyword">AS</span> l <span class="token keyword">ON</span> d<span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	l<span class="token punctuation">.</span>city 
<span class="token keyword">HAVING</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909163827583.png" alt="image-20210909163827583" tabindex="0" loading="lazy"><figcaption>image-20210909163827583</figcaption></li></ul></li></ul></li><li><p>示例4：查询部门个数&gt;3的部门名和员工个数，并按个数排序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	department_name<span class="token punctuation">,</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 员工个数 
<span class="token keyword">FROM</span>
	departments <span class="token keyword">AS</span> d
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> employees <span class="token keyword">AS</span> e <span class="token keyword">ON</span> d<span class="token punctuation">.</span>department_id <span class="token operator">=</span> e<span class="token punctuation">.</span>department_id 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	d<span class="token punctuation">.</span>department_name 
<span class="token keyword">HAVING</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">3</span> 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	员工个数 <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909164004555.png" alt="image-20210909164004555" tabindex="0" loading="lazy"><figcaption>image-20210909164004555</figcaption></li></ul></li></ul></li><li><p>示例5：查询员工名、部门名、工种名，并按部门名降序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
	d<span class="token punctuation">.</span>department_name<span class="token punctuation">,</span>
	j<span class="token punctuation">.</span>job_title 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> departments <span class="token keyword">AS</span> d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>department_id <span class="token operator">=</span> d<span class="token punctuation">.</span>department_id
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> jobs <span class="token keyword">AS</span> j <span class="token keyword">ON</span> e<span class="token punctuation">.</span>job_id <span class="token operator">=</span> j<span class="token punctuation">.</span>job_id 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	d<span class="token punctuation">.</span>department_name <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909164038411.png" alt="image-20210909164038411" tabindex="0" loading="lazy"><figcaption>image-20210909164038411</figcaption></li></ul></li></ul></li></ul><p><strong>（2）非等值连接</strong></p><ul><li><p>示例1：查询员工的工资级别</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>
	g<span class="token punctuation">.</span>grade_level 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job_grades <span class="token keyword">AS</span> g <span class="token keyword">ON</span> e<span class="token punctuation">.</span>salary <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span>lowest_sal 
	<span class="token operator">AND</span> g<span class="token punctuation">.</span>highest_sal<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909164406905.png" alt="image-20210909164406905" tabindex="0" loading="lazy"><figcaption>image-20210909164406905</figcaption></li></ul></li></ul></li><li><p>示例2：查询每个工资级别的个数，并且按工资级别降序</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	g<span class="token punctuation">.</span>grade_level <span class="token keyword">AS</span> 工资级别<span class="token punctuation">,</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> 个数 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> job_grades <span class="token keyword">AS</span> g <span class="token keyword">ON</span> e<span class="token punctuation">.</span>salary <span class="token operator">BETWEEN</span> g<span class="token punctuation">.</span>lowest_sal 
	<span class="token operator">AND</span> g<span class="token punctuation">.</span>highest_sal 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	g<span class="token punctuation">.</span>grade_level 
<span class="token keyword">HAVING</span>
	<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token number">20</span> 
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
	g<span class="token punctuation">.</span>grade_level <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909164452035.png" alt="image-20210909164452035" tabindex="0" loading="lazy"><figcaption>image-20210909164452035</figcaption></li></ul></li></ul></li></ul><p><strong>（3）自连接</strong></p><ul><li><p>示例：查询员工的名字和上级的名字</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	e<span class="token punctuation">.</span>employee_id <span class="token keyword">AS</span> 员工编号<span class="token punctuation">,</span>
	e<span class="token punctuation">.</span>last_name <span class="token keyword">AS</span> 员工名<span class="token punctuation">,</span>
	m<span class="token punctuation">.</span>employee_id <span class="token keyword">AS</span> 领导编号<span class="token punctuation">,</span>
	m<span class="token punctuation">.</span>last_name <span class="token keyword">AS</span> 领导名 
<span class="token keyword">FROM</span>
	employees <span class="token keyword">AS</span> e
	<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> employees <span class="token keyword">AS</span> m <span class="token keyword">ON</span> e<span class="token punctuation">.</span>manager_id <span class="token operator">=</span> m<span class="token punctuation">.</span>employee_id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909164607969.png" alt="image-20210909164607969" tabindex="0" loading="lazy"><figcaption>image-20210909164607969</figcaption></li></ul></li></ul></li></ul><h4 id="_5-5-外连接" tabindex="-1"><a class="header-anchor" href="#_5-5-外连接" aria-hidden="true">#</a> 5.5 外连接</h4><h5 id="_5-5-1-应用场景" tabindex="-1"><a class="header-anchor" href="#_5-5-1-应用场景" aria-hidden="true">#</a> 5.5.1 应用场景</h5><p>用于查询一个表中有，另一个表中没有的记录</p><h5 id="_5-5-2-特点" tabindex="-1"><a class="header-anchor" href="#_5-5-2-特点" aria-hidden="true">#</a> 5.5.2 特点</h5><ul><li>外连接的查询结果为主表中的所有记录 + <ul><li>如果从表中有和主表匹配的，则显示匹配的值</li><li>如果从表中没有和主表匹配的，则显示 null</li><li>所以<strong>外连接的查询结果=内连接结果+主表中有而从表中没有的记录</strong></li></ul></li><li><strong>左外连接</strong>：LEFT JOIN 左边的是主表 | <strong>右外连接</strong>：RIGHT JOIN 右边的是主表</li><li>左外和右外交换两个表的顺序，可以实现同样的效果</li><li>全外连接=内连接的结果+表1中有但表2中没有的记录+表2中有但表1中没有的记录</li></ul><h5 id="_5-5-3-示例" tabindex="-1"><a class="header-anchor" href="#_5-5-3-示例" aria-hidden="true">#</a> 5.5.3 示例</h5><ul><li><p>示例1：查询男朋友 不在女神表的女神名（左外连接）</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	b<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span>
	bo<span class="token punctuation">.</span><span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	beauty <span class="token keyword">AS</span> b
	<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> boys <span class="token keyword">AS</span> bo <span class="token keyword">ON</span> b<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909165430567.png" alt="image-20210909165430567" tabindex="0" loading="lazy"><figcaption>image-20210909165430567</figcaption></li></ul></li></ul></li><li><p>只想要男朋友 不在女神表的女神名，不要其他的信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	b<span class="token punctuation">.</span>NAME
<span class="token keyword">FROM</span>
	beauty <span class="token keyword">AS</span> b
	<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> boys <span class="token keyword">AS</span> bo <span class="token keyword">ON</span> b<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id <span class="token keyword">WHERE</span> bo<span class="token punctuation">.</span>id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><span style="color:red;">注：一般这种时候我们都拿从表的主键id做判断</span></strong></p></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909165557556.png" alt="image-20210909165557556" tabindex="0" loading="lazy"><figcaption>image-20210909165557556</figcaption></li></ul></li></ul></li><li><p>示例2：男朋友 不在女神表的女神名（右外连接）</p><ul><li><p>只需要换一下boys表和beauty表的位置，将LEFT改为RIGHT即可</p></li><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	b<span class="token punctuation">.</span>NAME
<span class="token keyword">FROM</span>
	boys <span class="token keyword">AS</span> bo
	<span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> beauty <span class="token keyword">AS</span> b <span class="token keyword">ON</span> b<span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id <span class="token keyword">WHERE</span> bo<span class="token punctuation">.</span>id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909165557556.png" alt="image-20210909165557556" tabindex="0" loading="lazy"><figcaption>image-20210909165557556</figcaption></li></ul></li></ul></li><li><p>示例3：查询哪些部门没有员工</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	department_name 
<span class="token keyword">FROM</span>
	departments <span class="token keyword">AS</span> d
	<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> employees <span class="token keyword">AS</span> e <span class="token keyword">ON</span> d<span class="token punctuation">.</span>department_id <span class="token operator">=</span> e<span class="token punctuation">.</span>department_id 
<span class="token keyword">WHERE</span>
	e<span class="token punctuation">.</span>employee_id <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909165853031.png" alt="image-20210909165853031" tabindex="0" loading="lazy"><figcaption>image-20210909165853031</figcaption></li></ul></li></ul></li></ul><h4 id="_5-6-交叉连接" tabindex="-1"><a class="header-anchor" href="#_5-6-交叉连接" aria-hidden="true">#</a> 5.6 交叉连接</h4><p>其实就是使用 sql99 语法的标准实现的笛卡尔乘积</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	b<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>
	bo<span class="token punctuation">.</span><span class="token operator">*</span> 
<span class="token keyword">FROM</span>
	beauty <span class="token keyword">AS</span> b
	<span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> boys <span class="token keyword">AS</span> bo<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果如下：</p><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909170049705.png" alt="image-20210909170049705" tabindex="0" loading="lazy"><figcaption>image-20210909170049705</figcaption></figure><h3 id="_6、sql92-和-sql99-比较" tabindex="-1"><a class="header-anchor" href="#_6、sql92-和-sql99-比较" aria-hidden="true">#</a> 6、sql92 和 sql99 比较</h3><p><strong>（1）功能</strong></p><p>sql99 支持的功能较多</p><p><strong>（2）可读性</strong></p><p>sql99 实现连接条件和筛选条件的分离，可读性较高</p><h3 id="_7、join-连接总结" tabindex="-1"><a class="header-anchor" href="#_7、join-连接总结" aria-hidden="true">#</a> 7、JOIN 连接总结</h3><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909170819230.png" alt="image-20210909170819230" tabindex="0" loading="lazy"><figcaption>image-20210909170819230</figcaption></figure><figure><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909170758036.png" alt="image-20210909170758036" tabindex="0" loading="lazy"><figcaption>image-20210909170758036</figcaption></figure><h2 id="_5-分页查询" tabindex="-1"><a class="header-anchor" href="#_5-分页查询" aria-hidden="true">#</a> 5. 分页查询</h2><p>MySQL 中使用 <strong>limit</strong> 实现分页</p><h3 id="_5-1-应用场景" tabindex="-1"><a class="header-anchor" href="#_5-1-应用场景" aria-hidden="true">#</a> 5.1 应用场景</h3><p>当显示数据时，一页显示不全，需要分页提交 sql 请求</p><h3 id="_5-2-语法" tabindex="-1"><a class="header-anchor" href="#_5-2-语法" aria-hidden="true">#</a> 5.2 语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 查询列表
<span class="token keyword">FROM</span> 表<span class="token number">1</span>
【连接类型 <span class="token keyword">JOIN</span> 表<span class="token number">2</span>
<span class="token keyword">ON</span> 连接条件
<span class="token keyword">WHERE</span> 筛选条件
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> 分组列表
<span class="token keyword">HAVING</span> 分组后的筛选
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 排序列表】
<span class="token keyword">LIMIT</span> <span class="token keyword">offset</span><span class="token punctuation">,</span>size<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>offset：要显示的条目的起始索引(起始索引从 0 开始)</p><p>size：要显示的条目个数</p><h3 id="_5-3-特点-1" tabindex="-1"><a class="header-anchor" href="#_5-3-特点-1" aria-hidden="true">#</a> 5.3 特点</h3><ul><li>LIMIT 语句放在查询语句的最后</li><li>公式：(当前要显示的页数 - 1) * 每页条数 , 每页条数</li></ul><h3 id="_5-4-示例" tabindex="-1"><a class="header-anchor" href="#_5-4-示例" aria-hidden="true">#</a> 5.4 示例</h3><ul><li><p>示例1：查询前五条员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">LIMIT</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>如果从第一条数据开始，可以省略起始索引</strong></p></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909171606640.png" alt="image-20210909171606640" tabindex="0" loading="lazy"><figcaption>image-20210909171606640</figcaption></li></ul></li></ul></li><li><p>示例2：查询第11条-第25条员工信息</p><ul><li><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询结果如下：</p><ul><li><img src="https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/mysql/image-20210909171716528.png" alt="image-20210909171716528" tabindex="0" loading="lazy"><figcaption>image-20210909171716528</figcaption></li></ul></li></ul></li></ul><h2 id="_6-联合查询" tabindex="-1"><a class="header-anchor" href="#_6-联合查询" aria-hidden="true">#</a> 6. 联合查询</h2><h3 id="_6-1-语法" tabindex="-1"><a class="header-anchor" href="#_6-1-语法" aria-hidden="true">#</a> 6.1 语法</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 字段<span class="token operator">|</span>常量<span class="token operator">|</span>表达式<span class="token operator">|</span>函数 【<span class="token keyword">FROM</span> 表】 【<span class="token keyword">WHERE</span> 条件】 <span class="token keyword">UNION</span> 【<span class="token keyword">ALL</span>】
<span class="token keyword">SELECT</span> 字段<span class="token operator">|</span>常量<span class="token operator">|</span>表达式<span class="token operator">|</span>函数 【<span class="token keyword">FROM</span> 表】 【<span class="token keyword">WHERE</span> 条件】 <span class="token keyword">UNION</span> 【<span class="token keyword">ALL</span>】
<span class="token keyword">SELECT</span> 字段<span class="token operator">|</span>常量<span class="token operator">|</span>表达式<span class="token operator">|</span>函数 【<span class="token keyword">FROM</span> 表】 【<span class="token keyword">WHERE</span> 条件】 <span class="token keyword">UNION</span> 【<span class="token keyword">ALL</span>】
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">SELECT</span> 字段<span class="token operator">|</span>常量<span class="token operator">|</span>表达式<span class="token operator">|</span>函数 【<span class="token keyword">FROM</span> 表】 【<span class="token keyword">WHERE</span> 条件】
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-特点" tabindex="-1"><a class="header-anchor" href="#_6-2-特点" aria-hidden="true">#</a> 6.2 特点</h3><ul><li>多条查询语句的查询的列数必须是一致的</li><li>多条查询语句的查询的列的类型几乎相同</li><li>union 代表去重，union all 代表不去重</li></ul>`,56);function q(f,R){const e=p("ExternalLinkIcon");return t(),o("div",null,[d,r,n("blockquote",null,[n("p",null,[n("strong",null,[s("链接："),n("a",u,[s("https://pan.baidu.com/s/1CwXAMv5YPpT6Sj5Dl7ykxg"),l(e)])])]),m]),k,n("ul",null,[n("li",null,[v,n("ul",null,[g,n("li",null,[b,n("ul",null,[n("li",null,[s("链接："),n("a",y,[s("https://pan.baidu.com/s/1Q30C-lSAhFXp9WOCtJHesA"),l(e)])]),h])]),w])]),_]),E])}const S=i(c,[["render",q],["__file","mysql-basic-3.html.vue"]]);export{S as default};
