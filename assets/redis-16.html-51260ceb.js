const e=JSON.parse('{"key":"v-cace9a5a","path":"/database/redis/redis-16.html","title":"应用问题解决","lang":"zh-CN","frontmatter":{"title":"应用问题解决","date":"2021-12-11T00:00:00.000Z","category":"Redis","tag":["Redis"],"description":"1. 缓存穿透 1.1 问题描述 key 对应的数据在数据源并不存在，每次针对此 key 的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户 id 获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。 image-20211124223024214","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/database/redis/redis-16.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"应用问题解决"}],["meta",{"property":"og:description","content":"1. 缓存穿透 1.1 问题描述 key 对应的数据在数据源并不存在，每次针对此 key 的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户 id 获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。 image-20211124223024214"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2021-12-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"应用问题解决\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 缓存穿透","slug":"_1-缓存穿透","link":"#_1-缓存穿透","children":[{"level":3,"title":"1.1 问题描述","slug":"_1-1-问题描述","link":"#_1-1-问题描述","children":[]},{"level":3,"title":"1.2 解决方案","slug":"_1-2-解决方案","link":"#_1-2-解决方案","children":[]}]},{"level":2,"title":"2. 缓存击穿","slug":"_2-缓存击穿","link":"#_2-缓存击穿","children":[{"level":3,"title":"2.1 问题描述","slug":"_2-1-问题描述","link":"#_2-1-问题描述","children":[]},{"level":3,"title":"2.2 解决方案","slug":"_2-2-解决方案","link":"#_2-2-解决方案","children":[]}]},{"level":2,"title":"3. 缓存雪崩","slug":"_3-缓存雪崩","link":"#_3-缓存雪崩","children":[{"level":3,"title":"3.1 问题描述","slug":"_3-1-问题描述","link":"#_3-1-问题描述","children":[]},{"level":3,"title":"3.2 解决方案","slug":"_3-2-解决方案","link":"#_3-2-解决方案","children":[]}]},{"level":2,"title":"4. 分布式锁","slug":"_4-分布式锁","link":"#_4-分布式锁","children":[{"level":3,"title":"4.1 问题描述","slug":"_4-1-问题描述","link":"#_4-1-问题描述","children":[]},{"level":3,"title":"4.2 解决方案：使用 redis 实现分布式锁","slug":"_4-2-解决方案-使用-redis-实现分布式锁","link":"#_4-2-解决方案-使用-redis-实现分布式锁","children":[]},{"level":3,"title":"4.3 编写代码","slug":"_4-3-编写代码","link":"#_4-3-编写代码","children":[]},{"level":3,"title":"4.4 优化之设置锁的过期时间","slug":"_4-4-优化之设置锁的过期时间","link":"#_4-4-优化之设置锁的过期时间","children":[]},{"level":3,"title":"4.5 优化之 UUID 防误删","slug":"_4-5-优化之-uuid-防误删","link":"#_4-5-优化之-uuid-防误删","children":[]},{"level":3,"title":"4.6 优化之 LUA 脚本保证删除的原子性","slug":"_4-6-优化之-lua-脚本保证删除的原子性","link":"#_4-6-优化之-lua-脚本保证删除的原子性","children":[]},{"level":3,"title":"4.7 总结","slug":"_4-7-总结","link":"#_4-7-总结","children":[]}]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":10.45,"words":3135},"filePathRelative":"database/redis/redis-16.md","localizedDate":"2021年12月11日","excerpt":"<h2> 1. 缓存穿透</h2>\\n<h3> 1.1 问题描述</h3>\\n<p>key 对应的数据在数据源并不存在，每次针对此 key 的请求从缓存获取不到，请求都会压到数据源，从而可能压垮数据源。比如用一个不存在的用户 id 获取用户信息，不论缓存还是数据库都没有，若黑客利用此漏洞进行攻击可能压垮数据库。</p>\\n<figure><img src=\\"http://img.hl1015.top/blog/image-20211124223024214.png\\" alt=\\"image-20211124223024214\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20211124223024214</figcaption></figure>","autoDesc":true}');export{e as data};
