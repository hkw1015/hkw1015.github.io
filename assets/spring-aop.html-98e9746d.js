const e=JSON.parse('{"key":"v-11167db8","path":"/java/framework/spring/core/spring-aop.html","title":"AOP","lang":"zh-CN","frontmatter":{"title":"AOP","date":"2021-08-23T00:00:00.000Z","category":"常用框架","tag":["Spring"],"description":"1. 什么是 AOP 面向切面编程 利用 AOP 可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。 通俗描述 不通过修改源代码的方式，在主干功能里添加新功能 使用登录的功能来说明 AOP image-20210822161043989","head":[["meta",{"property":"og:url","content":"http://www.hl1015.com/java/framework/spring/core/spring-aop.html"}],["meta",{"property":"og:site_name","content":"程序员H"}],["meta",{"property":"og:title","content":"AOP"}],["meta",{"property":"og:description","content":"1. 什么是 AOP 面向切面编程 利用 AOP 可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。 通俗描述 不通过修改源代码的方式，在主干功能里添加新功能 使用登录的功能来说明 AOP image-20210822161043989"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T09:01:25.000Z"}],["meta",{"property":"article:author","content":"程序员H"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2021-08-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T09:01:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AOP\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-17T09:01:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员H\\",\\"url\\":\\"http://www.hl1015.com/\\"}]}"]]},"headers":[{"level":2,"title":"1. 什么是 AOP","slug":"_1-什么是-aop","link":"#_1-什么是-aop","children":[]},{"level":2,"title":"2. AOP 底层原理","slug":"_2-aop-底层原理","link":"#_2-aop-底层原理","children":[]},{"level":2,"title":"3. AOP 术语","slug":"_3-aop-术语","link":"#_3-aop-术语","children":[]},{"level":2,"title":"4. AOP 操作","slug":"_4-aop-操作","link":"#_4-aop-操作","children":[]}],"git":{"createdTime":1684314085000,"updatedTime":1684314085000,"contributors":[{"name":"hkw","email":"hkw1015@163.com","commits":1}]},"readingTime":{"minutes":6.12,"words":1837},"filePathRelative":"java/framework/spring/core/spring-aop.md","localizedDate":"2021年8月23日","excerpt":"<h2> 1. 什么是 AOP</h2>\\n<ul>\\n<li>\\n<p><strong>面向切面编程</strong></p>\\n<p>利用 AOP 可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p>\\n</li>\\n<li>\\n<p><strong>通俗描述</strong></p>\\n<p>不通过修改源代码的方式，在主干功能里添加新功能</p>\\n</li>\\n<li>\\n<p><strong>使用登录的功能来说明 AOP</strong></p>\\n<figure><img src=\\"https://pet-hkw.oss-cn-shenzhen.aliyuncs.com/image/new_blog_system/framework/image-20210822161043989.png\\" alt=\\"image-20210822161043989\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image-20210822161043989</figcaption></figure>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
