import{_ as e,Z as i,$ as l,a5 as t}from"./framework-1fb77053.js";const o={},a=t('<h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><ul><li>又名：生命周期回调函数、生命周期函数、生命周期钩子</li><li>是什么：Vue 在关键时刻帮我们调用的一些特殊名称的函数</li><li>生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的</li><li>生命周期函数中的 <code>this</code> 指向的是 vm 或 组件实例对象</li></ul><figure><img src="http://img.hl1015.top/work/image-20221219112019288.png" alt="image-20221219112019288" tabindex="0" loading="lazy"><figcaption>image-20221219112019288</figcaption></figure><p><strong>常用的生命周期钩子：</strong></p><ul><li>mounted：发送 ajax 请求、启动定时器、绑定自定义事件、订阅消息等初始化操作</li><li>beforeDestroy：清除定时器、解绑自定义事件、取消订阅消息等收尾工作</li></ul><p><strong>关于销毁 Vue 实例：</strong></p><ul><li>销毁后借助 Vue 开发者工具看不到任何信息</li><li>销毁后自定义事件会失效，但原生 DOM 事件依然有效</li><li>一般不会在 beforeDestroy 操作数据，因为即便操作数据，也不会再触发更新流程了</li></ul>',7),r=[a];function n(s,c){return i(),l("div",null,r)}const u=e(o,[["render",n],["__file","17-Vue实例生命周期.html.vue"]]);export{u as default};
