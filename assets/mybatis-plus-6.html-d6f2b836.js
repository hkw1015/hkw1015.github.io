import{_ as n,Z as s,$ as a,a5 as t}from"./framework-1fb77053.js";const p={},e=t(`<p>（1）MP 提供了大量的自定义设置，生成的代码完全能够满足各类型的需求</p><p>（2）MP 的代码生成器和 MyBatis MBG 代码生成器对比：</p><ul><li>MP 的代码生成器都是基于 Java 代码来生成，MBG 基于 xml 文件进行代码生成</li><li>MyBatis 的代码生成器可生成：实体类、Mapper 接口、Mapper 映射文件</li><li>MP 的代码生成器可生成：实体类（可以选择是否支持 AR）、Mapper 接口、Mapper 映射文件、Service 层、Controller 层</li></ul><p>（3）表及字段命名策略选择</p><p>在 MP 中，我们建议数据库表名和表字段名采用驼峰命名方式，如果采用下划线命名方式，需要开启全局下划线开关，如果表名字段命名方式不一致，需要使用注解指定，我们建议最好保持一致。</p><p>这么做的原因是为了避免在对应实体类时产生的性能消耗，这样字段不用做映射就能直接和实体类对应。当然如果项目里不用考虑这点性能消耗，那么你采用下划线也是没问题的，只需要在生成代码时配置 dbColumnUnderline 属性就可以。</p><h2 id="_1-代码生成器依赖" tabindex="-1"><a class="header-anchor" href="#_1-代码生成器依赖" aria-hidden="true">#</a> 1. 代码生成器依赖</h2><p>（1）模板引擎</p><p>MP 的代码生成器默认使用的是 Apache 的 Velocity 模板，当然也可以更换为别的模板技术，例如 freemarker，此处不做过多的介绍。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- Apache Velocity --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.velocity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>velocity-engine-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）加入 slf4j，查看日志输出信息</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- slf4j --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-mp-代码生成器示例代码" tabindex="-1"><a class="header-anchor" href="#_2-mp-代码生成器示例代码" aria-hidden="true">#</a> 2. MP 代码生成器示例代码</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 全局配置</span>
	<span class="token class-name">GlobalConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlobalConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	config<span class="token punctuation">.</span><span class="token function">setActiveRecord</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 是否支持AR模式</span>
			<span class="token punctuation">.</span><span class="token function">setAuthor</span><span class="token punctuation">(</span><span class="token string">&quot;hl1015&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 作者</span>
			<span class="token punctuation">.</span><span class="token function">setOutputDir</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\mycode\\\\mp02\\\\src\\\\main\\\\java&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 生成路径</span>
			<span class="token punctuation">.</span><span class="token function">setFileOverride</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 文件覆盖</span>
			<span class="token punctuation">.</span><span class="token function">setServiceName</span><span class="token punctuation">(</span><span class="token string">&quot;%sService&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 设置生成的service接口名首字母是否为I</span>
			<span class="token punctuation">.</span><span class="token function">setIdType</span><span class="token punctuation">(</span><span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span> <span class="token comment">// 主键策略</span>
			<span class="token punctuation">.</span><span class="token function">setBaseResultMap</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setBaseColumnList</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 数据源配置</span>
	<span class="token class-name">DataSourceConfig</span> dsConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	dsConfig<span class="token punctuation">.</span><span class="token function">setDbType</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">MYSQL</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://localhost:3306/mp?serverTimezone=GMT%2B8&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setDriverName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 策略配置</span>
	<span class="token class-name">StrategyConfig</span> stConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StrategyConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	stConfig<span class="token punctuation">.</span><span class="token function">setCapitalMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 全局大写命名</span>
			<span class="token punctuation">.</span><span class="token function">setDbColumnUnderline</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 表名 字段名 是否使用下滑线命名</span>
			<span class="token punctuation">.</span><span class="token function">setNaming</span><span class="token punctuation">(</span><span class="token class-name">NamingStrategy</span><span class="token punctuation">.</span>underline_to_camel<span class="token punctuation">)</span> <span class="token comment">// 数据库表映射到实体的命名策略</span>
			<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token string">&quot;tbl_employee&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 生成的表</span>
			<span class="token punctuation">.</span><span class="token function">setTablePrefix</span><span class="token punctuation">(</span><span class="token string">&quot;tbl_&quot;</span><span class="token punctuation">)</span> <span class="token comment">// 表前缀</span>
			<span class="token punctuation">.</span><span class="token function">setInclude</span><span class="token punctuation">(</span><span class="token string">&quot;tbl_employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 需要生成的表</span>

	<span class="token comment">// 包名策略</span>
	<span class="token class-name">PackageConfig</span> pkConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PackageConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	pkConfig<span class="token punctuation">.</span><span class="token function">setParent</span><span class="token punctuation">(</span><span class="token string">&quot;com.hl1015.mp&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setMapper</span><span class="token punctuation">(</span><span class="token string">&quot;mapper&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setController</span><span class="token punctuation">(</span><span class="token string">&quot;controller&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setService</span><span class="token punctuation">(</span><span class="token string">&quot;service&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token string">&quot;beans&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setXml</span><span class="token punctuation">(</span><span class="token string">&quot;mapper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// 整合以上配置</span>
	<span class="token class-name">AutoGenerator</span> ag <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AutoGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setGlobalConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dsConfig<span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setStrategy</span><span class="token punctuation">(</span>stConfig<span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">setPackageInfo</span><span class="token punctuation">(</span>pkConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>

	ag<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行上面的测试方法，结果如下：</p><figure><img src="http://img.hl1015.top/blog/image-20211130140204388.png" alt="image-20211130140204388" tabindex="0" loading="lazy"><figcaption>image-20211130140204388</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211130140232348.png" alt="image-20211130140232348" tabindex="0" loading="lazy"><figcaption>image-20211130140232348</figcaption></figure><p>生成的 xxxMapper.xml 文件中帮我们开启了二级缓存，我们不需要使用，可以自行注释</p><figure><img src="http://img.hl1015.top/blog/image-20211130145233077.png" alt="image-20211130145233077" tabindex="0" loading="lazy"><figcaption>image-20211130145233077</figcaption></figure><h2 id="_3-serviceimpl-说明" tabindex="-1"><a class="header-anchor" href="#_3-serviceimpl-说明" aria-hidden="true">#</a> 3. ServiceImpl 说明</h2><p>EmployeeServiceImpl 继承了 ServiceImpl 类，MyBatis-Plus 通过这种方式为我们注入了 EmployeeMapper，这样可以使用 service 层默认为我们提供的很多方法，也可以调用我们自己在 dao 层编写的操作数据库的方法。</p><figure><img src="http://img.hl1015.top/blog/image-20211130140956711.png" alt="image-20211130140956711" tabindex="0" loading="lazy"><figcaption>image-20211130140956711</figcaption></figure><figure><img src="http://img.hl1015.top/blog/image-20211130141125375.png" alt="image-20211130141125375" tabindex="0" loading="lazy"><figcaption>image-20211130141125375</figcaption></figure>`,23),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","mybatis-plus-6.html.vue"]]);export{k as default};
